(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    707216,      12870]
NotebookOptionsPosition[    691263,      12533]
NotebookOutlinePosition[    692044,      12558]
CellTagsIndexPosition[    691962,      12553]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["HCCellGraph", "ObjectName",
 CellChangeTimes->{{3.905996341031257*^9, 3.9059963428035746`*^9}},
 CellID->714267441,ExpressionUUID->"a50f63d9-64c4-4989-b406-103e2f77c303"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"f6253c37-c949-416c-8728-6544574a6334"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["HCCellGraph",
    BaseStyle->"Link",
    ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCCellGraph"], 
   "[", 
   StyleBox["assoc", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "a8a7a20e-a992-45b2-8cc5-81f4e671dd6e"],
 "\[LineSeparator]represents a cell graph with its properties defined by the ",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "328403db-201d-4711-b895-ac79858911f0"],
 " ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",ExpressionUUID->
  "2ff5bcb3-c3a8-4591-8b12-ccc344349d8b"],
 " as specified below"
}], "Usage",
 CellChangeTimes->{{3.905653328613106*^9, 3.905653336186411*^9}, {
   3.9056533921030784`*^9, 3.9056533921030784`*^9}, 3.9056534278066263`*^9, {
   3.9056537171780663`*^9, 3.905653737507779*^9}, {3.9056537705900564`*^9, 
   3.9056537705900564`*^9}, {3.9056538322106085`*^9, 
   3.9056538322106085`*^9}, {3.9056545772526565`*^9, 
   3.9056546101344037`*^9}, {3.9056546926099353`*^9, 
   3.9056547041964874`*^9}, {3.905654765419244*^9, 3.905654765792746*^9}, {
   3.905848149718607*^9, 3.9058481690415077`*^9}, {3.9058484848696957`*^9, 
   3.9058484943746166`*^9}, {3.905996345281186*^9, 3.905996361805724*^9}, {
   3.9059964391108193`*^9, 3.9059964458532257`*^9}, {3.905996496385024*^9, 
   3.9059965468696156`*^9}},
 CellID->352873481,ExpressionUUID->"ab90c281-322b-4d87-ab9a-78fc7e5c0b68"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "2072e718-4154-4a44-8f84-10226958e8c1"],
 " ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",ExpressionUUID->
  "a3c04781-591b-4fd4-be97-8698bba40238"],
 " of a cell graph has the following keys:"
}], "Notes",
 CellChangeTimes->{{3.905668884321773*^9, 3.9056689303746915`*^9}, {
   3.9058296738347907`*^9, 3.9058296769656076`*^9}, {3.905996567562484*^9, 
   3.9059965727716603`*^9}, 3.9060001329598026`*^9, {3.9060001909543123`*^9, 
   3.906000210843789*^9}},
 CellID->350026957,ExpressionUUID->"c1ffea9c-db1e-4de3-9d44-da3b0074e3a2"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "e2c51264-b552-41b4-9853-23d45196df16"], Cell[TextData[StyleBox[
    "\"TriangleGroup\"", "InlineCode"]], "TableText",ExpressionUUID->
     "055ce481-7d3f-463d-96d4-331c818a1cec"], Cell[TextData[{
     "list ",
     StyleBox["{r, q, p}", "InlineCode"],
     " representing the signature of the triangle group"
    }], "TableText",ExpressionUUID->"5218d044-d8a1-49b0-a092-9222e8a41863"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "41ad96df-6a4f-4df0-8467-214d9cfe1b9c"], Cell[TextData[StyleBox[
    "\"CellCenter\"", "InlineCode"]], "TableText",ExpressionUUID->
     "1ee239ed-7a2a-4c2c-993b-96f083eed48c"], Cell["\<\
center of the cell, integer between 1 and 3 representing a vertex of type x, \
y, or z, respectively\
\>", "TableText",ExpressionUUID->"597b646e-a616-48a0-b66b-9a14e4b0697f"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "5fb7429d-e17a-4a13-836b-ffa3888696d7"], Cell[TextData[StyleBox[
    "\"Genus\"", "InlineCode"]], "TableText",ExpressionUUID->
     "4ce21104-7791-4e46-b693-d63c548e0fad"], Cell[
    "genus of the surface on which the cell is compactified", "TableText",
     ExpressionUUID->"097f0a8c-1ac1-4c75-9e4c-b7b28c9ab83f"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "c8335da0-82b4-480c-a82c-3932f61b2279"], Cell[TextData[StyleBox[
    "\"Graph\"", "InlineCode"]], "TableText",ExpressionUUID->
     "c22cdf1d-da91-4628-abe3-ad903e46ad81"], Cell[TextData[{
     "directed ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "8574dc55-1d7b-45f7-80a2-1cfc63ec0f10"],
     " representing the cell graph with vertex coordinates in the Poincar\
\[EAcute] disk and canonical edge orientation"
    }], "TableText",ExpressionUUID->"842fecfe-272a-49b3-a6e3-e35a2ee33dae"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "357b9a6c-18c7-4517-835f-5859d0faef81"], Cell[TextData[StyleBox[
    "\"VertexLabels\"", "InlineCode"]], "TableText",ExpressionUUID->
     "b8dd65f1-0472-491e-8ddb-f275738954ee"], Cell[TextData[{
     "list of vertex labels, i.e., elements of ",
     Cell[BoxData[
      RowBox[{
       StyleBox[
        SubscriptBox["T", 
         SuperscriptBox["G", 
          StyleBox["+",
           FontSlant->"Plain"]]],
        FontSlant->"Italic"], 
       RowBox[{"(", 
        SubsuperscriptBox[
         StyleBox["G",
          FontSlant->"Italic"], 
         StyleBox["w",
          FontSlant->"Italic"], "+"], ")"}]}]], "InlineFormula",
      ExpressionUUID->"93ac97c1-e2a4-4800-80e4-5d4236b194a7"],
     " given as strings representing words in the generators ",
     StyleBox["x, y, z ",
      FontSlant->"Italic"],
     "of the proper triangle group in the same order as the vertices in the \
graph"
    }], "TableText",ExpressionUUID->"eeae3e8b-ea5e-459b-a438-fab5ae8d255d"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "b6c8ad49-3ce5-4c55-bf1d-96351acfb06f"], Cell[TextData[StyleBox[
    "\"SchwarzTriangleLabels\"", "InlineCode"]], "TableText",ExpressionUUID->
     "20103721-07ba-43d9-970c-3ab1fce2ee34"], Cell[TextData[{
     "list of labels of the Schwarz triangles in the cell, i.e., elements of ",
     Cell[BoxData[
      RowBox[{
       StyleBox[
        SubscriptBox["T", 
         StyleBox[
          SuperscriptBox[
           StyleBox["\[CapitalDelta]",
            FontSlant->"Plain"], "+"],
          FontSlant->"Plain"]],
        FontSlant->"Italic"], 
       RowBox[{"(", "\[CapitalGamma]", ")"}]}]], "InlineFormula",
      ExpressionUUID->"dc37d3dc-bdf7-485c-9479-0d784741b80a"],
     " given as string representing words in the generators ",
     StyleBox["x, y, z ",
      FontSlant->"Italic"],
     "of the proper triangle group"
    }], "TableText",ExpressionUUID->"b95e8dc6-2118-4cde-8f2d-bfd7ac0b698a"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "16cdf58c-7cdd-47e3-add0-9617649d0a51"], Cell[TextData[StyleBox[
    "\"EdgeTranslations\"", "InlineCode"]], "TableText",ExpressionUUID->
     "749d7e46-121b-4ed4-a963-17ed69bdf1d9"], Cell[TextData[{
     "list of translations associated with the edges in the same order as the \
eges in the graph; given as words in the generators ",
     StyleBox["\"g1\", \"g2\", ... ", "InlineCode"],
     "of the translation group"
    }], "TableText",ExpressionUUID->"9dcd047e-4b64-4320-a3b0-1f53ed968609"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "08a0aec9-f532-4c0d-a4ef-86df618e641a"], Cell[TextData[StyleBox[
    "\"BoundaryEdges\"", "InlineCode"]], "TableText",ExpressionUUID->
     "8dba3387-5392-410f-bed5-223296ce6e24"], Cell[TextData[{
     "list of boundary specifications: each boundary is of the form ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["d", "1"]}]], "InlineFormula",ExpressionUUID->
      "99c57d16-09d4-45f0-ab03-d3b5e9844b8f"],
     StyleBox[", ", "InlineCode"],
     Cell[BoxData[
      SubscriptBox["d", "2"]], "InlineFormula",ExpressionUUID->
      "cd037b03-4b2a-423e-8cff-17e3a05b535c"],
     StyleBox[", e, b, m, \[Gamma]}", "InlineCode"],
     ", where ",
     Cell[BoxData[
      SubscriptBox["d", "i"]], "InlineFormula",ExpressionUUID->
      "5dd7b4e5-50de-47cb-a10b-08d76778b624"],
     " are labels of the Schwarz triangles the edge is part of, ",
     StyleBox["e", "InlineCode"],
     " the position of the edge in ",
     Cell[BoxData[
      ButtonBox["EdgeList",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "5bf941f0-ac1b-40c7-ae54-4a6f2c3b7b7a"],
     " of the graph, ",
     StyleBox["b", "InlineCode"],
     " a running index labeling the piece of the boundary, ",
     StyleBox["m", "InlineCode"],
     " either ",
     StyleBox["0", "InlineCode"],
     " or ",
     StyleBox["1", "InlineCode"],
     " indicating the orientation (gray, white) of the triangle associated \
with the edge, and ",
     StyleBox["\[Gamma]", "InlineCode"],
     " the translation relating the given to the identified boundary"
    }], "TableText",ExpressionUUID->"e90abe76-ff33-4fc4-9e5a-4b4dce97c572"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "f5d896bd-b352-4bb9-8c58-21c693462870"], Cell[TextData[StyleBox[
    "\"TranslationGenerators\"", "InlineCode"]], "TableText",ExpressionUUID->
     "50d0e592-0677-455e-ba71-05e5123ec66a"], Cell[TextData[{
     Cell[BoxData[
      ButtonBox["Association",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "fc711172-c80a-4542-a6c5-a4bd651e57dd"],
     " with the translation generators ",
     StyleBox["\"g1\", \"g2\", ...", "InlineCode"],
     " as keys and their representation in the proper triangle group as values"
    }], "TableText",ExpressionUUID->"419ae96c-fd68-4a09-a387-ec3586c73cb9"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "bb195aa5-12f0-472b-aaa7-54b532be9acf"], Cell[TextData[StyleBox[
    "\"Faces\"", "InlineCode"]], "TableText",ExpressionUUID->
     "8955939d-c87d-4a90-9fc5-45cf69a1733c"], Cell[TextData[{
     "list of oriented faces covering a gray and white Schwarz triangle, each \
given as directed ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "3612a790-e8da-4b31-8ee0-4f237fc964cd"],
     ", where edge tags are multiplied by -1 if they have been inverted with \
respect to the edges of the cell graph"
    }], "TableText",ExpressionUUID->"c29035f8-0e93-420c-b711-8a880fd32a7d"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "813473f4-6fb1-46a9-bf1d-323298a1a0ce"], Cell[TextData[StyleBox[
    "\"FaceEdges\"", "InlineCode"]], "TableText",ExpressionUUID->
     "874e3615-6d0f-4796-8e53-d3811a644d6c"], Cell[TextData[{
     "list of lists of ",
     Cell[BoxData[
      ButtonBox["DirectedEdge",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "93495ce0-32b5-4a45-8365-40c49278701d"],
     " objects, each in the same orientation as in the cell graph"
    }], "TableText",ExpressionUUID->"9edfa2b5-c3fe-4282-a412-4b40b4a7b62b"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "20f1ca54-a9d4-4d4d-a7da-6cadaea8fe94"], Cell[TextData[StyleBox[
    "\"AllFaces\"", "InlineCode"]], "TableText",ExpressionUUID->
     "6131f8fb-0a78-4d59-a99b-8544f804e75c"], Cell[TextData[{
     "list of list of oriented faces, where the first/second/third list \
contains faces such that the gray and white triangle share a vertex of type ",
     StyleBox["x",
      FontSlant->"Italic"],
     "/",
     StyleBox["y",
      FontSlant->"Italic"],
     "/",
     StyleBox["z.",
      FontSlant->"Italic"]
    }], "TableText",ExpressionUUID->"270b383f-ac30-4e05-8c05-b07573f0252b"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.905669148202936*^9, 3.905669290809169*^9}, {
  3.9056693540622597`*^9, 3.9056693775119796`*^9}, {3.905669585274537*^9, 
  3.905669957953737*^9}, {3.905825070299544*^9, 3.9058251433794518`*^9}, {
  3.9058252319481974`*^9, 3.9058255030191603`*^9}, {3.9058262771795874`*^9, 
  3.9058263486616287`*^9}, {3.9058263930059557`*^9, 3.905826460589053*^9}, {
  3.9058266794413033`*^9, 3.90582671462323*^9}, {3.9058267463975253`*^9, 
  3.9058267463975253`*^9}, {3.905826796487712*^9, 3.905826996850445*^9}, {
  3.90582704007017*^9, 3.9058271527319884`*^9}, {3.9058297387684174`*^9, 
  3.9058297697236443`*^9}, {3.9058312222420187`*^9, 3.9058312222420187`*^9}, {
  3.905841041166445*^9, 3.9058410414307966`*^9}, {3.9058412514722376`*^9, 
  3.9058412514722376`*^9}},
 CellID->192372380,ExpressionUUID->"6e29fb2a-47c2-407c-930b-d2e4a19d3f1b"],

Cell[TextData[{
 "Vertices are given in the form ",
 StyleBox["{w, gi}", "InlineCode"],
 ", where ",
 StyleBox["w", "InlineCode"],
 " is an integer between 1 and 3 indicating the type of vertex of the Schwarz \
triangle (",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", ",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and ",
 StyleBox["gi", "InlineCode"],
 " is the position in the transversal ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["T", 
     SuperscriptBox["G", 
      StyleBox["+",
       FontSlant->"Plain"]]],
    FontSlant->"Italic"], 
   RowBox[{"(", 
    SubsuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], 
     StyleBox["w",
      FontSlant->"Italic"], "+"], ")"}]}]],ExpressionUUID->
  "e162c3a4-4020-4097-9416-6c33a01a7da0"],
 " labeling the Schwarz triangle the vertex is a part of."
}], "Notes",
 CellChangeTimes->{{3.905841197283508*^9, 3.9058413811453133`*^9}},
 CellID->23569687,ExpressionUUID->"031e25aa-f908-444e-a162-023247731030"],

Cell[TextData[{
 "Each edge has a tag specifying the (gray) Schwarz triangle it is a part of \
by the position in the transversal ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["T", 
     StyleBox[
      SuperscriptBox[
       StyleBox["\[CapitalDelta]",
        FontSlant->"Plain"], "+"],
      FontSlant->"Plain"]],
    FontSlant->"Italic"], 
   RowBox[{"(", "\[CapitalGamma]", ")"}]}]], "InlineFormula",ExpressionUUID->
  "b0b2dde1-0bda-4f70-8d38-c7546e4021fd"],
 "."
}], "Notes",
 CellChangeTimes->{{3.905841389616559*^9, 3.905841499680417*^9}},
 CellID->39466738,ExpressionUUID->"11136ea8-b3fd-4844-b757-3d5f40b919f6"],

Cell[TextData[{
 "Values can be accessed as follows: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    ButtonBox["HCellGraph",
     BaseStyle->"Link",
     ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCellGraph"], 
    "[", 
    StyleBox["assoc", "TI"], "]"}], "[", 
   "\"\<\!\(\*StyleBox[\"key\", \"TI\"]\)\>\"", "]"}]], "InlineFormula",
  ExpressionUUID->"c8f4689d-13be-4e03-b2e7-449af4f78c16"],
 "."
}], "Notes",
 CellChangeTimes->{{3.9060011778708534`*^9, 3.9060012209061117`*^9}, {
  3.9060012565376244`*^9, 3.9060012660179677`*^9}, {3.90600147606487*^9, 
  3.906001480731784*^9}},
 CellID->154853298,ExpressionUUID->"d89a89a6-5a0f-4a82-8962-e241a5da3349"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "ca142408-73ca-43b5-b7db-7d1cd4f04735"]
}], "TechNotesSection",
 CellID->785480147,ExpressionUUID->"9fd73f94-9f8f-4710-a3ee-c0de34c1747e"],

Cell[TextData[ButtonBox["Basic Usage",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PatrickMLenggenhager/HyperBloch/tutorial/BasicUsage"]], "Tutorials",
 CellChangeTimes->{3.9066250819297*^9},
 CellID->151400,ExpressionUUID->"f6ef3a7a-cf5b-4035-b87e-caa0f3a6f08a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f07f6c16-536e-413a-a3a1-22d229c29638"]
}], "RelatedLinksSection",
 CellID->380438368,ExpressionUUID->"b98f7b94-2a85-4742-a95b-c1bc1deac6f4"],

Cell["XXXX", "RelatedLinks",
 CellID->158160376,ExpressionUUID->"b4e60018-f294-4783-b512-d8b40111ea3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "4fd3f396-d0f7-4d8a-871d-9740e42b84f3"]
}], "SeeAlsoSection",
 CellID->118117987,ExpressionUUID->"919c7973-d17b-4596-adc4-debd60d1e4fc"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ImportCellGraphString",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/ImportCellGraphString"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "58f55304-a362-45b3-ad5f-cab9988712a7"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["VisualizeCellGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/VisualizeCellGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"4128fb87-ff21-419e-bde0-e2065fd7301d",ExpressionUUID->
  "b3b52450-9604-4766-8485-c3b46c436e4f"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["GetCellGraphFace",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/GetCellGraphFace"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"7e046a4b-2bcc-4d2c-a8bc-164bfdf48932",ExpressionUUID->
  "c025990b-a8c1-4b66-aa7c-8798ffb341cf"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["HCModelGraph",
   BaseStyle->"Link",
   ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCModelGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"0fa67205-8504-4842-8f08-d33ca71c8a0f",ExpressionUUID->
  "a2a6a89c-86d5-4a09-a5a3-37dc15265075"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["HCSupercellModelGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/HCSupercellModelGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"118883bc-21ef-4a20-85be-c5d4de50dda5",ExpressionUUID->
  "bba5a420-8f9d-4251-ae69-09c1eb415d40"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "6dea4e6d-8aa5-4f74-a3a4-a43126b14a49"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "4940b8d9-1a19-4b02-a347-22f923d96f3c", 
     "d17fb755-22f1-4289-962e-0e7a4fa580ca"], $CellContext`cellobj$$ = 
    CellObject[
    "011b4e46-8691-485f-a448-7a615fda099e", 
     "0e244cd5-2145-449f-a952-262653759273"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "011b4e46-8691-485f-a448-7a615fda099e"]
}], "SeeAlso",
 CellChangeTimes->{{3.9058300934718146`*^9, 3.905830102420785*^9}, {
  3.905842807700723*^9, 3.9058428261815677`*^9}, {3.9059340485022664`*^9, 
  3.905934058747425*^9}, {3.905940586767951*^9, 3.905940608504794*^9}, {
  3.906001276082044*^9, 3.906001302439892*^9}, {3.9060015425469112`*^9, 
  3.9060015702095056`*^9}},
 CellID->504977350,ExpressionUUID->"356f1aaa-c00a-473c-934f-c4273ebb5b0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellChangeTimes->{{3.843042374232973*^9, 3.843042375545676*^9}},
 CellID->17695889,ExpressionUUID->"3985363b-81b8-4e98-a1a5-13589a4a1746"],

Cell[TextData[ButtonBox["HyperBloch Package",
 BaseStyle->"Link",
 ButtonData->
  "paclet:PatrickMLenggenhager/HyperBloch/guide/HyperBlochPackage"]], \
"MoreAbout",
 CellChangeTimes->{3.9066250901497097`*^9},
 CellID->542581366,ExpressionUUID->"dd0ae97e-deb2-4f7c-9673-9556282e1db3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "21d7bd43-2923-4e51-8063-86a11dbf1ea6"]
}], "ExamplesInitializationSection",
 CellID->28881273,ExpressionUUID->"db687b28-3a2b-48ed-b118-ca7ba3b6ed86"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PatrickMLenggenhager`HyperBloch`\>\"", 
  "]"}]], "ExampleInitialization",
 CellChangeTimes->{{3.905654924921601*^9, 3.9056549270881653`*^9}, {
  3.905654999482127*^9, 3.9056550017127113`*^9}, {3.9056553859125123`*^9, 
  3.9056553914021893`*^9}, {3.905668775175252*^9, 3.905668783751614*^9}, {
  3.905830709060993*^9, 3.9058307095223665`*^9}, {3.9064299740579863`*^9, 
  3.9064299745608053`*^9}},
 CellID->318279014,ExpressionUUID->"3ec8a1ef-81bb-42f6-bd40-9dc0138e000c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->65331860,ExpressionUUID->"feb5a5e6-f6e5-4fbb-94bd-1cfad59bb277"],

Cell[TextData[{
 "Access the properties of an ",
 Cell[BoxData[
  ButtonBox["HCCellGraph",
   BaseStyle->"Link",
   ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCCellGraph"]], 
  "InlineFormula",ExpressionUUID->"f10967aa-967d-4c9d-8e2f-612c27b0ae58"],
 " such as its triangle-group signature, cell center, and genus:"
}], "ExampleText",
 CellChangeTimes->{{3.905829951735175*^9, 3.9058299840594935`*^9}, {
  3.9060032618852234`*^9, 3.906003293861715*^9}, {3.9064301048292913`*^9, 
  3.906430109280244*^9}},
 CellID->598674459,ExpressionUUID->"e4277e55-d2e2-48bb-8d3d-2e07330e52a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.9056549635456734`*^9, 3.9056549765388603`*^9}, {
   3.9056688114950953`*^9, 3.9056688255675507`*^9}, {3.905827217969784*^9, 
   3.9058272185619893`*^9}, 3.905830713640563*^9, {3.9062020582438755`*^9, 
   3.9062020641191072`*^9}, 3.906202110626192*^9},
 CellLabel->"In[1]:=",
 CellID->424664287,ExpressionUUID->"96a1f24b-6816-4c97-ae22-f627f1ac294c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cellgraph", "[", "\"\<TriangleGroup\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cellgraph", "[", "\"\<CellCenter\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cellgraph", "[", "\"\<Genus\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.905829974382963*^9, 3.9058300057031765`*^9}},
 CellLabel->"In[2]:=",
 CellID->457102273,ExpressionUUID->"d049d3a6-aa19-460b-8ed2-844d142cab86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "8", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.9058299947589707`*^9, 3.905830006232775*^9}, 
   3.905831650876513*^9, 3.9058318259729147`*^9, 3.9058335340422935`*^9, 
   3.906202116303746*^9, 3.906429985254611*^9},
 CellLabel->"Out[2]=",
 CellID->691577656,ExpressionUUID->"370cf7dc-8d0b-4b8e-b997-56c41191b800"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.9058299947589707`*^9, 3.905830006232775*^9}, 
   3.905831650876513*^9, 3.9058318259729147`*^9, 3.9058335340422935`*^9, 
   3.906202116303746*^9, 3.906429985254611*^9},
 CellLabel->"Out[3]=",
 CellID->277889224,ExpressionUUID->"079a9c49-15d6-4ace-929c-9834da1d606f"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.9058299947589707`*^9, 3.905830006232775*^9}, 
   3.905831650876513*^9, 3.9058318259729147`*^9, 3.9058335340422935`*^9, 
   3.906202116303746*^9, 3.9064299852916126`*^9},
 CellLabel->"Out[4]=",
 CellID->367138058,ExpressionUUID->"9279dab8-f38e-45d2-9f44-78147f4b701c"]
}, Open  ]],

Cell[TextData[{
 "Get the cell graph as a ",
 Cell[BoxData[
  ButtonBox["Graph",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "54e5cf00-b770-4f65-8426-5edb82479ecb"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.905827381002732*^9, 3.905827427208473*^9}},
 CellID->1983750,ExpressionUUID->"eb735601-995f-43dd-993e-db43d9001f5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}]], "Input",
 CellChangeTimes->{
  3.905827222152129*^9, {3.9058273879899025`*^9, 3.905827389700821*^9}, {
   3.9058274293322287`*^9, 3.905827429824544*^9}},
 CellLabel->"In[5]:=",
 CellID->138767692,ExpressionUUID->"5e78b22b-e381-4e17-85f8-c664f8209d7d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{1, {0.3378023603053425, 0.02536937560291487}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{1, {0.2568011971960195, 0.22092348214943944`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           2, {-0.25680119719693395`, 0.22092348214956797`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{2, {-0.3378023603061541, 0.02536937560247319}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           3, {0.22092348214938526`, 0.25680119719604916`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{3, {0.02536937560285223, 0.3378023603053362}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{4, {-0.0253693756033302, 0.33780236030572175`}, 6}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           4, {-0.22092348215000032`, 0.25680119719607797`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.6772494048228729, 0.0826458473215162}, 1}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.758250567932199, 0.16364701043083812`}, 1}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           5, {0.08264584732070052, -0.11290825922545052`}, 2}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.16364701042992177`, 0.3592011169774932}, 2}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.4458175832297086, 0.19952472547741282`}, 3}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.6413716897762445, 0.39507883202397376`}, 3}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           5, {0.19952472547685837`, 0.11852356236815229`}, 4}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{5, {0.3950788320235295, 0.476079995133646}, 4}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685714`, 0.13827763482792507`}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076268578, 0.09893151553078851}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.42044820762685686`, 0.05942536182748782}, 5}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076267947, 0.019819713459349683`}, 5}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.4204482076267947, -0.019819713459349683`}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685686`, -0.05942536182748782}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076268578, -0.09893151553078851}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685714`, -0.13827763482792507`}, 5}], 
          0.01786032812923874]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01786032812923874], DiskBox[2, 0.01786032812923874], 
         DiskBox[3, 0.01786032812923874], DiskBox[4, 0.01786032812923874], 
         DiskBox[5, 0.01786032812923874], DiskBox[6, 0.01786032812923874]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9056688333365917`*^9, 3.9058272235843306`*^9, 
  3.905827394192964*^9, 3.905827430291376*^9, 3.9058318277957106`*^9, 
  3.9058335350091443`*^9, 3.9062021190007453`*^9, 3.906429986738839*^9},
 CellLabel->"Out[5]=",
 CellID->76810869,ExpressionUUID->"ebe7eb87-3309-49f2-81fd-2a4cd425ae2e"]
}, Open  ]],

Cell["\<\
Get the elements of the proper triangle group associated with the vertices:\
\>", "ExampleText",
 CellChangeTimes->{{3.905827465594511*^9, 3.9058274950236664`*^9}},
 CellID->290017938,ExpressionUUID->"4ed0b345-e01e-4664-8ca7-f13f6de716aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cellgraph", "[", "\"\<VertexLabels\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905827496964772*^9, 3.9058275007327175`*^9}},
 CellLabel->"In[6]:=",
 CellID->676423889,ExpressionUUID->"b6888912-a391-41db-89c3-1690546355fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"(y^-1*x^-1)^3\"\>", ",", "\<\"y^-1*x^-1\"\>",
    ",", "\<\"(y^-1*x^-1)^2\"\>", ",", "\<\"1\"\>", ",", "\<\"1\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9058275020283546`*^9, 3.9058318302144985`*^9, 
  3.90583353691946*^9, 3.9064299882054462`*^9},
 CellLabel->"Out[6]=",
 CellID->83554973,ExpressionUUID->"48aa55cc-444b-4f43-a860-2bbd7859be4a"]
}, Open  ]],

Cell["\<\
Get the elements of the proper triangle group labeling the Schwarz triangles \
in the cell:\
\>", "ExampleText",
 CellChangeTimes->{{3.905833512515422*^9, 3.905833529460494*^9}},
 CellID->416043477,ExpressionUUID->"4e1d35bd-81a4-4a57-b444-ec97d33dd0a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cellgraph", "[", "\"\<SchwarzTriangleLabels\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9058335490986423`*^9, 3.9058335582343364`*^9}},
 CellLabel->"In[7]:=",
 CellID->212050636,ExpressionUUID->"ec65a918-a425-4ea4-998d-f9cd6546507c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"y^-1*x^-1\"\>", ",", "\<\"(y^-1*x^-1)^2\"\>",
    ",", "\<\"(y^-1*x^-1)^3\"\>", ",", "\<\"(y^-1*x^-1)^4\"\>", 
   ",", "\<\"(y^-1*x^-1)^5\"\>", ",", "\<\"(y^-1*x^-1)^6\"\>", 
   ",", "\<\"(y^-1*x^-1)^7\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.905833549396777*^9, 3.905833558795764*^9}, 
   3.906429989998938*^9},
 CellLabel->"Out[7]=",
 CellID->129529377,ExpressionUUID->"d97d41b5-89c2-428c-a582-e56201c1a72a"]
}, Open  ]],

Cell["Find the translation associated to a specific edge:", "ExampleText",
 CellChangeTimes->{{3.9058276775524907`*^9, 3.905827689631528*^9}},
 CellID->549014001,ExpressionUUID->"c23d7427-5f48-486a-8410-deb3f38a17cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EdgeList", "[", 
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}], "]"}], "[", 
  RowBox[{"[", "13", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellgraph", "[", "\"\<EdgeTranslations\>\"", "]"}], "[", 
  RowBox[{"[", "13", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.905827693303321*^9, 3.905827781566966*^9}},
 CellLabel->"In[8]:=",
 CellID->337642245,ExpressionUUID->"f1605d53-febe-4368-85bf-1d8cf8c6a482"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], 
   RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], "5"},
  "DirectedEdge"]], "Output",
 CellChangeTimes->{{3.905827709497305*^9, 3.9058277817765155`*^9}, 
   3.905831831242347*^9, 3.9064299917785196`*^9},
 CellLabel->"Out[8]=",
 CellID->453683930,ExpressionUUID->"8c94db96-d248-4959-bb50-51e742ff0885"],

Cell[BoxData["\<\"g1\"\>"], "Output",
 CellChangeTimes->{{3.905827709497305*^9, 3.9058277817765155`*^9}, 
   3.905831831242347*^9, 3.9064299918183575`*^9},
 CellLabel->"Out[9]=",
 CellID->57056107,ExpressionUUID->"23e40a16-0f16-44c8-9c85-12b5fe46e4f6"]
}, Open  ]],

Cell["\<\
Get the translation in terms of elements of the proper triangle group:\
\>", "ExampleText",
 CellChangeTimes->{{3.905827792082692*^9, 3.9058278096805544`*^9}},
 CellID->203547541,ExpressionUUID->"f91c9d4f-b39e-4ff4-bec6-39439eaab23a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cellgraph", "[", "\"\<TranslationGenerators\>\"", "]"}], "[", 
  "\"\<g1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9058278168061867`*^9, 3.905827820986105*^9}},
 CellLabel->"In[10]:=",
 CellID->249529850,ExpressionUUID->"97d256db-ae80-48a7-83d8-a1ca46c96a57"],

Cell[BoxData["\<\"(z^-1*x^-1*y*z^-1*y*z*y*x^-1)\"\>"], "Output",
 CellChangeTimes->{3.9058278213769403`*^9, 3.9058318323909445`*^9, 
  3.906429994294495*^9},
 CellLabel->"Out[10]=",
 CellID->308194891,ExpressionUUID->"3f2ac5ca-3127-4895-90f3-19365ecd25f6"]
}, Open  ]],

Cell["Get information about the boundary edges:", "ExampleText",
 CellChangeTimes->{{3.905833575615217*^9, 3.9058335831729503`*^9}},
 CellID->141332292,ExpressionUUID->"d8d029f0-fe28-459c-a20f-513a2f6898f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cellgraph", "[", "\"\<BoundaryEdges\>\"", "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9058336200549803`*^9, 3.905833628556671*^9}},
 CellLabel->"In[11]:=",
 CellID->140806741,ExpressionUUID->"0875b69a-fd68-4306-8f15-d0e701dd72b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"(y*x)^3*y\"\>", ",", "\<\"(y*x)^3*y\"\>", ",", "2", ",", "1", 
   ",", "1", ",", "\<\"g1^-1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.905833624677581*^9, 3.905833629090757*^9}, 
   3.906429995675644*^9},
 CellLabel->"Out[11]=",
 CellID->322380307,ExpressionUUID->"9dde63db-1bc3-4040-8308-118fb0df50d8"]
}, Open  ]],

Cell["Get a face covering gray and white triangle:", "ExampleText",
 CellChangeTimes->{{3.9058278344286675`*^9, 3.905827846674279*^9}},
 CellID->453874717,ExpressionUUID->"c9870ec2-b1f7-4f74-833c-620dca255a57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cellgraph", "[", "\"\<Faces\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9058278475703936`*^9, 3.905827851875287*^9}},
 CellLabel->"In[12]:=",
 CellID->65562953,ExpressionUUID->"2d6c0608-a22c-4228-95d6-369ea923d212"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 1}, {2, 1}, {1, 
      1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdkW1IU3EUxrdlQqWohPmCr1/CoCAyteX0rKZNEvRmtDCERmWI+NKymK0y
zCKFrNTAkHAoixni2FWzQdMjMUIJU7H6YpTV3ppWpgaKu66Cw4V/F/5cHjic
8/yeJ/lMdVGpTCKRqP6+f///v6KI66eU0kUIyU1qOX3rhKLV+dMdCAQg7OPg
+4xZjULL6QTTthcwd2wyqvlHN2jmvgxVrI4Clzaz2HvWDP2XU2ZtegfMjYZ9
t+/pBWvuy7cm6Rhon01Y649a4GLB3cPRD18Dd2UsK6LEConZHUO/d09CinHQ
2H6QhxrbufXQ0mm48LQqixvlQZY3bhzYPwONj/S++QUezHWRrp1lblFXv1I/
Xyv0iPPJbcfVqgyvuC8k7KTJEP9NvKdoGb8RJfMBR34Um/fWtTp9MEV+28oP
3Sl1zIOSeB6v5keGdC3AFPF2kCZ+fEDzxI9y2kf8KKd7xI9bWD+YwPrFCpYH
TSwv+tVMHljJ5oXb2TzxPJs3mqgP4kcz9UX8mE99Ej/mUd/Ej5XqEf8Q/wu0
DmVM+3w3dB1olq0lLkFSgdSwSWuGgXpN8PT9JeBie0au7eqFjbTOSb9kGcLj
ilyOXAtU5dlL5DXLkNL5JPNmsRUCnsatKvcyWG0xU64MHuKvltnfFa+A9sPX
hqZhHjwNxqC+iRWIlnrSE3w8BHQTirbUdVGPG4Jul5vXxXlvqDNdiPWL+2r7
rM7ge37xnhff6FQSASTkJ/XSjsxqnQBK8ntk+FO2+rMA4cRjsFhymgo3gCPe
WtLEjzk0T/y4j/YRP7rpHvGjnvWDbtYvjrE8uMHyopvNA+PYvFBg88RKNm8U
qA/ix37qi/jRSH0SP1ZQ38SPfwCSBR2h
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{1, {0.5001527564386761, 0.1644909859489427}, 2}], 
          0.022611464210583382`], 
         ArrowBox[
          BezierCurveBox[{2, {0.5001527564386753, -0.16449098594894232`}, 1}],
           0.022611464210583382`], 
         ArrowBox[
          BezierCurveBox[{2, {1.5001527097553522`, 0.16439049306400907`}, 3}],
           0.022611464210583382`], 
         ArrowBox[
          BezierCurveBox[{3, {1.5001527097553498`, -0.1643904930640094}, 2}], 
          0.022611464210583382`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.022611464210583382], DiskBox[2, 0.022611464210583382], 
         DiskBox[3, 0.022611464210583382]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.90582785247462*^9, 3.905831834479821*^9, 
  3.9064299970076513`*^9},
 CellLabel->"Out[12]=",
 CellID->164972484,ExpressionUUID->"ecc72b37-cfb2-4193-9dad-7f170d4876e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4e1c5122-1370-40a8-9fca-7c082d5cfaff"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->821076258,ExpressionUUID->"796be192-0fac-4e20-bf7a-e1ee0320be6b"],

Cell[TextData[{
 "Use the high-level visualization function ",
 Cell[BoxData[
  ButtonBox["VisualizeCellGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/VisualizeCellGraph"]], 
  "InlineFormula",ExpressionUUID->"1ce76679-12b2-4151-9eaa-c3bbe6868ebf"],
 " to visualize the ",
 Cell[BoxData[
  ButtonBox["HCCellGraph",
   BaseStyle->"Link",
   ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCCellGraph"]], 
  "InlineFormula",ExpressionUUID->"e20f21e6-c43f-4759-89f5-131939564195"],
 " and its properties:"
}], "ExampleText",
 CellChangeTimes->{{3.90583302635153*^9, 3.9058330517860765`*^9}, 
   3.905833130625828*^9, {3.9060027939278994`*^9, 3.90600279483261*^9}},
 CellID->117330499,ExpressionUUID->"ad7b1b91-fb9c-493d-9101-9316714be972"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"VisualizeCellGraph", "[", 
  RowBox[{"cellgraph", ",", " ", 
   RowBox[{"Elements", "->", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ShowCellBoundary", "->", 
       RowBox[{"{", 
        RowBox[{"ShowEdgeIdentification", "->", "True"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ShowCellGraph", "->", " ", 
       RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", "300"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9058330559921193`*^9, 3.9058330718918524`*^9}, 
   3.905833148581699*^9, {3.9064300014938374`*^9, 3.906430002779865*^9}},
 CellLabel->"In[1]:=",
 CellID->80828223,ExpressionUUID->"174b9b66-c98a-495d-9d63-0e53d8691767"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
0B0dWyXB/OnpdDqlyXFp2vxPB52m9P7+Tip0R8dWSdBWceD048zTf6N+krmE
AADUmVoXzCeyK/1Yvna7bfF7o1RoPLMMd+UfHXrpaaGhSMryjzmnoV1SKtzt
dlb2EREro0NvT1PKb896bUwmE6dHo+xOp9N+v/e9FQAAuPL5+cn7YYtGo1H6
Zpj1rpmo2gxL2Of39vb2588fi4v36aNS9uGmzIO6eOyuSqnLxqxcKi6t12uL
Uf1S+nd3uqtn/fDhcMhS9Y/M5/PVauV7KwAAcGW/30cTo2gMWJFpPQh3a0Or
YW9rylLdvL+/f39/Wz8j6Zvo6ZeHy/TyIaVms8n6dGb+/PnjrvCvPjn9lphV
HFKMZfDwXbqrkwcBANUWrYZG1UErMnXZWKkqk0BhfzKZsDhFGspBimxZV5ZP
fyLSXxiZ4pijeaPaWuViBpOnoaOkW6jrCbzz+Tz9Jul6M/sW3SuermdRN0qC
WY8/AACls1wu48YAb0HzUKDO2gD78+eP6606nU46xYPBwO7wwmrQMen3+4vF
wmn/eKa+2kx5MOWcRGOKyZPJxOK42cqIqvsWM2NXV2nWzTPeMH3XdDp1ccRK
KlpPllkVAIDKi2ecqTGgRg5jR80o3GVtfWUaBpaTWrBq1Vgvc1FSvV5PYSrn
+hFpxO9bUso6XDP/2hNp6BZRwLuLUtBlU/AU3eFwmHUjo1EfxliOJBLP0mUQ
NQCg8qbT6WVjoNPpOBo4V21mUav4UXlq5Kht/3Rh9Erqdru62gtr66ZcY+JS
1panrbUnUtIBVCBydLhCNp/PHRWKecrgcjV4N3Wl0WgwSDJ+Mrqb6w0AQCBu
axVGo4boKMzEbEBmv9/3tcE677PZzOISaWGKZsNpT4vv8rh605KGQU9E8bWD
dEjb7bbFxTjCpL1TsPJbsLfT6Rhs+W63s/LturTqvNRC/DLH7CwAAFAud5uU
ehpSgj4lg8mDMe+Nam3A9/f35+dnpvqogdO+aI+0X74Ob6YyMjGDPKgd9Jjo
W61WNAfTxTH0QvuiPQqkEJPxHdjW9tf23eB6vb48CN7v0gAAuDafzx+1B9Q0
YvjoU2rGG7e4gloPOs6G3W63XP2G2lplwPF4rPZ8CLOfzLrtzGYqJfz9FinK
htqYcjWetbW6ZgaDgbY/qGu+2Wwa71RUCMWWt7e3KkX+NK7WiHGxDA0AAEF5
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
/gEgBN/f3ylXLdePZXp9d1f6SJimsExyIU2F3Kfbk6eSjPeniU5HzUuJJitv
slDjrWIjCdMr71nLqdRnXDci38cvXKvVynuFmZRvR+9KM58iuSjo05UHM5WR
yR8GGSMKAJHj8TibzbLOm2s0GvmnXaePhE8HfCZP0EgzzNV4PE+ex6sV+RdM
rLyStlFrUkf0kdrmwfNv3VHvfUlmxuOx74MXtMPh8P7+7vccpXlBeleaZ83H
x0fCJzxduiJ93Zv8YdBWoTwACNzpdFosFsvlcr/fx6NE9DxSO1P/rgSkB1Oe
Vod+PWfdgPQpLLmazWQySfhdPYOSN8O4c1A51G9h6hAqFZTC02sgKLqo1Nop
aSKwpc558BxMHZJMdMXSwH5Kf93JD6wCmI3p1ZY/Hc+cPHs0OcSlKReQ5nOe
ajabahcZHIGUjscjJZUABMX128hGo/H9/Z1nC1NGwuSqINqGhN99emc26xzs
9XoeGz/aKe9Dj0qkRDUu9vu99x6EENQ8D0bm83mJXgt0u13fB6w0lEc8DvLX
RWUWiJ4GseSlJ5MrnqVsS+QMg/1+32lY22w2+gp3nw8Axlz3NeQcd5EyjiUM
+zwej49+Szue/O1mnYNq+XgMg2oqZ91glKLnoj7LCz5FHozoBpVyZrd3TMXK
RI8t4yJm+ek+YzBq4nQ6PX0Pqf169OsJV3LKDJUnDFqZ55Ig6vkNob4cADyy
3W6dNir0jMgzACNNJEweTPLoIfW0Y8igc7DdbvsaDVKixmFovM/0TKZGVOnG
BzpFHrwU/rqiugP7Pkil5PEVkFkkVKRK/thHn/nz8/PoV1KuMZHnr+D9/d3p
mlDxkkAlGosCoJ6iVZCcdhSqyW3cC5MmlyVU8nw0xG4wGCR8qUHnoMcwyJyy
PJIHMvm1WCyoEHuFPHgl8NUoOF/GdGZ9vQvSXTFrr+7TWYSPasLoix79Spo1
go3DYAErSigjx6E+fUkcAPBI92SnC9XpSWFcu+NpJNQt91HefFSkPbmVkrW0
u68wqC+tc6lJW9JUmi2Yx6Zg4MgXd4X5UujpsHw8pbuTl5dCrVYr6wJSi8Ui
4QMfLTnx6Ld08Tx9qhqHQbV28i+PlUAf3uv1LvelFBMTAOD8V/VCp2NUlLMS
JhEkeBoJH7USHw1iSSikpjt5ppaVrzA4Ho8DbAGW0dvbW/GnLwGzBROQBx8J
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
h8OhyCMp5Wqvr+k4VKKTK8IV6ouUq8VDMQyZC54HddlTrtCrCGtqRTs8/pzv
qdNO3oEUvEVXZcEjAEARD/t3irdIl8tlkedRytUu3xRhi+imqCrtR16Moh6U
hsJOmgubB3X/oa6FbwV7kZwbjUahD4kR36MjnPzhz2azItsQ/P4DACjBwy7C
4gvBuypp7mR/7yk4z6JMxYsMuKJwGvpgPIWwY+fC5sEIx0jXUq/XC3iWz1Uo
gPi+ATrZyOKPtuJtAABA/DKKfzqZPuBqKKaTnb2nQosmdLvdSOZ0eFqFGdf8
rb/5UMA8+P7+Hmqvn008c6grNEDR9ywDJxtZ/NEWc3VrAIArGaP+ilc4LL7y
YMrJzmao0KLqy+XS99F4yGthPVwLtU59qDzIUoMli2EOdavVCn0YTO33e99H
w1U/afFHW8D3UQCA0nS73etHQK/XK/7JBScvnCu+MdmC180wp1ZT8KZy/Is2
1k+Q8u9B/i46nU5VBg3WRgw3wBgK6hoqvqjuQ65q6jrZVKbxAkDtXS/A52qI
iEn9UkPFNybbbrdztaklCDuqymG3L8zpr7L82aPlxwRWlwgl7Jj5qqwxkfC6
0kTC1V+Bk8JfOju8ogGAeruukzafz4t/rMMRNV7Xo0/8/v5WZQrhS+iqCxUa
W1sz5a9AUXIejGTVxedUQsbJEE+lLBMlzJ52+FbESb2g6XTqansAABG66O5p
t9tOhiM6HCxazqvjeIrsmVBDvYRjcq1CtXdqqeRulJLzYAxzY5+Wq7ViLXS7
3dB7n0MJkwdfnAZkJ0NGg4xPAACU5mI8iav38w4Hi5bTWrgeNxuzUF2EMcwz
enJllnco83TTARGcw5t2LtWqYOlqUd1su93O1QbrEe/kJV6n0wk+dR0A4E96
w3fVJHM7xaycBnDlamYG6SKMoQ4hSlsUrLQ8qL9xmprBBbkHVqtzUPSULOGw
FK/vfc7VIP9Q41IAACVIbvUO54xPJhMnT5/EeDx2slXZyhkF5FD5XYTxrFMG
t83Fe8rJg7rznE6nEnYHD5W/rmjlRiHerMjtnNux09dVAuw0Gg09KB1uGAAg
Er+/vy9OZwcopLhtVJSzMnW1SsokSn5b2+l0Qu8x/lc5tWVKyIO0MKMyHo99
n/Fzlesc/CsrMru9t+vpdj20o91uj0aj2Wy2Wq222+3uP5vN5uPjQ4/dwWBw
/VuMGgWAWvr+/n5xVFM04Xx6RWnLK1Qu75TZRagvCr27+D9KqC1TQh4Msq4i
7in5z7xynYNOlm8wMZlM3G55MkG+1Wop8q/Xa/MHh3ZZz/ThcJi+L2WqLwDU
z3a77Xa7Dt/4OS/MUs7QOBmNRm63vASlhWW3Y4DhhBppXk+67zxYzlBw5FLO
eMiXqq05mNDjspyD43zW/Pf392azKfKgV4RUMEzemjosdwMAiMFqtXI+8EyP
Hofjjkp7h+xwjYzSlNamKn9iEUwsFgt/J91rHmTgWZxKizylvehzSH9u5Ryc
mMOywuBgMCh5LVQAgFf+Bhzu93snZc1KGxJZuRKjic1mw5F5Wl4nEvrLg6+v
r9VaZeCplFBGWBdA6L20UU5x0Zd/f9eRvy0hDwIAzC2XyyJ1WtQyKW1T3S6T
UZoS1uNot9uh9xJ3tVotT+fdXx5k6fmYlZB6Slszxa3BYOD7yKR4YQIAqBM9
16xLtfR6vdK2s7RaAc55rdBY3cPyPDxNxPOUB0ejkY+thSu+q8o0Go2S18px
pcw3Y9vtNvTuAgDgkp7+dm9WSy5lVrklJxJej9JwOAy9f3jMx2wsH3nQ4Tqn
8MdrR1gJQxo8KfMBUVqtMAAASvP7+2tRwLPkcWVqrPp4svv2+vrqb7JJRTPy
s/Gx+IjzPOhwnVN45XXwfEWvgdPp5O+YXKMbHQBQSxaRsOS1qnu9nqeHu2+e
1nErYQU6uNJutyM/+w7XOYVvnl6OxVw5M1uyVm9pqnugAADIpkhoPhKp/Bpr
ZZYLcKvb7fo4IK1WK/SeIQe3I4fd5sHqjhJ8Th8fHw7PfkoXVeg9s7Tb7Xwc
kAyMrAYA1JWecYblZcosJpNwuGxi+Zz3pVa04OqTczgYz2EefH19pUB95Thf
dbTRaITeJ3vr9drt0XiIkjIAgBo7HA4mLY339/eSN0zfWMJT3hPnJdyrO3r2
mTlcosVhHvQ0nhleWcz4zuZpGEM5lsul26PxUEVX5QAAwJDJs7WEldYv7Pd7
NVzX6/Xun9V/Pj4+1DaeTCZqIKlJE+coSrfzTX5+fqgkU1G6UJ1cA67y4GAw
cLI9KJnztWZ8VMEtjZ4I+ouYTqfj8ViXdAnFxxhiDQCovYfdTzHPnvj9/VV4
VPPm/f1dT23nA6vsOBwyWsKa1PDHyahRJ3mQkaKV5nbFvdB749739/d2u/34
+BiNRs4TYvkz6AEAKJnCS8ajsNPphN7AfNQwWK1W4/E4YO+hw/FFkSRc2HHS
WewkDzJStNIcTpqr9GBRQz8/P4qHug9rZ52Mr9jtdqH3CQAAvzLqt1R66sTh
cPj4+Ch//p2rIaPlV06Ac8VrjRbPg4wUrQFXr4YqPVjUgrLharUaDodFgmGl
n4MAAJj4/v6+96ysx3vR4/E4n88N66k64WTIaJkbDH8Oh0ORy6BgHmSkaD04
GTpe6cqiBSkYbjab0WhkEQyfoVMVAICbJezUkqzZvAnFNDWrShiEWXx5L+dF
JKLSeCT0BrpUsL+4YB6s2UhR/V1831fj5OuktBS5Rk6n08fHR95phjW+tAAA
SHx+fl4/Acfjcejt8kItK4v2QC7F5106LzJfJjVcm82mjrDan7qKlGh0wD//
MS9PpJ9MfiWpK6vP6ff7+kx9cuUCY5FRo0XyYLVKI/7+/h4Oh6Sk8Hw+n0wm
g8EgOeliftL1k8mv6Hf1CfocHUN9pj5Zn1/dd1zFh77rTyn0TkRku93q8jA8
dIvFIvT2AgDg3XU+Kn+liTKpWbher/2NySz4PrlClWRarZZyn1rdajI5XIf9
IX2XvlHfm0SGyEOi9fVgnQd1QL6/v90ec4e0bbrDKPcp6SvplFkASt+lb0ze
VOgmUHBAb2l0wRfc8ZiLRYey3+9NBpFW69UKAAB2LlaBr99g0XvUKPWRCou8
T9bvOt8eV3RhtNtttaVXq1VsY6i0PUl1WW1hbPFQm2S3U9Z5MLbOIDW8l8ul
8nu3243tdYe2J3mnoS10uF6Mc81m03of3S6NWjPf39/ZQzJ0PzmdTqE3EwAA
v7bb7fnjr66DRe9RjnDbQzEcDq03JuBiGTepFToYDBRMYguA2bS1ykTa8iKt
aIfsXhHY5cFOpxP8fY42YLfbzWYznYLYAmA2bW2/39eW664YVZ9akcHDSruh
Nz92ulx13u8dwOVyGXoDAQDwS4238y6Veg8WvUkNP7UAXfUrWXewFh8V5oQy
lJpGylNRtYetaS8Ux7RHAbOhLi2Lg2kRAfRFZQ7cPZdkQG2zDnVsXbR2tBe9
Xk97pP0KHrHFekdCXRKVs16vb84uZ8goAOAZdLvd5MGnNnMMLZ8gDodDxivi
Ehpg5iUOfGi1WpPJpFr9gHlp76bTqdeCQvdYNCkt8mD5PUHKuWpFj8fjavUD
5qW9G41Gq9Uq4EuS4XBoseXPvNKEBT3+br4bjHlCLgAATqgZmTz13t/fQ29L
YIvFonjLdj6f5/1etTMLfqmddrtdm65Ac0mlWe17mYc671uCvHmw2WyWdh71
RcvlsjZdgea0v9pr7Xv5c8oOh4PFBltPX31m+/3+Ymp58YWEAACInNrGyVMv
5ooKpfn+/i7YUTgYDPJ+6Ww2K/KNebVaLX3js8XAazoCaumV02OoY55r2/Lm
wRJmOSW1eYfD4bPFwGs6AjoOq9WqzAEVFhdqkRVPnlnSUZgeRv3xPu3IGQDA
k1CrRo+8Xq8XekMiMp/PrRu9r6+veb+unNlt2qPxeFzvQaF2FAwnk4nvs5Cr
8meuPOh7wfHPz8/aDwq1o2OiI7Pb7bwe/0Ryo86FyYNFbLfb9J6g/x96cwAA
8CgpMbper0NvSFzUxrMu+Jmrp/WixKtzioGdTof2jAkFn3Q6rXPKDuZ9srny
oDbbx9E4Ho/z+bzkgbUV9fb2pmPl+2VL3kjudWOegU5ockOwGPUBAECFJMGH
8TDX0sZAXrkG7/lYBjGhJDidThkXmldSctZHd6H5ei7meXA0Gjk/Al9fXyar
deNCMo7UX3dhOtfbBCsPOqEnY3LYqSoDAKgxtV5iW8M6HmoMZC9YfJN5pUdP
lWTUFFytVl6PzDO4V4LemvKCYReSYR7UBzpspiYzBP31kD6PTqfjY3ZhrtsF
XVoOLZdLVnIEANTYfr+nCylb3novag0afvJ4PM7Z0nxAjXkmDbml4+kwIhlO
1DXMg7oyneyjksvHx4f1AGncpOOpo+o2FZoPJ1gsFg6/F7oP8KAEAOCZpVVY
DRk2Ah3W6CAJeuUwFZpM9zPJg4obxRuoJEHfdGzn87mrKKGLx/B7qRwFAADg
Vq5IaBLNLAoG3kQSLI3a2AWXI3kxm9hlkgcLdgCRBMv0+vqqc+okFZrMbGUl
egAAAB+U4AyLbJiUlCk+N63dbpMEy1e8r/BhOd+HeVAXj/VARP2irk+SYPmc
jCA1Gb5OMRkAAABP1JI3iYTv7+/Zn3M4HIo0LNXe87TKAAzp+Fsn+mazmf3h
D/PgZrOx22znRXKQV1LuyToVmlSVoZgMAACAP8vl8mF7rN/vZ3/IcDi0a0y+
vr5SOzQeild2K1Mo8WV8bHYefHh13eS2MA4K0rmwfqXzcNCyq0JDAAAAuOlh
983DDiCLxd30K+YL2KFM0+k07wnNnuGVfYHlXeHueDw6r2QLJ3ReLAq/KNpn
fyyDBwAAAHx72MDOqB1hvtp4qtvtUjAwZjrdg8Eg1znN6MTJuEJydQ7+/v7O
53OHZWzhnM6OzlHe4aPZ0z9zfRQAAAAsqP3W6/UymmQZlV5yjTBsNBoMEK2K
7Xab6+Tee2mQkQf3+73hxugKNF+uDmHlrQ21WCzufRTFRQEAAMpxPB4zSnPc
qyFpvoKYDIdDFkGunNFoZHh+J5PJzU+4lwd1PZhsgK6Z9/d3izHJCEjnazqd
mv+93+v2fThYHQAAAK7s9/t7re75fH7zV7J7Fc8bdUwCqq6vry/DjsKb7f97
edCkc3C321FBtLpardZ2uzW5xu4NWe92u7mvVwAAANi6V270Zu0XNf5Nem3o
FqwHk47Cm12EN/Pgw87B399fugXrwaSj8Hg83vxdXXX2lywAAADyu9nsv1n3
Q8287HagGvMPFytHhWy324cB7brlfzMPZncO6r8yW7BOTGYU3jzjuskUvWoB
AACQh9rz1yP01FS7/snsaNDtdukWrB+d0+yF/667CK/zYHbn4MfHB92C9aNz
ml16dL1eX/+WLgY3Fy4AAACM7Xa7i1ZZq9W6+JmbjbcUS0jXm1rpGWf/4j3A
dR681zmoX1RUNIsXqKR+v386ne5dV9fTVJl3DAAAEMT1WNCLH2i32zfbe41G
gybcM/j6+rpXE/LibcBFHry35qBCIqVjnkGr1bp3i7i+7bBQKQAAQBA/Pz8X
i0R/f3+n//Ve8QeFRMaIPg+d65tzvi7WjLvIg7vd7vqjlsslY0Sfh871zYGg
1yWqfF27AAAAeGS1Wp03zA6HQ/qfbtacuVmDFLU3mUyuL4bz1v55HryeiPr7
+3vzE1B7umNcTyc8n53KYvQAAABhnS8veN6tc92VQ9mHZ7ZarS4uifNlxM/z
4GazOf/F4/HY7/f9pA1UgNLfxYjQr6+v9L+SBwEAAMI6b5ulefCilojabIZL
TsO3n5+fw+GgM7Ver5XR5vP5//fPZDIZn9E/Jv9eP6Af0w/rV/b7fZG5WrpU
LiJhutRImgff3t7O+4MKThhstVqdTkdxcjQaaadms1myU8vlcnVG/5j8e/2A
fkw/rF9pt9v3Jj+iZDqPF/WF0pHq528VAAAAEEQ6NFRN6+TfnLfh1aim4EMQ
in6KYAo77+/vOkdKRq4CjlrjSkzKjEqLm83mfJzww006vzb0/5N/n+bB807k
7XZrvsGKb8PhUHuq/VV0PZ/KWvAYKoloH7Vh2t9er3dd3xIl0JVw/k4pvWDI
gwAAAMGp7Z30+yR58LzHUA1+qseU5nQ6KbnMZrPBYHBR6sc3XQDKm0pMimPZ
68hfrE6YLEGeNO/V5k87Bx9Wj0m/Tp+QsWKdDzrOyiZKiEqgJR/nCkk7Z1NJ
17MuzuQf9V9zHT1dD+kbp7//RqSnrxQAAAAQkJp5apupVa//n872UrM/9HbV
3/F4VCNZyeje6h5BKNkpKykx3cuG6RqCSfWYJA+mi1BcL0eY/vD7+7syb1Qv
Gb6/v3UK9CfwtNlQoUwpT6dmsVgoKeftnFW+1nWyXq/n83nSkZ3xKkA/k/yW
vvGFPAgAABCHpItQzXg11JNmm1proTeqtn5/fz8/P9X8jioD3tNsNtXIV2K6
CHHpQnL697pydP0o216XElW0TH69EqOOD4eDMlG/36/30hg6KfoDVzTb7XY+
srkug6+vr4+PD53665StK0Q/kKxoQx4EAACIxHA4VKs+aeSrFRd6c2pIbeDt
dqvGcEWnsCkiKUQsl8vT6ZTsUXK1JLVrdM1oB9O5qNrH8Xi82WxKHgvqivZR
GVZ/FHUKhp1OR2dKGbDkk6KUrWx4nrKTq6XdbjMIAQAAIBJfX19qK6oZr0Z+
6G2pG7XAFY5qU+5SrXq17RWX1KRPrhn97+fnpxr5+k/aU8XeisbAaz8/P9pT
BeHqBsO3t7f5fO6qRE/xg5mkbF0ty+VSF1LojQIAAMD/+vj4IAw6dDqd1A6v
8aw0JdzJZJIsA5GUBo1qYqBbx+NRu1mhs6lN1UnJrg4Uiv40ksK56ZxTAAAA
BFfjxnzJvr6+xuNxdXuUzmkv3t7ekvKSasArEyWr/u3+2W63+jeLxULN+7Ty
ZFKIUk39j4+P5Ce/v7/r0WOovViv171eL/RpydLpdJLe29BH67FKbCQAAABg
Qo1btcPPl2OonGazmZSaTNYBzCgCo/+U9H4mkXA0Gh0Oh+z+UP0nJanJZKKc
qN9K5yFW0X6/jzDyK4zrrIU+NgAAAMBzSZLg+VrtVaFEowCbLANhWAJUP6af
b/yzXq8Xi4Xy4Gw2U9b7+fnRoVDcMzwUSojD4VApsvxVCJ34/v5WvI0hFeow
xjk0FAAAAKixXPEnHslSgNvtNtcgYSXB6XSaxJ8kDOpfKk4qDyoZvfxbpiSJ
dRYBOVkEIWPRw2ilAdnX2cqk4680HfoYAAAAAM8liTwVKjAivV5Pgcui1KRi
42w2O488i8Xi799MSf1/5UH9/36///J/FytJwrLF+hoKkkpY5a+MUET5qVDX
nq7A0PsNAAAAPJ3tdluhPkElteVyabcivBKZot9FpkvLQiarzyd5cL1eJ/9V
sej8E66zpDl9r76iQnPilLXTRRj90cHUIaUAFAAAAFCyw+EwGAx8N/idaLVa
Sg1FFp5T7G232xcfOx6Pk/+qPJIsqpjkQSXHNDZ+fHxcfFTBoKT0rW+xi7Tl
U4DtdDrWO5ut2+3qIgy9iwAAAMBzSZZfj6F4yENKrOv1ushgS8W3m7E3nSEo
q9Uq+ZdJHvz7r7vw5Wx24QUFpeuAaU4fqw2oxHr32sL5fO72atGn6VDHv+8A
AABAzXx9ffnr8XFFeUGJrHjn0WKxSDr+LugInI9RTANjmgc/Pz/PN+ZmnRPF
meLz7N7e3j4+PuIfMKlzkUyrLE67XLlKOwAAAEDVKXQErB5pSPFtNpsVH06p
xHFv/cRms3k+9FTflR6TNA/Kefdfq9W6t0n6ouL5Wnutr44/FS6Xy5v52tx4
PI5/NwEAAICa+fz8jLxujKtMlD0aVv/+oqjLx8dH+l/P8+B8Pj//RaXLe+Mb
XY2/rUQqVC626yjU8bmejAkAAADAK6UV66qY5dC2TadTJyVW9CG9Xi/ju64j
yXnv3nkeTBYiPJfWn7np6+vLSeJWKlQUjXxu3WKxyHVFaae2223orQYAAACe
y8N8FNxwOCxSOPTcZrPJHs14vqRg4nA4nP/AeR6U60O3XC4zNuDn50eZ0clh
UbS8WccmHvv93jD/tttt6ogCAAAAJdtutxZLqJdGMcHVeny/v7/T6TT76y5q
yCRms9n5z1zkwfOhpIl7tWXOKTO66o1VII259IqOp+J89i7oLFdlcQ0AAACg
HpIxok4iiQ+KSw6HRJrMaHt9fb3ZRXXRw3WRB89LzaT0K6fTKXuTlBlbrZar
Y/X+/h7zpEKl5nv5V3k25i0HAAAA6kct8JgXmld2czh60DB5rVarm7978WMX
eVBuJs3hcPhww5QZXS3Q8PIvhMY8/+7z8/O6J5owCAAAAJTseDxGu7zg6+vr
YrFwuLPr9dpkZOb1tMHE+/v7xU9e58F0qfoL2RMJE7+/v66mEyZiXqxBGf98
hQ7CIAAAAFAyh8MUnev3+67qxiQu1oO4RwfkXjC5PlbXeVC/ezNyKtsa7o7h
dhrSNkfbUXg6nZIKPIRBAAAAoGS73a7gWuGeKE8pZzlcQCFXv9u9kjWfn5/X
P3ydB+Xe4NuMFQkvGPZjmnt/f49zQYpkKUbCIAAAAFAyNcLPB+xFotVquSoi
mu7mw5qWKeWme59zs97OzTy4XC7vfb4+xHCzFT/dpnWlUbf9rQAAAAAqTQEh
qgUm+v2+27UGFAbNl1NUOs7oRLu5dt7NPKhduPcVJstPpJxHQn3aZrOxPJQA
AAAAame327kdmmhtNpu5HdOYKwxmJzUF55u/dTMPSrfbvfdF2anzgvNImLHN
AAAAAJ7QYrFwmzjyUha7ub5DEbnC4EvmSNG/+zVe7mWr7JowuRKZj0g4Go2Y
sgcAAAAg4XaZg1wUdhR53O5O3jD4sM/u3qfdS3b7/T7j65R/9QPmu+MjEna7
XbdDcwEAAABUlALUzflxvrVaLYdrzaf7kisMvtyvKZo4nU73fjGjpy/7eJrX
Gk34iIRKwc4PPgAAAIAq+vr6KnkiofKI8y4qhax7yz3cMx6Psz8zo15oRh68
Xrz+gskK9ed8REIfeRwAAABAFSnduI0bGTqdjo/xiqPRKNdmKAI/3IyMz8zI
g9vtNvurFe7yTuLbbDbOM7uP8boAAAAAKuf391cxzW3cuKnX6/moZ3JzicBs
8/n84cdmLMmRkQe1gw+z23Q6zbuPGZ2V1oiEAAAAAP7+FULxPWrUUxhcrVZ5
t+Tt7e3hJD4FpYxPyK4U+nDkat7CMgmlyLx7+hCREAAAAMCfn7iR8jFn8M92
FUWTxdmz+xyz86BJX16/38+7s8qww+Ew784+RCQEAAAA8PPzkzFCsghPYfD7
+9ui0Eqn0zH58IyV5V8e5cHD4WCyJdnVTW/SOfIxspfyMgAAAAB8TFJT1lBw
c76pv7+/2ZHtHpMUptiV/SEPV5Y3WcVD22+x4/v93nm50Zd/p4l1CQEAAIBn
5rywjJLL19eXj00dj8cW22M4SnO9Xmd/zsM8OJlMTLbHZOSqxebZabfbPiZ4
AgAAAKgKJRRX+aLRaGy3Wx8bad2PaRhOH6a5h3nQMLIpguVanj5lUVLVhPKy
3fYAAAAAqAdXXYQfHx8+Ns96wORwODT8CsW07I96mAePx6PhVq1WK4uDYD1c
9iFlYYvtAQAAAFAPTroIPcWKIiNaDZd4eDh58MUgD/6ZTSF8MVv84ia7cjom
PAV5AAAAAJVQsIuw2+16GnZovSiGeeegSRw2yYPmMxztugj/rNZeNNFoNCxq
nwIAAACohyJBo9ls+igo+vdvtUHrrTJfYs8kcprkQfNjaLgExk2DwcD6mGSg
3CgAAADwtH5/f5UI7KKEXc1Mk00yHIF5Ldfi7yZ9oyZ5UKG4hIOm1OZp1Ci1
ZQAAAICnNZ/PLUKEv2okRSpqmpc5NZk8+GKWB8U8U9utRZjwsWpkQteA9VYB
AAAAqK7j8dhoNHLFB38L2O33+7wbc75V5l9kOCTVMA8Oh0Pz7SyyUGOv17M7
ONl0zA2L8AAAAAComVxz05QdPC09X3BtheVyaf5dhr2ihnnw4+PDfDtHo5Ht
Efo7HA7WeTlbp9Nh1CgAAADwhAwXVU8YRiQLRcZDtlqtXHHGMAIb7qwCsvmm
KtAVqcPjaYV6eX9/t94qAAAAABWlJGVYq6TdbnvqRfr5+SlSL0UpKdfXGX6X
YR7UMcnVbVckeelAWZcAyuav5xcAAABAzEwW0fOaF6wXHHzJ3+N2OBwMP9m8
MzTXSNdms1kkVntajvCFUaMAAADAUzIZMuqvpqjSXJFpcYPBwPnOJszzoA5O
rm3WNuQ/Tv+PyWIZdqg1CgAAADybn5+f7ETWbDY91RSV0WhUJMLkzVbv7++G
n2yeB/NOfsy1VOI1w/qoFl5fX1mhHgAAAHg22SVWclXvzCVXMZZrFmMvzVdt
MM+D+/0+75YXqSojSpR5v9FQkQqoAAAAAKooY9EEr9PKCuYai9os5oVrchVT
zTvktWClVosEam632xXZNgAAAADVklFlxV86KD7uMe9C6ubFZF5yRra8iye+
vb3lPFqXhsNhvoNlTPtScNsAAAAAVEuz2byOBnmrteRiuA7gPZ1OJ+83+lts
MW9JGfn8/My7/ef063m/0dxqtSqybQAAAACq5WZ/U94OOHPFRzxaFMPUr5h/
fq48mDHg9p7iJVv9zSJ8e3tj7QkAAADgeVwnGiVEf19XsKzoi1VJllxfmisP
bjabvNtfcCFC2W63eb/UHF2EAAAAwPO4Dhf+OgePx2ORNQdfbOe45Vq5L1ce
1B5Z7EXxuZntdvv6Y3Vs9e/7/f74H+3IbDbT/1Ec1nEzrKhDFyEAAADwPE6n
03kc8No5qHhikZ7O2dXnzBVC836FeeXSlEV91Avp0of6dp2yj48PpfiHOe77
+3u9Xk+n01arlbF5dBECAAAAz+O8pMzX15enb1FauVm7JheLzctVXPQlfx7M
W2L0xUWVUR3MwWCgcGfdl6cjqVh684xYVOwBAAAAUFFpoun1el6/6Pv7ezqd
Wg8ZbbVaFl+ad4pf3jxoUWJUlFIt9sU5xcnlcnndXbjdbkNvGgAAAIAypIlG
0amEr1MqHI/HFhnKrjKn8l2ub8mbBy1KjL5YVUn1R6lQe3E+8LXf74feKAAA
AABlSBKNXe+btd1u9/b2litD2XVa5a1omjcP2lX79N0Va+F4PJ4vDemvrBAA
AACAeKxWK4scVNzPz495R2Gj0bCbK5eruKjFcfj+/s71+enuaPctdse35XKZ
dBQWL3oDAAAAIH673e7Fal0/JwzHW1qPYMxb/9MiF9vNiFyv13Z75Nt+v2+1
WsXXSQQAAAAQPyXBsPPFlIweRiq7CXcXq2l4yoN5B74m7KZDluN4PLbb7XLm
kwIAAAAISI3/4EvOfX5+Znfk2S2Esd/vS8iDStMWeVCBy2KPSqOrYjabhd4K
AAAAAN7FMJdts9nc6yW0njy4Xq9LyIN2S05IDIc9w+l0Cr0JAAAAAJ7Fcrm8
mZush7PO5/MS8qDFtyQYkAkAAAAAqZsVR60HLr6/v5eQB9frdbfb7f/n7e3N
sMIMNTwBAAAAIPXz83NdnsVu5cH0AzebjRKl4cITTtbd+P39/fr6WiwWiocZ
2VApsvh3AQAAAEBtJOtfnHM1z26/30+n0+zOO+frMJ5Op4+Pj5s1SK3nRQIA
AABAXZ2PGnVeh/N4PGZUgHGeBxPKfYvFotlsXnydXd1UAAAAAKgrRba0F284
HPr4it1ud7PPzlMeTJxOp9FodP51wVf6AAAAAIDYpKVg7FaiN/Hz8zMYDMrM
g4mPj4807U6nU99fBwAAAADV8v39nYSmIsVkHvr9/VUiKzkP/v0rSZrsHSVl
AAAAAODacDhUYjoej76/6Hw6YTl58O+/SPj6+lrO1wEAAABAhWw2m3Li0u/v
bzpwtLQ8KMvlspzACwAAAADVopjW6/XK+a503cMy8+Dfv67J3W5X5jcCAAAA
QCVsNpvSvitZ97DkPKgc6nWCJAAAAABUVMnLtY/H45Lz4F/p+wgAAAAAuPb9
/e1veQsAAAAAQMwOh0PoTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJH6/wFsrYas
         "], {{0, 300.}, {300., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->288.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->300,
       ImageSizeRaw->{300., 300.},
       PlotRange->{{0, 300.}, {0, 300.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, {
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[2], 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAr9NamZ/o6j8AAAAAAAAAAJjtMh1G
peo/gDysYMisbD/QzEYUgGLqP4CD9wxVVX0/F6elFVQg6j8g6s3aq32GP/bP
KqnI3uk/4NxzZnCjjj+muNhG5J3pP9B63CeVjZM/X4A1Vq1d6T+APRnTAfKX
PyUlqS0qHuk/IG/uO49+nD8VZd0RYd/oPyjRwDllmaA//l8fNVih6D9oyztQ
HgejP9wIw7YVZOg/2H5XhTWIpT+8doiinyfoP9iCrpNrHKg/PiQD8Pvr5z/I
PsVSf8OqP8QsA4Iwsec/ACl4vS19rT9LlgAmQ3fnP/SHTPyYJLA/eraIkzk+
5z/oY92sopOxP2rBrWsZBuc/AEgVt48Lsz9+kHg46M7mP/w/CwE7jLQ/Kq9c
bKuY5j88JPCTfhW2P6a7rmFoY+Y/vMbNnzOntz/9KB1aJC/mPzyPW38yQbk/
7W8rfuT75T98JOi7UuO6P5y7r9ytyeU/pMBXEWuNvD8VH1NqhZjlP0DLNnJR
P74/FWAUAXBo5T+gUuAL2/i/P5JjzV9yOeU/jP1bJe7cwD8USLspkQvlP9J8
O28UwcE/pDkJ5tDe5D+01kXfyajCPwILXv81s+Q/mrRFl/eTwz9Cn2zDxIjk
P5r+WmGGgsQ/Ai+HYoFf5D8WR0WyXnTFP8tzNe9vN+Q/n6O2q2hpxj8nxM1d
lBDkP/u3rh6MYcc/jioRhPLq4z87uN2NsFzIPwCByhiOxuM/JCUPML1ayT/q
mnCzaqPjP0AGnPKYW8o/iIbLy4uB4z9+Y+R7Kl/LP7zunLn0YOM/AsDPLVhl
zD8bpku0qEHjP+VWVCgIbs0/UGOS0qoj4z8F2gRMIHnOPxO3MQr+BuM/YXKk
PIaGzz8WJEDU
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwlUn0s1HEcPpeXo06b5LWaWuVlGq46ETNmYkbYUZSXvMyt2WRppzSW1cnb
1EzTH+6oGO6qoRJpD6MXTXGd83I49/seduZlJUoWpa8/Pnv22Weft+d5DiZn
RqWxWSyW81b8x0ULb7NNYx2uSk9R/Bb/1K1unqAzJ6vLuofAwmp69ZGCoNS1
7KIsj8Dhy5/F36+3UB8ihRdBncSwUF5LUJXwK/rCCoOghnbu2xICy6VPsXee
MVhei5AfExHwq3jlgUIG9WN+l1mpBLypozPSgwysizmunlEEoqpcgUStxZVM
s1alP0HCe7epoAotOjqiq0d4BC7FneU1oVqklRSkBR4h0Pml5LTs0GLtfkmy
vS2BtWw11UQ0hXt8+Yd4c4I2Tc4b/qwGRUEBT3YZEWSoDvgZRGsgcG3VOW0w
cHrcGHitZxKWLwRhrT8Z5NWkOtd6TCIhMfa2/DuD9Lz2yArpBJZDukz2LjFw
r+91jONO4FBtMG9xnkG26ZytYe44rJ4LvU9u5YbilIdSvRrvbmzXlQYam9Mx
avhsgParktk7Z3rGcG7hPJ0/LuYyMo8xfLTb3p+fmGwqkY5iMKOF3mces3+p
jzsKkuRP7xfbN/zwvTmCCRcZ/U/ECRdx5ocRmVRM/x92V3z2jBvG3PFblJ/0
s6wAdZ8Kpb4Cyp9EHrZn00uFl/0cym/B4fTs5qYhrHUbU/4dMgeK2PuGELHg
S/UxGsgR/i1T4sFsONVvOviS5SuWEjZZbVTf6kL3/BPZX6EJYFP9K8tHxHf1
CqyHrVN/2KXyVhCvQH8WQ/0j7JZd1ysHMVjZRP3Vy9U17w4dBN/Rk/ou9kyj
j1g8gH92nXPj
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwtUmtIk2EYnWtmDU0jS80glUQly5RKNpWDbthQQpIZuRzFVFBL6oempSnk
NrSQBdYPyfY5cRZtXZxhhYWRNbEytXldU/e9YkheKNrMTK3Fux8PD4eH53bO
CVVcyMzncjicKFf8z7LOWP7G5hnkuLO+peh1QA+BKkUfo58nkJ9T5xiqCMwC
m7NliMCYJGK6BQTkoHPx93MC5uP3rNMOFtnCdbVRRyC69DZb9YjFm0qTz6sb
BJGJ0RpxAQsuL814oIzgfHPILBPKgh8kKOLkuXB5qVRrtaP2j0d0fKYLm6Om
UxvsYPx4HZZkgjuGTk1zuh1pdRl3x+IIFmvk5aZNdjiUlfnicIKmK9/yvMqm
sfepShEcRND7q7jr6Ncp2KraeuXbCJwCf3hkTUFlSmz19nT1Sxlxac8krr14
OBO5ziJAJ4vSxU7CcSbjeMcyC9HA4xMNjA0FEVKl8QeLW5KuCJmPDU37u7x2
LrEo3ZgO4lV8wVSjKG5xnsXNT7JGZs6KrJe5wiMubNCOBCactMLhrmukq/zZ
ngm8c/ez/Z6sIXYC99zzfddkW7XMOCRn6f4kya6lPp9xLLjvE+bqfiZVjoHb
Qe8v1h8r2zI/iovV9D9t2If+eNkozO7/C2+vJlv7RmBSUX78UyU7NgQjCL5O
+avwU5S0PxiGcjvlt8b4vo67x4XXKP/1OSUFf+stCNxN9QkLl/t3cizY50n1
W3kSXX245DNWrlJ903jD6tq5IbQmUP0RFuPolg8h5RD1x4L5/uU5yyCECdQ/
hafs7b7pg/AWU3+FKFoT1eoBLD+j/vsHUu5K6Q==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAADDekL063F2Zn+jqv4BPLGHI
rGy/VuY1HUal6r/AjzQNVVV9v+G1SRSAYuq/ICrr2qt9hr+kgKgVVCDqvwAP
kGZwo46/MJotqcje6b+wKOonlY2Tv8Nz20bknem/kJsm0wHyl7+dLDhWrV3p
v1CY+zuPfpy/yMKrLSoe6b+oWMc5ZZmgv2v03xFh3+i/8FJCUB4Ho79Z4SE1
WKHov2ATXoU1iKW/l3zFthVk6L8AMbWTaxyovzjdiqKfJ+i/EBPMUn/Dqr/g
fQXw++vnv5Avf70tfa2/+3kFgjCx579oKlD8mCSwv4zXAiZDd+e/XCvhrKKT
sb897IqTOT7nvxg6GbePC7O/MuyvaxkG579cYg8BO4y0v9Cwejjozua/OHz0
k34Vtr+TxV5sq5jmv6RZ0p8zp7e/uMiwYWhj5r8kYmB/MkG5v1AtH1okL+a/
WDztu1Ljur8cbC1+5PvlvywiXRFrjby/TLCx3K3J5b8MezxyUT++v+sMVWqF
mOW/HFXmC9v4v7++RxYBcGjlv0AqXyXu3MC/wEXPX3I55b/+1j5vFMHBv30l
vSmRC+W/QmBJ38mowr8CEwvm0N7kv2RvSZf3k8O/E+Ff/zWz5L9S7F5hhoLE
v8pybsPEiOS/ZGlJsl50xb/IAIligV/kvwD8uqtoaca/mUQ372835L/gR7Me
jGHHv8uUz12UEOS/8IDijbBcyL/Z+xKE8urjv+InFDC9Wsm/yFPMGI7G478d
RKHymFvKvwdwcrNqo+O/dt3peypfy7/SXs3Li4Hjv/N21S1YZcy/FMueufRg
47+SS1ooCG7Nv16HTbSoQeO/Fg0LTCB5zr9iSpTSqiPjv1vkqjyGhs+/16Qz
Cv4G47806Gdu
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAACMOb0q2VqZn+jqP4DPr2DI
rGy/vvIyHUal6j+AgfkMVVV9v6XRRhSAYuo/gAXP2qt9hr+hq6UVVCDqP4AW
dWZwo46/OtQqqcje6T+wJ90nlY2Tv6m82Ebknek/QPsZ0wHyl78nhDVWrV3p
P7A+7zuPfpy/uCipLSoe6T9QQsE5ZZmgv3po3RFh3+g/UEY8UB4Ho786Yx81
WKHoP/gDWIU1iKW/+AvDthVk6D+AEq+Taxyov795iKKfJ+g/aNnFUn/Dqr8t
JwPw++vnP/DOeL0tfa2/qC8DgjCx5z/E4Ez8mCSwvy2ZACZDd+c/uMLdrKKT
sb9guYiTOT7nP/isFbePC7O/XsStaxkG5z9MqwsBO4y0v4aTeDjozuY/AJbw
k34Vtr9Sslxsq5jmPxw/zp8zp7e/9L6uYWhj5j9YDlx/MkG5v3wsHVokL+Y/
dKrou1Ljur+kcyt+5PvlP4xNWBFrjby/lr+v3K3J5T88XzdyUT++v1ojU2qF
mOU/yO3gC9v4v7+wZBQBcGjlP8BOXCXu3MC/jGjNX3I55T+w0TtvFMHBv3ZN
uymRC+U/Qi9G38mowr96Pwnm0N7kP+IQRpf3k8O/VhFe/zWz5D+eXlthhoLE
vx2mbMPEiOQ/3qpFsl50xb9wNodigV/kPy4Lt6toaca/1Xs172835D9TI68e
jGHHv9jMzV2UEOQ/WyfejbBcyL/wMxGE8urjPxCYDzC9Wsm/IIvKGI7G4z/1
fJzymFvKv9KlcLNqo+M/+d3keypfy79AksvLi4HjPz4+0C1YZcy/UvucufRg
4z/Y2FQoCG7Nv5izS7SoQeM/rF8FTCB5zr/AcZLSqiPjP7T7pDyGhs+/gsYx
Cv4G4z+tlVis
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQvee4Idc/tsf2k+6B6f0xm7MOiB9+ZM+StVR/6etH
+xOq22JW1z2yn5dw5+uii4/2f/Fxnr/f8pG9cujXtz93PNqvcvtDaPSXh/Yi
CX/b1ix8tP9f85HI1nUP7dkXbeLd2/1ov7CnTr9LxkP7xxpea3TLH+1vWqPw
dL7iQ/tZtpZZDCmP9i9vLg2Zd+uB/Q15Jh3zoEf7T1zQvO82+YH9fhOWzZcd
H+0X3bqtf4H3A3u/tf5zrxs92t/YE1uxifmB/bsVNakuqo/2f+t8lcJeft9e
7kZrkrTko/1+rHm7zZ7ds/+2aNnxWL5H+5e5itgzht6zP33NZgkP66P9x+Lm
u5QevmvPdm/tY42/D/dLrYzSXGh41/5Ei7/v5m8P9xdcXR84ef4d+wU+IS1r
Pj7c/9Znt3oU7x17j8Dd7KLvHu7/z/BAkqX6tr3IAWejt68f7g84HzVz/otb
9mqPk61MgfyVc69KWIfdsi84CJE/H/iL6+nhm/YMIRD9+SdZH642vGm/OQBi
/tevUZzz5t+wt+iC2N/qIPbuJO8N+wtPIO77FLnws23Ndft39yDuXzTLvZzj
9TX7kjUQ/8WLnT5rHnXN/ssjiP+Ptf9yvHXyqr30Vkj4KJh7CP+zvGp/YRck
/DwZkko2rrpiP80ZEr5qs091MslcsWc2gIS/lFdJxv/ey/Zi/pD4WS8YK7KN
4bL9BmtI/M2Zo1NvUnLJXmkbJH6V3l9u63hx0b6qFBL/CTz6X/bHXrS/kg1J
HwUbVlS+uHzBfloFJP3kOz7YyO99wd6pGZK+MoyX2LS1nbcX/glJfwDnMmIv

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQve64Idc/tsf7mfeDafubwUv1l75+tH/fqqwD4ocf
2Wt53/m66OKj/Y+K2mJW1z2yT3H4+vbnjkf7Z7o4z99v+ciezedv25qFj/Z/
uvQhNPrLQ/sVfZt493Y/2v+j+khk67qH9vpiXmt0yx/tt3PU6XfJeGjfo22Z
xZACNG+JwtP5ig/tC/iYdMyDHu13qCkNmXfrgf0PZZbNlx0f7Z97UvO+2+QH
9ipz/edeN3q0X2vdtv4F3g/s42bWpLqoPtp/szW2YhPzA3vVk61J0pKP9hvX
vkphL79v3z9l2fFYvkf75X7m7jZ7ds/+0wmbJTysj/YLWonYM4bes99xYe1j
jb8P918Knu9SeviuPVOFv+/mbw/3n5kXpbnQ8K59jENIy5qPD/efO70+cPL8
O/bNrrvZRd893P/Hebd6FO8d+1NbnI3evn64/+iP+5Is1bftA28kW5kC+ZeO
R82c/+KWPd92iPyLaVclrMNu2fN4QfRf8f7F9fTwTXsNd4j51kdYH642vGkv
1Aixv/djFOe8+Tfsee5A3PfWRuzdSd4b9u3XIO7XCV/42bbmun3KEoj/Ns1w
L+d4fc3e4jbE/x6ip8+aR12zX7cWEj6d7b8cb528ar9uMyT8Dph7CP+zvGq/
ywYSvicYk0o2rrpin6EJCf+2uac6mWSu2O/0gMRPtG9Jxv/ey/Y9ppD4uyIa
K7KN4bK90QZI/C5bqFNvUnLJflc+JP75vl5u63hx0d4uDZI+jIT1v+yPvWiv
UQxJPxo7VlS+uHzB/mstJH3xeD3YyO99wf7JZ0j6y3BbYtPWdt4eABNaYhY=

       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAQtNamZ/o6j8AAAAAAKALvRjtMh1G
peo/gLasYMisbL8+zEYUgGLqP8DG9wxVVX2/dKalFVQg6j/gDs7aq32Gv0LP
KqnI3uk/IAV0ZnCjjr/it9hG5J3pP9CQ3CeVjZO/in81Vq1d6T9QVRnTAfKX
v0AkqS0qHuk/8IjuO49+nL8iZN0RYd/oPxjfwDllmaC//F4fNVih6D9o2jtQ
Hgejv8wHw7YVZOg/+I5XhTWIpb+gdYiinyfoPyCUrpNrHKi/FCMD8Pvr5z9I
UcVSf8Oqv44rA4Iwsec/uDx4vS19rb8KlQAmQ3fnP3iSTPyYJLC/LrWIkzk+
5z8Yb92sopOxvxXArWsZBuc/2FMVt48Ls78gj3g46M7mP4hMCwE7jLS/xK1c
bKuY5j98MfCTfhW2vzi6rmFoY+Y/uNTNnzOnt7+JJx1aJC/mP/idW38yQbm/
cm4rfuT75T8ENOi7UuO6vx26r9ytyeU/6NBXEWuNvL+SHVNqhZjlP0zcNnJR
P76/jl4UAXBo5T98ZOAL2/i/vwlizV9yOeU/4gZcJe7cwL+IRrspkQvlP5KG
O28UwcG/GDgJ5tDe5D/e4EXfyajCv3YJXv81s+Q/ML9Fl/eTw7+4nWzDxIjk
P5oJW2GGgsS/ei2HYoFf5D+EUkWyXnTFv0ZyNe9vN+Q/e6+2q2hpxr+mws1d
lBDkP0fErh6MYce/EikRhPLq4z/1xN2NsFzIv4p/yhiOxuM/TjIPML1ayb98
mXCzaqPjP90TnPKYW8q/IIXLy4uB4z+MceR7Kl/Lv17tnLn0YOM/gc7PLVhl
zL/GpEu0qEHjP9VlVCgIbs2/BmKS0qoj4z9l6QRMIHnOv9a1MQr+BuM/MoKk
PIaGz78EylRP
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAd/9amZ/o6r8AAAAAAE9RvfgZMx1G
peq/AIO2YMisbL/f+UYUgGLqv0CF/QxVVX2/7dSlFVQg6r9AYdHaq32Gv6z+
KqnI3um/ANF3ZnCjjr9W6NhG5J3pv9C23ieVjZO/JLE1Vq1d6b+QvhvTAfKX
vxpXqS0qHum/kDjxO49+nL9amN0RYd/ov4BbwjllmaC/sJQfNVih6L/QfD1Q
Hgejvxo/w7YVZOi/wFhZhTWIpb+oroiinyfov5CGsJNrHKi/+F0D8Pvr57+Y
bcdSf8Oqv29oA4Iwsee/EIR6vS19rb8L1AAmQ3fnvzTMTfyYJLC/cvaIkzk+
579cv96sopOxv8IDrmsZBue/KLsWt48Ls79Y1Xg46M7mv1jLDAE7jLS/sPZc
bKuY5r8oyPGTfhW2v/4Fr2FoY+a/qIPPnzOnt79Qdh1aJC/mv3xlXX8yQbm/
ZMArfuT75b9YFOq7UuO6v2APsNytyeW/WMpZEWuNvL9QdlNqhZjlvwjvOHJR
P76/8roUAXBo5b+wkOIL2/i/vz7CzV9yOeW/xildJe7cwL+4qrspkQvlv0y2
PG8UwcG/b6AJ5tDe5L9wHUffyajCvx52Xv81s+S/mghHl/eTw7/fDm3DxIjk
v9ZfXGGGgsS/TKOHYoFf5L+GtUayXnTFv/HsNe9vN+S/LB+4q2hpxr9WQs5d
lBDkv5RAsB6MYce/9a0RhPLq47++Td+NsFzIv84JyxiOxuO/cMcQML1ayb9O
KXGzaqPjvy21nfKYW8q/rxrMy4uB47/aHuZ7Kl/Lv9eInbn0YOO/mIfRLVhl
zL9YRky0qEHjv3oqVigIbs2/3gmT0qoj479UuQZMIHnOvyBkMgr+BuO/JV2m
PIaGz78c8Gv7
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.8408964152636819, -0.34831069975480705}], \
{}}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwtkm1Ik1EYhvellmWflo36kUHlYmGTUpwfN6ZYaWaJVk4HMpWWGFHMlmju
jxt9UAYOKinXmkbkVHRhw1kKi8TC0t5t6pr6vscMSZQiHWRqGZ0fDw8Ph3PO
/Vz3Ha66mFUs4PF4kpX613e9lAUvB05ATPvJ5MbIxmmCCktJT5iTwCj3zT8Z
JDhWashvqiJoj5yf+WUnaE1MNnXHEuyLWzJYzQSd/d9z8uY4GK+1h7y6RaDR
vsnVt3BwidKs+7UElxKkNSlqDj5xbAmviKDfvHPSFM7h7CJfGpNF8KW8LLve
y6J0o8jGJBEs9krGU2tZhN7MfDQURXC4uaPmcToLh76yOGU3gVWvvNouZMG+
0Ku2iwnSqr4VBWnHcV/3tFe5jsDy+4Ij+usY5Lb4hrUBBLzEUPBzxiDrbJ6I
WOKwJ9eUUuYcRV1BZobNz0HXqJCYZaMIjMiutv7g4GVaT9WafDggdQRtmeVw
JsOxVxHiQ0ldctTMNIdzQlYsqvgMd1eh/NDK3MIoHpimvFDTc7/FvS3utBdS
ej9AsRA86RwBn75fzQRwTbIRGOn/Y/y81fWmYUiovugTW2f7QoYho/rzz5t/
JlQO4Q7dz950RLtq2gMX3X+T5H1/jMKzwuU/H+HDhSRvnxsiys9z/Ojm5Vg3
FJSvKkylaXvuQirlf9f27oZghwtvqT+vCzXqP7cZdFH/NFJlaAePQQX1t9Qu
1R3UfMIG6j+3xmW4PjWIezQffknkXLdyEFdofno+PCufYgYQRfOVX8C2rU8f
gIDmLv5yQ7zB8BF/AceURsI=
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(1\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"1\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.840896415254426, 0.3483106997487611}], {}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwlUmtI03EUnVPTRtPQLC0fiYitjOXQfDRZ2rJMRB0quRyVKQ2p9qGZWmYl
OYoSIftSmdPQQTktHYk48wQippQ6Nx+br/1/Zi5MyfJNzey/D5fL5XLvPfec
458lE+UwGQwGZyv+54S9ISzrtmlUBtpyqHPuxz2dBB3aWm7dHEHLYGlmfTHB
RvvY8isdgVUVq0Qkwe72pfn1VgLPiJ9p55YolOn+KNQ1BDu/dmaUNlJY82lm
f3hEUKA+VC6UUoh6G68+nE8gc98/o/SnENcXkcvIJkhekKdWmczoarMLDhcR
nBdwpuIqzDAZ7TX6GIK+oJby6gQz7mYmvRzhEZTbSwqa7c0IyCrKEQYS+N77
nu2UP4XjL0qz9nkRzDpe1R79NokfMlW3xIXALdldYJc2iZsN/NodjgTS61XC
vM4JpHc0TB/4SyHlUwanJmQC1deSEjUrFCo3G1MqlOOgBKn31YsUrpS0BYnZ
4xhJ1Dp5LFDgxk55Odwaw2DXCd78HIXH3uJnSosJy4uXosK26vhVg+exdBN4
Rlv/SOs6a6bTiKdy2/ws35GqDzFirdC2f+yGeHuVchSsdtt9br/HQg97FC5+
jTQ+zUr17+iiEeT5R9P4P588le88NwzfVdt/woHeL+HiYVSGKej/3ydvxJh6
hvDc9TbNz2XX0+7WyCEwfZJp/niWi/KmNwaIGhxofjef9D5kehvgV8Ok+Q8W
yaWbZXrkdkfS+ggOSna1MPRw056h9fvVFXwnVD4IKV9D61vMMSgeWHQoZFpp
/VlnuUuQ6HBhc5n2h4r9utCiH0CJ2wTtH9k7c5NrwgCyAlS0v+RhdXyFoh8R
Sh7tv3+rUHMk
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {-0.34831069975223156, -0.840896415266262}], \
{}}}, 
     {RGBColor[0.880722, 0.611041, 0.142051], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAMDOeb37xXiZn+jqPwAaHGDI
rGw/yzdQHUal6j/A1YQMVVV9P+puYxSAYuo/gBWB2qt9hj9SocEVVCDqP4BY
FWZwo44/xCJGqcje6T8wRqUnlY2TP7Bk80bknek/4Pna0gHylz+Fhk9WrV3p
P0D+qTuPfpw/f4bCLSoe6T/o8Zs5ZZmgP/Ii9hFh3+g/8LMUUB4Hoz/gezc1
WKHoP5CcLoU1iKU/fITathVk6D/QQYSTaxyoPwhUn6KfJ+g/wAmaUn/Dqj9V
ZRnw++vnPxBpTL0tfa0//NMYgjCx5z9cljb8mCSwPyymFSZDd+c/pJPHrKKT
sT+4MZ2TOT7nPyDL/7aPC7M/86rBaxkG5z/AR/YAO4y0P2jrizjozuY/zODb
k34Vtj++fm9sq5jmP2Bnup8zp7c/XAPBYWhj5j8oQkl/MkG5P3jsLlokL+Y/
3BbXu1Ljuj/8sjx+5PvlP3geSBFrjbw/PILA3K3J5T94vyhyUT++P2ptY2qF
mOU/AAfUC9v4vz9wOiQBcGjlPw7MViXu3MA/as7cX3I55T9OUzdvFMHBPwZI
yimRC+U/LshC38mowj930xfm0N7kP27TQ5f3k8M/nkNs/zWz5D92XFphhoLE
P7Z7esPEiOQ/APVFsl50xT98tJRigV/kP+OxuKtoacY/nadC72835D86NrIe
jGHHP8Kr2l2UEOQ/VrXijbBcyD+Cyx2E8urjP0CvFTC9Wsk/+uDWGI7G4z/F
KqTymFvKP7W/fLNqo+M/Ei/ueypfyz8GdtfLi4HjP4I+2y1YZcw/7q6oufRg
4z9ok2EoCG7NPxQ9V7SoQeM/3N4TTCB5zj9A153SqiPjPwlJtTyGhs8/Ow49
Cv4G4z89vkfT
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(2\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"2\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {0.34831069974997103, 0.8408964152537602}], {}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAADiVb3yBFuZn+jqv4BXo2DI
rGw/Ux8zHUal6r/AJ/QMVVV9Px3/RhSAYuq/ANDM2qt9hj8T2qUVVCDqv4Be
c2Zwo44/vgMrqcje6b9wjdwnlY2TP1jt2Ebknem/oKUZ0wHylz8ctjVWrV3p
v4Aw7zuPfpw/DVypLSoe6b84YME5ZZmgP0ud3RFh3+i/gIo8UB4Hoz+lmR81
WKHov6BvWIU1iKU/GkTDthVk6L/Ypq+TaxyoP7iziKKfJ+i/iJfGUn/Dqj8c
YwPw++vnv9i3eb0tfa0/rm0DgjCx578Ya038mCSwP2rZACZDd+e/ZGPerKKT
sT/4+4iTOT7nv2RkFrePC7M/dAmuaxkG57/YeQwBO4y0P0DbeDjozua/BHzx
k34Vtj/Q/Fxsq5jmv+w8z58zp7c/XgyvYWhj5r84JF1/MkG5P/Z8HVokL+a/
pNjpu1Ljuj9Yxyt+5PvlvziUWRFrjbw/qBaw3K3J5b+QvjhyUT++P/R9U2qF
mOW/3GXiC9v4vz/4whQBcGjlvzYXXSXu3MA/rMrNX3I55b+YpjxvFMHBP5iz
uymRC+W/nhBH38mowj/GqQnm0N7kv6r+Rpf3k8M/9X9e/zWz5L/GWFxhhoLE
PzsZbcPEiOS/VrFGsl50xT82rodigV/kv94duKtoacY/cPg172835L8iQrAe
jGHHP3JOzl2UEOS/KFLfjbBcyD+0uhGE8urjv7DOEDC9Wsk/OhfLGI7G479B
v53ymFvKP203cbNqo+O/uSvmeypfyz+IKczLi4Hjvz6X0S1YZcw/c5idufRg
47/fPFYoCG7NP75WTLSoQeO/cM4GTCB5zj8WG5PSqiPjv+x0pjyGhs8/MnYy
Cv4G47+1IVes
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.348310699748923, -0.8408964152537368}], \
{}}}, 
     {RGBColor[0.560181, 0.691569, 0.194885], LineBox[CompressedData["
1:eJwlUntI02EUnS5bZatFjyUapKDmi1SysbX6yIYuxyQfiVuKIVvJCIelTUkS
QpcaIqUkNXIq9Ycpzhe+Um5ztFoUOTdfc7r9PtOkzUWkkVGafv1xuVwu995z
zzmBucpUuTeNRgvbiu3cKruwZ2PnAgzFC7YzsoeUvmYbMKji+k++cGEUoG/I
aruLQd+wstZixmjkaroWuBiK//h41gcwWhvwyriySgGnlHm/vRmj9dAJSUUH
BTrOKHPkAUZqHb9WkEeBgy9pj1JhtGSOXtQGUjBmTVTQZBg1ySrSG21OSECs
SE4qRsEKriOhzgm3qQM9lvMYmenG2iaRE265s55NxWJkrLlR3E13wlBZlVwQ
jBHPzZAzVA6YEz3K9ffDKH20+tXppXmgDXa/zd63NZ8Zjbwuz0NlvfD5Xh+M
Jg1DgiLDHHiEgwsn/lIoPKsorDlmDnJapOKenxT6PW5KqdPaoSAop7z9O4Xe
P7SGSpl2cH9+wzjsoZC8+pffjjuzEMFOjl1xUcj69OYT7bINMuj5vLitGrW6
j57JsMH1TjHpf9CwfBcNM6Bk/59XX/Kn2mJmINmTTfbzBpW7G7XT0MuQkPsK
FO4xMadhMbGf4Eus7/1xtnQK0qISCH4NS6ra5ZqEWZeO/Ffzzv6RI50Ell8t
+f+IyjfeZpqAx18qCD9OWebBDe4EpHzLJPyF5BcUdr20wnAZk/AbIZqp8g6w
Qm6JL+G/49y9vM0aC/Db4ok+9WLFoT6aBY51phH9VoO4ZacKxyFJOEz0lRsc
6splMxjDGUT/a7G8Vcg2g+bi5sq2P/Iie0qWLWNwvHyJ+MfJ/tq1XzQGRr2O
+Gu9sY+vVn+CXiWf+O8f5uth+g==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(3\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"3\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.34831069974881834, 0.8408964152537055}], {}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwtUn1IU3EUffmRZq6gzCktcEbUaCVblq6UX+oo08RpGjgblCiJmWIqVloG
6UuTErSMgnwpuSiXnzhTqRsZqZmkbtO51O39zHg4NC0NXGqt9/rjcrlc7r3n
nnOESZmxKQ4EQYjs8S97vpO4ra2fQpp+NoNeUedXZ8VI1p72lt+NYSBifKl2
CKMDheSZ+usYekOXZpdfYfRBEUaBDIM8ZpXU1GBEmOfjExdpMFa18F6XYTR3
631CcQMNacIIzb48jHZGicvlqTTMyGRpRDJG0OQzTQlpcPVxEAfEYuRTkhtX
bbLA10CnVl0IRqUGkflYpQXy26Ifj0ox2t+pLX8SaYHAtoIU+S6MHCtUl1sc
LfCIKU7a7o2R9f5MskueGbTt6h7VJowStmR0Hfo2CVPfg566O9v7pzzQuvhJ
KPv9cmrPKo0uZlDy3O4J+KSOjmr9RaOITqWoRjIB/tlxRZoFGsUzjTGV1Djc
KOhy2TZHo+ZzXbuVvHEg5sOks1YaDfIt3k75X8DITz580F6rGOVDijGBzcb1
hR0GryOnTXCpgpufzrS5TXePgeDe//0zznS9ZAzUw9x92jtxQzVlhDhpA4uv
4bznXB/PCFWSYBb/3aKan8EFo3DS6Rn7n7X3eJ6rdQTcjpLs/xXh/QMByhG4
yr/G8rPjjS3E1GcA0lfB8jeaFb51TWYATRPHL4WScppf6OFmLce/yvyx1EGg
h409nD7ZlTmpf+7owLeD0y/9rMpDS+jAS9bK6kssiAv9c4ZhZZXTP+uEnixh
hoBZ5vyB0/0WQTUEoe4TrH8u8J9fYXSDcFugZv21t9HSvDlyEFYeSFn//RDU
BZHkZ/gLVidkCA==
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(-1\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \
StringForm[\\\"\\\\!\\\\(\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\\
), \\\\(`1`\\\\)], \\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"-1\\\"], \
Rule[Editable, False]]\\)\"\>", {0.8408964152537366, -0.34831069974930134}], \
{}}}, 
     {RGBColor[0.922526, 0.385626, 0.209179], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA+hdwmZ/o6r8AAAAAQIWePTG9Rx1G
peq/gMdeYcisbD/GJ1sUgGLqv8CaMg1VVX0/pY25FVQg6r9grd3aq32GP3xC
PqnI3um/oCR3ZnCjjj+wt+tG5J3pvxCG2CeVjZM/oAxIVq1d6b/wUxDTAfKX
P3c/uy0qHum/IDPhO49+nD97Du8RYd/ov1hauDllmaA/opkwNVih6L9AyzFQ
HgejPw7U07YVZOi/8ENMhTWIpT/y1Jiinyfov8BaopNrHKg/ExcT8Pvr578g
drhSf8OqP/q1EoIwsee/GAtrvS19rT/Itw8mQ3fnv4zzRfyYJLA/R3KXkzk+
57+A7tasopOxP7YZvGsZBue/dBUPt48Lsz+Yh4Y46M7mv4BzBQE7jLQ/hEdq
bKuY5r844OqTfhW2P9P3u2FoY+a/9CzJnzOntz+yCypaJC/mv6DAV38yQbk/
APw3fuT75b9AQeW7UuO6PwD0u9ytyeW/FOhVEWuNvD/bBl9qhZjlv+QbNnJR
P74/bvofAXBo5b8g6uAL2/i/P8yz2F9yOeW/GPtcJe7cwD+YUcYpkQvlvxI6
PW8UwcE/+P8T5tDe5L8aYUjfyajCP8SRaP81s+S/IBlJl/eTwz8t6nbDxIjk
v65JX2GGgsQ/6EGRYoFf5L+2hEqyXnTFP5VSP+9vN+S/PN+8q2hpxj/Wctdd
lBDkv4T8tR6MYcc/Oq0ahPLq478SEOaNsFzIP9Xb0xiOxuO/I5oYML1ayT8o
0nmzaqPjv7ehpvKYW8o/gJ7Uy4uB478lLvB7Kl/LP9brpbn0YOO/B8LcLVhl
zD/OjFS0qEHjv9+XYigIbs0/Ijib0qoj47/3YBRMIHnOP5p+Ogr+BuO/tUW1
PIaGzz/vXloa
       "]], {{}, 
       InsetBox["\<\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\
\\\\\\\\*SuperscriptBox[SubscriptBox[\\\\\\\\(\[Gamma]\\\\\\\\), \\\\\\\\(4\\\
\\\\\\)], \\\\\\\\(\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", StringForm[\\\"\\\\!\\\\(\
\\\\*SuperscriptBox[SubscriptBox[\\\\(\\\\[Gamma]\\\\), \\\\(`1`\\\\)], \
\\\\(`2`\\\\)]\\\\)\\\", \\\"4\\\", \\\"\\\"], Rule[Editable, \
False]]\\)\"\>", {-0.8408964152563142, 0.3483106997496378}], {}}}}, {}}, {{
     {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
          0.3378023603053425, 0.02536937560291487}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
          0.2568011971960195, 0.22092348214943944`}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.5946035575030888, 
          0.24629285775204157`}, {-0.25680119719693395`, 
          0.22092348214956797`}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.5946035575030888, 
          0.24629285775204157`}, {-0.3378023603061541, 0.02536937560247319}, {
          0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
          0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
          0.02536937560285223, 0.3378023603053362}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.24629285775332965`, 
          0.5946035575017989}, {-0.0253693756033302, 0.33780236030572175`}, {
          0., 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{-0.24629285775332965`, 
          0.5946035575017989}, {-0.22092348215000032`, 
          0.25680119719607797`}, {0., 0.}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
          0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
          0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {
          0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
          0.24629285775204157`}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
          0.3592011169774932}, {-0.5946035575030888, 
          0.24629285775204157`}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
          0.19952472547741282`}, {0.24629285775223855`, 
          0.5946035575013856}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
          0.39507883202397376`}, {0.24629285775223855`, 
          0.5946035575013856}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
          0.11852356236815229`}, {-0.24629285775332965`, 
          0.5946035575017989}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
          0.476079995133646}, {-0.24629285775332965`, 
          0.5946035575017989}}]]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
          0.13827763482792507`}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
          0.09893151553078851}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
          0.05942536182748782}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {0.4204482076267947, 
          0.019819713459349683`}, {0.8408964152537147, 0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.4204482076267947, -0.019819713459349683`}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
          0.}}]]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[
         BezierCurveBox[{{0., 0.}, {
          0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
          0.}}]]}}}, 
     {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0]}], FaceForm[
      Opacity[0]], {DiskBox[{0.5946035575013604, 0.246292857752354}, 0.], 
       InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], 
        Offset[{2, 2}, {0.5946035575013604, 0.246292857752354}], ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.5946035575030888, 0.24629285775204157`}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], 
        Offset[{2, 2}, {-0.5946035575030888, 0.24629285775204157}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.24629285775223855`, 0.5946035575013856}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], 
        Offset[{2, 2}, {0.24629285775223855, 0.5946035575013856}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.24629285775332965`, 0.5946035575017989}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], 
        Offset[{2, 2}, {-0.24629285775332965, 0.5946035575017989}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {DiskBox[{0.8408964152537147, 0.}, 0.], 
       InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], 
        Offset[{2, 2}, {0.8408964152537147, 0.}], ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], Offset[{2, 2}, {0., 0.}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}}}, 
    {GrayLevel[0], AbsolutePointSize[5], 
     PointBox[{0.5946035575013604, 0.246292857752354}], 
     PointBox[{-0.5946035575030888, 0.24629285775204157`}], 
     PointBox[{0.24629285775223855`, 0.5946035575013856}], 
     PointBox[{-0.24629285775332965`, 0.5946035575017989}], 
     PointBox[{0.8408964152537147, 0.}], PointBox[{0., 0.}]}}},
  ImageSize->300,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 CellChangeTimes->{3.9058331497053766`*^9, 3.9064300091897836`*^9},
 CellLabel->"Out[2]=",
 CellID->174700215,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfWm4V1XZ/u+Fcw6DoDiPqaWZmgMqKpnlUDllZb5WmpY5laaZU5ZDmeWQ
qTkrr6SAOOMIKAgiKg4oKiooCKig4jzPA7r/6177ude599rP2dCn/5e4rnM4
53fW3nvtZ57XD/Y56sADfrfPUQftt8/q2x+xz2EHHrTfkatv9/sjwkfd/6fV
arsJX6u32sLPRatV+eb8G41v//3Tf//03z/990///dP/3z9tET9oK55//vli
xowZxcSJE4sRI0a0FUOGDGl1L84666zihBNOwFerW/zevTjqqKOKX/3qV/gK
n+F792L33Xcvtt56a3yFz/C9e7HlllsWq6++Or7Cb+F7O1RCu/2Ov+ZX4C75
nfG0fAfYVdhf3GO3+L0Nm46bnzZtWvHss892vuE381deP37QJ67Calx11VVX
FYMHD45POuyww+Iudthhh/QO/fr12yYqtD5Fnz594kcDBw4svvvd78aluASX
4ha4lbuRDfKNrG4bee+994qpU6d2uRE8BU/DU8PT98w2MmDAgAhJLD3kkEPi
pRdddFExfPjweEvc+q233up87pfzjawQP+gZN4Jtjxo1qjjvvPMi7Hfbbbf4
hGWWWebI+OCeAEbRv3//Ypdddol7BDpuvPHG+oNWzB/Ub9Ee9JX4oLZihRVW
KNZcc834duFhbUYSfEkliVNPPTUjie4JE+ErfIbv3YtJkyZFrISv8Fv43o4t
tdvv+Gt+Be6S3/n000+v7QC7qhJvW4QQNo+XWGWVVb7ynwJwyRyAPRcNgKvE
B/Ut2traIongYdjHXnvtVey///5x72SiMWPGJKiEh7e2iY/oGzeCz+6///5i
/PjxcS3FwYEHHhjvhXvikXhGz549W6v8py/YK3/BbvGDjuKll16KLwdI40n2
YisY7fMB4NGuGBAPwwt89tlnexqnhR9rbI/3wqUUa7hl5Wkd6WmQT9gQNgaB
mf51l9f4zN4AKJoyZUrcErYHWIV7LmcgCuAq1ltvvWLnnXeOpIP7QoYZiI40
RANa+AjQAxSxFJfg0iAAlpMd4gH4M3gfD8YG8G+BbO7D+HN7MXv27HhLvDjo
Zu21124tG+/VIxIrRA4I5e9//3sEEoggoKT1d9vWa6+9Fj/D38B6IAhcg2sD
0S0Tb9UefwUN4DF4uaBhyn18JHt62wCGVwVSQM+4H5AQXnEp21bgnyiOQQ3H
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
aFxnfUFQ3S63lBocknVw0WGkSOTJLvNARlYH+W2NVLLOP5+4DQf0VoWCoFhu
ou4+WoEi0acRdM91g+nYlzMDathLVinZxwtwCC932DDufZ8VwCi6gAC3EMZD
PNO4PbJe2mQB1lBztobqJrGmoWmD9AhETO2OO7YzirqgCpzMj3vcYkP8viQR
8AyHlXcFNHMqjcViKIcARs4vO9BC6qHyNSUP4YNxR83yDfgFw/hwwkvWh8Vl
AFttWs1gv5iHjgQFN1LMVc8dfso6253EAevcuevp6ac308SJu7AcZPA9CPLV
rTuV7yib+vU7ZF3ev/zJMOAnZtCPTz3tvDbDkQxMlOT4+d5ufWxiz95NeRuX
ow/LjqJp5SbRzeUeo4tKv0V9Si+ini22GaN2OG4u42cg/h93BHsGmwWrNeyW
1+QSNgImdRNAM9EliKwwxY/t1y/RO8pHRV6YCEuS0mIkSWkxOoRiMTr3KjG6
9GIxOom0GPGUvW4yBnJ7cXWGiHqtc63DAObElkNbuZZZQHjwu6+9FmqlhCvg
ynaFVQaej7jiKqtoQo4H6jADzzlis2ZlgbwBP0ZsFuwZh6EoKsMOJenqyFCV
4+DZMedsh85mQQCrxq93DTuHPhv9CN03bimdd85uh9JZdPbZ++0i/tJLP9pF
Hfb9/idL6JoHZzJaZ1q0fmr49bS6VjPaW7K8UN10C9gZFrBnFB9EQ5rNohse
XA7AZnzMDtq5cZAeMcnDffvS9jvvpAJow1jDb1asXYbQarTRfDFuRzDpzasZ
KdoIwprEVUY4EEQLgfbZs2fb9IpgdNwWA5ZIp/9GWEZORAaaw8sq2DmccVwc
sM3QXEN9RQrH9DaVQuh1xCL6DDY5ABRItcep/sTBHrCz37G7V2lkxq6+J3dt
DZC5i5wGF4ZYQu3w7nfnAx/Esgq1NOqu+/ZNZAisoTBn9uwQIgPWsOzgRcjW
ePPnBzHKdJ56Z3bfSP8ZdAP90qKlq3GW7XzcDmS2Ne7R/v3F9rwqYX65QRaS
j+VVc7Xp8OCRwDHjL/BNz5N0++07fJLXkFH7WpMybiR+XFN0r3vBSoJoT9D+
J8euJDNm/GBjpQhbAnP5fHYeGFw2d+JWGLB3HPPgg9vojTc20vIFnBYwgARK
B4ww4JbL2AfhBRIjCDMkOW0LbAaZX9VkCM1peAm9UPdmerjho3Rr85dtgqh1
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
boS7pNMX//Hc2yX7c8w5f86efe5FfxUkybanBe0QVc4EZie8pCrahRp5zLby
v1Y9qIVwXn7UUC/VbBUqBTAFOzPZyr+Qai7ArsXzF+whkmo+KHEmjn2xnL+R
8oE+/PlptE548eIBvt8fHwacpAJ29/9NDYDqAY2GKe5QgGYclgDXYAo5XJS4
pzUP+i0rlU4dBgrH0x2ff/6llHnqK3e6NKr69tu149hXi+LErYm3yTWyTDPC
G0QD7hcnvJGT4HGpoGh/nhcTWlOdpxJdKLhStgtzQqTqRV7ntX9aUALXnKvu
12vx4KqZRyeI0sqLL4VKdy2XfICwyTdoTEsIR/JYOlynNJDWlscRN5RYm2Vv
81p1wNO1a9fCezzyyCMEzwQ5JB51icQykWOp6hz8BZvFTzBGPsHKebdZ5DAB
fMbu/fXXK1w6LrxtDzlr1TnOKj0qaouiIZTvMHIsf/385+re2WYLundYCm0h
dP75b+sA/CR+4m0aM2fq6I9k0I7GFZFjtiHZFb28DuwUsdcxZcoyNcUWM/vy
XKgixOQBw85W29iOQeKCi+/87K8lzFx/22NFzPCZ2yQy93qguklGEjEDcjOP
q6Vlg2bf6uq2NGaopkxI1JCixqbY5hQtu2GJuylRkLHgQLp53yJ+pk6dWjgE
bHO6BnZc0BYJUxpqPC3ZFx+9b/GT3b7PFtkZO/ehHhq28w7tuXqbG3zQhUvh
iETLKLXgj3GPLuXhMe/hxSVWxSaPkpo9z/geM7Li3gfsi+VlpXINfXleXEss
zua82tRblRIOLIMCU0sUW2EAYnx9oMjGasXCbR+eN0UlML0ZCjeYsthEIW8h
sCTcOBzBhlePPK5tB+r/sd5S9ajJB0SzfjGDXfMU55dk+lxTWqLoKUDfMyHR
kkbfWiLGcXEGhzkrRs/Q6lh+iBToUontAuhaSqOJYOecQaLXYGmXm5vPwZ6y
CXKcJRc0Sj4C2LNvDSZqhfHaQhR0HOjCmy44ElYpDk1AbKh8crMQSy0ILZTt
86+yDM5i6XhuC6V+fH94RPb9r7gih087FoqqExBoz1L+8If/UX/WQma8hWoc
LBr6qHqdgEa45hwygJB0BnNt9V2PvlaXPkq/O9Z6gWUcrhP02BgmGC/DjpLm
tAz0N+IlKS9tRUzBhCJhR4/YyUfUnASIpXkTIDEXAEnvAkDCW4nzp8oBoOFb
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
EeNeBC4Ncv21t+2jFe5uglHz4nbCtslaQF92c5h3tgJ9klRj6OvxNrliE9GH
aeAWamaEgz4PaYE+91X3T+YjKOmW8f+CbL53yVQS4+yLXlqfzfoycRLhlitO
SdFHQJOL1bzAAPQ5V4E+D7mBPg9peXdrxmWWu9ey4wSO6T4vHOvxNvniCPrc
QkWPuG/JMl3odFYrNw+5745552S6l62fcU+JcUo6tPiKxozdU1ktbb1p8usf
qSd0kJbRQ6t76ikJPaHc3fzEPHZpOYYv4b+19bK2WO55kNOchS8qTntETb60
ifjyC5dadnMd3/myuyWIhL9cPIIvV/5PjXGfv+atNWe8bGcMOWGb4Yvytl98
97KpWNC1H31JXfhTE7FMmFG2MM7/AQkeKLByfBFy9yAB+PJYUHYTEPgSoNuz
IurCAb56RE2+PIIvOfrEfSBdgZtIJWTl4mKAL3eL4C9P/hJ/cyPsaTFOHeVb
fOkOcDz27CgnJbWZx97ddhrvfXoCX6wvl18HJPQEvrzkA3y52+ZXJ4J/8OXy
n2rHzGN3ddYjavIVw1cYlHW4x+n8RvZWDLg6G+DL5TkRDA/ZEyXxWOszYtzH
vvCKKXydfM79q++W9Zil1L/z3Rp3/Lr3Pb6+lzuvPUiIueVW8IHJBjt87ZBM
gCL3HAxloZ7FB0GC7BiCesxMrozhmbMmBJFvYe9u7niiFWv1Vo4g9+JAkBsY
IMjNYhCkGqr/vOTpQ+/sI49a+cqVX+qeyu5V4IS+zHtav4Cg6888utZQHZsw
MuEzt4cPTMYNEJS5qe7egSDXjIQ7s9S2yidBUK94JlfF8CxA4nkT9u4hPBDk
hkOHoNskmhgEuUVBBMMN5GNjnEpsOSEMgt5x/tPqs7cZQVC09B9agGccWvuV
PDOe9RglFm8WQ3U/kpauLgm2Twgt6zPFrUlTJtikv8K4xZdHP3pOmlwdw7MY
pfAV1Qt1me4+Z4J5gC+3dMCXS5Q7JXB7ZoxTET+HTzKLPbuGYbd4tjuj3eJL
6YQ4o/2shE5qpMtM3IOSfQAItyjAl6tq8OBhkYUE/4zzzGGGr56xJl9L8JVl
GnDrJQvYDst0P3iAL18X6RX3YPymIiTo38Y4JYtbBzluH+ye+v0EX8Dy5zdd
Ui128HXDqXeuZ4GOS/gBl8RN3IOScWP4cvyDB08nLST0CR+qRL7Fl+cAesaa
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
v/vT7/70//VPk9/7v1bs8gw=\
\>", "ImageResolution" -> \
288.],ExpressionUUID->"6862812c-5f5c-454f-af72-1e18fc19e3fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "15a9f7e8-0c6e-4c00-a43a-361252a25db6"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->59282690,ExpressionUUID->"189dd208-1efd-43f3-8fce-9763eb2901df"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "0608991e-fb4b-4055-a6a6-917816cadf71"],
  $Line = 0; Null]], "ExampleSection",
 CellID->169591057,ExpressionUUID->"a9cd3ade-0d74-40b6-8a0f-54267657c045"],

Cell[CellGroupData[{

Cell["Faces", "ExampleSubsection",
 CellChangeTimes->{{3.905833651858959*^9, 3.9058336524310617`*^9}},
 CellID->77762580,ExpressionUUID->"8f249a22-2734-4d04-b7c9-658f449784b9"],

Cell["\<\
The faces are given as independent graphs such that their edges encode an \
orientation of the face, thus the edges are not all edges of the cell graph. \
More precisely, the edges can differ in their orientation and edge tag:\
\>", "ExampleText",
 CellChangeTimes->{{3.905833664900607*^9, 3.905833729488014*^9}, {
  3.905833803361721*^9, 3.9058338165371814`*^9}},
 CellID->565783619,ExpressionUUID->"375adb65-63bf-42d7-964f-73cd6c37c1e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EdgeList", "[", 
  RowBox[{
   RowBox[{"cellgraph", "[", "\"\<Faces\>\"", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9058337401514654`*^9, 3.9058337517721453`*^9}, 
   3.9064300161325436`*^9},
 CellLabel->"In[1]:=",
 CellID->464781799,ExpressionUUID->"85d481bb-31ad-4ac9-9948-3381a07f2717"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "2"},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], "2"},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"-", "6"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], 
     RowBox[{"-", "3"}]},
    "DirectedEdge"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9058337466944757`*^9, 3.905833752170418*^9}, 
   3.9064300173501077`*^9},
 CellLabel->"Out[2]=",
 CellID->235067371,ExpressionUUID->"64693a74-6f27-4181-96c4-d3a1bd2f85fb"]
}, Open  ]],

Cell["\<\
If an edge in the face appears in the same orientation as the corresponding \
edge in the cell graph,  the two edges are identical. On the other hand, if \
the edges appear with opposite orientation, the edge in the face will have \
its edge tag multiplied by -1.\
\>", "ExampleText",
 CellChangeTimes->{{3.9058337645660677`*^9, 3.9058337705532446`*^9}, {
  3.905833828928706*^9, 3.905833909550002*^9}},
 CellID->214135134,ExpressionUUID->"8cb86a7e-ceb9-436a-915d-48b79f58ac52"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "84f4be77-95ad-4479-893e-50b0b2a02232"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->17659725,ExpressionUUID->"bcd9e864-b677-451e-b1f1-62f3c5ec7388"],

Cell[TextData[{
 "If the original edges of the cell graph are required, use the ",
 StyleBox["\"FaceEdges\"", "InlineCode"],
 " key:"
}], "ExampleText",
 CellChangeTimes->{{3.905833927148653*^9, 3.9058339551020107`*^9}},
 CellID->94632968,ExpressionUUID->"fd934aa6-041c-4e8d-bff3-7440322d2a05"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EdgeList", "[", 
  RowBox[{
   RowBox[{"cellgraph", "[", "\"\<FaceEdges\>\"", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.905833974930562*^9, 3.905833975710001*^9}, 
   3.9064300206544805`*^9},
 CellLabel->"In[1]:=",
 CellID->22802683,ExpressionUUID->"abfc9bc6-108a-4ab1-ae7f-a26d957d962c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "2"},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], "2"},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], "6"},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "3"},
    "DirectedEdge"]}], "}"}]], "Output",
 CellChangeTimes->{3.905833975894044*^9, 3.9064300213111324`*^9},
 CellLabel->"Out[2]=",
 CellID->255686695,ExpressionUUID->"e5fd1296-9f72-4d03-b516-7edddaa094ac"]
}, Open  ]],

Cell["\<\
However, this comes at the cost of losing the orientation of the face.\
\>", "ExampleText",
 CellChangeTimes->{{3.9058339568295603`*^9, 3.9058339664314375`*^9}},
 CellID->444774495,ExpressionUUID->"92f9435d-c4a9-4d93-8c7c-817a796ab715"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a27269d5-deca-41f5-a434-d3381af3805e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->282194481,ExpressionUUID->"1e27f4a8-52b0-484a-a424-b896f07fc4ee"],

Cell[TextData[{
 "Each face corresponds to a gray Schwarz triangle and its reflected white \
Schwarz triangle. Which reflection is considered depends on the application. \
By default, i.e., in the entry ",
 StyleBox["\"Faces\"", "InlineCode"],
 ", a reflection line passing through ",
 StyleBox["\"CellCenter\"", "InlineCode"],
 " is chosen. If a reflection line passing through another vertex type, e.g., \
through the ",
 StyleBox["y",
  FontSlant->"Italic"],
 "-",
 "vertex, is required, use:"
}], "ExampleText",
 CellChangeTimes->{{3.9058340344255466`*^9, 3.9058342334590397`*^9}},
 CellID->277188354,ExpressionUUID->"81ad1767-06b7-4162-9eab-650a8e4f4510"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cellgraph", "[", "\"\<AllFaces\>\"", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.905834243856526*^9, 3.9058342547829523`*^9}, 
   3.90643002943666*^9},
 CellLabel->"In[1]:=",
 CellID->220578341,ExpressionUUID->"7ce35101-cad8-4f39-ac72-b46034414ede"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
      2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-1., 1.0106430996148606`*^-15}, {
       6.049014748177263*^-16, -1.}, {
       1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, 0.02261146496815286]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9058342493349223`*^9, 3.9058342552990327`*^9}, 
   3.9064300299782457`*^9},
 CellLabel->"Out[2]=",
 CellID->263446120,ExpressionUUID->"b1d59ddf-4556-4bf3-bf2a-161d5e916531"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "6cf3e40e-1bca-4f37-957e-25f00787705f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->391422088,ExpressionUUID->"9cd69430-9258-43c2-9dab-6b674decc476"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "0d48738a-905a-4626-8312-e7ff0cb603fc"],
  $Line = 0; Null]], "ExampleSection",
 CellID->4228122,ExpressionUUID->"1ee94778-f405-45f9-97d4-9bc4285eafdf"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "8ac3a4d2-28d1-49b7-aa7c-373c702fd6f3"],
  $Line = 0; Null]], "ExampleSection",
 CellID->47787490,ExpressionUUID->"a969f0f9-6994-45a8-b4f1-3013bd98153a"],

Cell[CellGroupData[{

Cell["Labeling Vertices and Edges", "ExampleSubsection",
 CellChangeTimes->{{3.90583244433931*^9, 3.9058324734581313`*^9}},
 CellID->445462844,ExpressionUUID->"33c8a5f8-48e1-4c80-963d-d2b31f21b4bd"],

Cell["\<\
Label the vertices and edges by their names and tags, respectively:\
\>", "ExampleText",
 CellChangeTimes->{{3.9058291160353613`*^9, 3.905829139215063*^9}},
 CellID->475614113,ExpressionUUID->"349a8a5d-0364-4bbb-b063-af932cac0e2d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}], ",", 
   RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", 
   RowBox[{"EdgeLabels", "->", "\"\<EdgeTag\>\""}], ",", 
   RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.905829151398758*^9, 3.9058291689588966`*^9}, {
   3.9058293780523605`*^9, 3.905829384210012*^9}, {3.905829473538092*^9, 
   3.905829480960595*^9}, 3.9058307174648795`*^9, 3.9064300332686267`*^9},
 CellLabel->"In[1]:=",
 CellID->788814381,ExpressionUUID->"b872adb0-d5a5-4c7a-990e-b07a38406806"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {EdgeLabels -> {"EdgeTag"}, GraphLayout -> {"Dimension" -> 2}, 
       ImageSize -> 400, 
       VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.3378023603053425, 0.02536937560291487}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["1", {0.31454227879334506, 0.08152417985108175}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.2568011971960195, 0.22092348214943944`}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["5", {0.2800612787080155, 0.16476867790127228}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.25680119719693395`, 
           0.22092348214956797`}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["4", {-0.28006127870890146, 0.16476867790123706}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.3378023603061541, 
           0.02536937560247319}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["8", {-0.3145422787941873, 0.08152417985080454}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["2", {0.1647686779012163, 0.2800612787080361}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.02536937560285223, 0.3378023603053362}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["6", {0.08152417985102228, 0.31454227879334956}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.0253693756033302, 0.33780236030572175`}, {
           0., 0.}}], 0.01786032812923874], 
         InsetBox["3", {-0.08152417985153886, 0.31454227879363256}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.22092348215000032`, 
           0.25680119719607797`}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["7", {-0.16476867790179078, 0.28006127870816633}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
           0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}], 
          0.01786032812923874], 
         InsetBox["1", {0.7005094863348729, 0.10590592883351223}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
           0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}], 
          0.01786032812923874], 
         InsetBox["5", {0.7349904864202024, 0.14038692891884183}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {
           0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
           0.24629285775204157`}}], 0.01786032812923874], 
         InsetBox["4", {0.10590592883267011, 0.022661430783044396}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
           0.3592011169774932}, {-0.5946035575030888, 0.24629285775204157`}}],
           0.01786032812923874], 
         InsetBox["8", {0.1403869289179559, 0.2236314269689972}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
           0.19952472547741282`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         InsetBox["2", {0.5019723874778796, 0.2556795297255895}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
           0.39507883202397376`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         InsetBox["6", {0.5852168855280737, 0.3389240277757962}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
           0.11852356236815229`}, {-0.24629285775332965`, 
           0.5946035575017989}}], 0.01786032812923874], 
         InsetBox["3", {0.2556795297250666, 0.22119852964040634}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
           0.476079995133646}, {-0.24629285775332965`, 0.5946035575017989}}], 
          0.01786032812923874], 
         InsetBox["7", {0.3389240277753185, 0.3734050278613927}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
           0.13827763482792507`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["1", {0.4204482076268574, 0.05886274906776007}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
           0.09893151553078851}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["2", {0.42044820762685736, 0.042044820762685786}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
           0.05942536182748782}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["3", {0.42044820762685736, 0.02522689245761156}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076267947, 
           0.019819713459349683`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["4", {0.42044820762685736, 0.008408964152537113}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076267947, -0.019819713459349683`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["5", {0.42044820762685736, -0.008408964152537113}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["6", {0.42044820762685736, -0.02522689245761156}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["7", {0.42044820762685736, -0.042044820762685786}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["8", {0.4204482076268574, -0.05886274906776007}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.5946035575013604, 0.246292857752354}, 
          0.01786032812923874], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.6124638856305992, 0.26415318588159276}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5946035575030888, 0.24629285775204157`}, 
          0.01786032812923874], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], 
          Offset[{2, 2}, {-0.57674322937385, 0.26415318588128034}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.24629285775223855`, 0.5946035575013856}, 
          0.01786032812923874], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], 
          Offset[{2, 2}, {0.2641531858814773, 0.6124638856306244}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.24629285775332965`, 0.5946035575017989}, 
          0.01786032812923874], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], 
          Offset[{2, 2}, {-0.2284325296240909, 0.6124638856310377}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8408964152537147, 0.}, 0.01786032812923874], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.8587567433829535, 0.01786032812923874}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.01786032812923874], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.01786032812923874, 0.01786032812923874}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->400]], "Output",
 CellChangeTimes->{
  3.9058291694899883`*^9, {3.9058293811008215`*^9, 3.9058293845754585`*^9}, 
   3.9058318372687006`*^9, 3.9064300337608924`*^9},
 CellLabel->"Out[2]=",
 CellID->259743769,ExpressionUUID->"50317ffb-ad59-4ec4-84a2-4998099b9cbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2eb5e1be-bc75-42ce-950c-1ebe69320363"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->282811621,ExpressionUUID->"f4f10e31-8f70-4576-ae41-d7c660a1c626"],

Cell[TextData[{
 "Label the vertices by their representatives in the transversal ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox[
    StyleBox["T",
     FontSlant->"Italic"], 
    SuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], "+"]], 
   RowBox[{"(", 
    SubsuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], 
     StyleBox["w",
      FontSlant->"Italic"], "+"], ")"}]}]], "InlineFormula",
  FormatType->StandardForm,ExpressionUUID->
  "9840f852-76e8-4355-a2bb-45d76b1e7241"],
 " and the edges by the edge translations in terms of the translation \
generators:"
}], "ExampleText",
 CellChangeTimes->{{3.9058291782660117`*^9, 3.9058292625842505`*^9}},
 CellID->283956275,ExpressionUUID->"eceab449-a11b-4829-9703-4e45ac1e2c2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058292727477207`*^9, 3.9058293129926443`*^9}, 
   3.9058307208226542`*^9, 3.906430039066203*^9},
 CellLabel->"In[1]:=",
 CellID->437721174,ExpressionUUID->"d813de76-7b1d-455d-964f-7fd37b871f10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graph", ",", "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "->", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", "graph", "]"}], "->", 
      RowBox[{"cellgraph", "[", "\"\<VertexLabels\>\"", "]"}]}], "]"}]}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "->", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "graph", "]"}], "->", 
      RowBox[{"cellgraph", "[", "\"\<EdgeTranslations\>\"", "]"}]}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "->", "400"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9058293161361074`*^9, 3.9058293420815496`*^9}, {
  3.905829389820182*^9, 3.905829392557191*^9}},
 CellLabel->"In[3]:=",
 CellID->101553327,ExpressionUUID->"9d77a988-d14d-43d6-b383-3763d1ef5bb5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {EdgeLabels -> {
        DirectedEdge[{3, 1}, {2, 1}, 2] -> "g4*g3^-1*g2", 
         DirectedEdge[{2, 1}, {1, 4}, 7] -> "g4^-1", 
         DirectedEdge[{1, 2}, {3, 1}, 4] -> "1", 
         DirectedEdge[{2, 1}, {1, 2}, 8] -> "g4^-1*g3*g2^-1*g1", 
         DirectedEdge[{3, 1}, {2, 1}, 6] -> "g1^-1", 
         DirectedEdge[{3, 1}, {2, 1}, 7] -> "g4*g3^-1", 
         DirectedEdge[{2, 1}, {1, 3}, 6] -> "g2^-1*g1", 
         DirectedEdge[{3, 1}, {2, 1}, 5] -> "g1^-1*g2*g3^-1*g4", 
         DirectedEdge[{1, 4}, {3, 1}, 3] -> "1", 
         DirectedEdge[{2, 1}, {1, 3}, 2] -> "g2^-1*g3*g4^-1", 
         DirectedEdge[{2, 1}, {1, 4}, 3] -> "g2^-1*g1", 
         DirectedEdge[{1, 1}, {3, 1}, 5] -> "g1", 
         DirectedEdge[{1, 1}, {3, 1}, 1] -> "1", 
         DirectedEdge[{3, 1}, {2, 1}, 3] -> "g1^-1*g2", 
         DirectedEdge[{3, 1}, {2, 1}, 1] -> "1", 
         DirectedEdge[{2, 1}, {1, 1}, 1] -> "1", 
         DirectedEdge[{1, 4}, {3, 1}, 7] -> "g3", 
         DirectedEdge[{3, 1}, {2, 1}, 4] -> "g4", 
         DirectedEdge[{1, 2}, {3, 1}, 8] -> "g4", 
         DirectedEdge[{1, 3}, {3, 1}, 2] -> "1", 
         DirectedEdge[{1, 3}, {3, 1}, 6] -> "g2", 
         DirectedEdge[{3, 1}, {2, 1}, 8] -> "g1^-1*g2*g3^-1", 
         DirectedEdge[{2, 1}, {1, 1}, 5] -> "g2^-1*g3*g4^-1", 
         DirectedEdge[{2, 1}, {1, 2}, 4] -> "g4^-1"}, 
       GraphLayout -> {"Dimension" -> 2}, ImageSize -> 400, 
       VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}, 
       VertexLabels -> {{1, 4} -> "(y^-1*x^-1)^2", {1, 3} -> 
         "y^-1*x^-1", {1, 1} -> "1", {2, 1} -> "1", {3, 1} -> "1", {1, 2} -> 
         "(y^-1*x^-1)^3"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.3378023603053425, 0.02536937560291487}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"1\"\>", {0.31454227879334506, 0.08152417985108175}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.2568011971960195, 0.22092348214943944`}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"g1\"\>", {0.2800612787080155, 0.16476867790127228}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.25680119719693395`, 
           0.22092348214956797`}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["\<\"1\"\>", {-0.28006127870890146, 0.16476867790123706}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.3378023603061541, 
           0.02536937560247319}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["\<\"g4\"\>", {-0.3145422787941873, 0.08152417985080454}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"1\"\>", {0.1647686779012163, 0.2800612787080361}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.02536937560285223, 0.3378023603053362}, {0., 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"g2\"\>", {0.08152417985102228, 0.31454227879334956}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.0253693756033302, 0.33780236030572175`}, {
           0., 0.}}], 0.01786032812923874], 
         InsetBox["\<\"1\"\>", {-0.08152417985153886, 0.31454227879363256}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.22092348215000032`, 
           0.25680119719607797`}, {0., 0.}}], 0.01786032812923874], 
         InsetBox["\<\"g3\"\>", {-0.16476867790179078, 0.28006127870816633}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
           0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}], 
          0.01786032812923874], 
         InsetBox["\<\"1\"\>", {0.7005094863348729, 0.10590592883351223}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
           0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}], 
          0.01786032812923874], 
         InsetBox["\<\"g2^-1*g3*g4^-1\"\>", {0.7349904864202024, 0.14038692891884183},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {
           0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
           0.24629285775204157`}}], 0.01786032812923874], 
         InsetBox["\<\"g4^-1\"\>", {0.10590592883267011, 0.022661430783044396},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
           0.3592011169774932}, {-0.5946035575030888, 0.24629285775204157`}}],
           0.01786032812923874], 
         InsetBox["\<\"g4^-1*g3*g2^-1*g1\"\>", {0.1403869289179559, 0.2236314269689972},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
           0.19952472547741282`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         InsetBox["\<\"g2^-1*g3*g4^-1\"\>", {0.5019723874778796, 0.2556795297255895},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
           0.39507883202397376`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         InsetBox["\<\"g2^-1*g1\"\>", {0.5852168855280737, 0.3389240277757962},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
           0.11852356236815229`}, {-0.24629285775332965`, 
           0.5946035575017989}}], 0.01786032812923874], 
         InsetBox["\<\"g2^-1*g1\"\>", {0.2556795297250666, 0.22119852964040634},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
           0.476079995133646}, {-0.24629285775332965`, 0.5946035575017989}}], 
          0.01786032812923874], 
         InsetBox["\<\"g4^-1\"\>", {0.3389240277753185, 0.3734050278613927}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
           0.13827763482792507`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"1\"\>", {0.4204482076268574, 0.05886274906776007}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
           0.09893151553078851}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"g4*g3^-1*g2\"\>", {0.42044820762685736, 0.042044820762685786},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
           0.05942536182748782}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"g1^-1*g2\"\>", {0.42044820762685736, 0.02522689245761156},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076267947, 
           0.019819713459349683`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         InsetBox["\<\"g4\"\>", {0.42044820762685736, 0.008408964152537113}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076267947, -0.019819713459349683`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["\<\"g1^-1*g2*g3^-1*g4\"\>", {0.42044820762685736, -0.008408964152537113},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["\<\"g1^-1\"\>", {0.42044820762685736, -0.02522689245761156},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["\<\"g4*g3^-1\"\>", {0.42044820762685736, -0.042044820762685786},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         InsetBox["\<\"g1^-1*g2*g3^-1\"\>", {0.4204482076268574, -0.05886274906776007},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.5946035575013604, 0.246292857752354}, 
          0.01786032812923874], 
         InsetBox["\<\"1\"\>", 
          Offset[{2, 2}, {0.6124638856305992, 0.26415318588159276}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5946035575030888, 0.24629285775204157}, 
          0.01786032812923874], 
         InsetBox["\<\"(y^-1*x^-1)^3\"\>", 
          Offset[{2, 2}, {-0.57674322937385, 0.26415318588128034}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.24629285775223855, 0.5946035575013856}, 
          0.01786032812923874], 
         InsetBox["\<\"y^-1*x^-1\"\>", 
          Offset[{2, 2}, {0.2641531858814773, 0.6124638856306244}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.24629285775332965, 0.5946035575017989}, 
          0.01786032812923874], 
         InsetBox["\<\"(y^-1*x^-1)^2\"\>", 
          Offset[{2, 2}, {-0.2284325296240909, 0.6124638856310377}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8408964152537147, 0.}, 0.01786032812923874], 
         InsetBox["\<\"1\"\>", 
          Offset[{2, 2}, {0.8587567433829535, 0.01786032812923874}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.01786032812923874], 
         InsetBox["\<\"1\"\>", 
          Offset[{2, 2}, {0.01786032812923874, 0.01786032812923874}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->400]], "Output",
 CellChangeTimes->{3.9058293425634923`*^9, 3.9058293928257065`*^9, 
  3.9058318400467625`*^9},
 CellLabel->"Out[3]=",
 CellID->673617951,ExpressionUUID->"435dc709-499f-44cd-956f-8a3f2fe24e32"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "aba4b691-350a-43b3-9ef3-203275b42d66"],
  $Line = 0; Null]], "ExampleSection",
 CellID->114759276,ExpressionUUID->"414991a4-2572-4881-bd71-ceaa7e3c1c86"],

Cell[CellGroupData[{

Cell["Extracting and Displaying Edge Properties", "ExampleSubsection",
 CellChangeTimes->{{3.9058325022909393`*^9, 3.905832521045726*^9}},
 CellID->167086691,ExpressionUUID->"83242fcc-7c8d-4daa-8651-7a2437acffb9"],

Cell["Highlight all intra-cell edges:", "ExampleText",
 CellChangeTimes->{{3.905828455534647*^9, 3.905828474022303*^9}},
 CellID->164487619,ExpressionUUID->"c8900bb2-54dc-43b6-ae4d-c12da70af360"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058284899709587`*^9, 3.9058285016193233`*^9}, 
   3.905830722690381*^9, 3.9064300438782845`*^9},
 CellLabel->"In[1]:=",
 CellID->140106855,ExpressionUUID->"dc95f0c8-4862-4373-b796-560199a86c59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"graph", ",", 
   RowBox[{
    RowBox[{"EdgeList", "[", "graph", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"cellgraph", "[", "\"\<EdgeTranslations\>\"", "]"}], ",", 
        "\"\<1\>\""}], "]"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9058284752695847`*^9, 3.905828536392344*^9}},
 CellLabel->"In[3]:=",
 CellID->307115202,ExpressionUUID->"15f03c91-6d73-44dc-8cd4-bf048906c351"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {GraphHighlight -> {
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{1, 2}, {3, 1}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{1, 1}, {3, 1}, 1], 
         DirectedEdge[{1, 3}, {3, 1}, 2], 
         DirectedEdge[{1, 4}, {3, 1}, 3]}, 
       VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
            0.3378023603053425, 0.02536937560291487}, {0., 0.}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.2568011971960195, 0.22092348214943944`}, {0., 0.}}], 
          0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{-0.5946035575030888, 
            0.24629285775204157`}, {-0.25680119719693395`, 
            0.22092348214956797`}, {0., 0.}}], 0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.3378023603061541, 
           0.02536937560247319}, {0., 0.}}], 0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
            0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.02536937560285223, 0.3378023603053362}, {0., 0.}}], 
          0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{-0.24629285775332965`, 
            0.5946035575017989}, {-0.0253693756033302, 
            0.33780236030572175`}, {0., 0.}}], 0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.22092348215000032`, 
           0.25680119719607797`}, {0., 0.}}], 0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
            0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
           0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {
           0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
           0.24629285775204157`}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
           0.3592011169774932}, {-0.5946035575030888, 0.24629285775204157`}}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
           0.19952472547741282`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
           0.39507883202397376`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
           0.11852356236815229`}, {-0.24629285775332965`, 
           0.5946035575017989}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
           0.476079995133646}, {-0.24629285775332965`, 0.5946035575017989}}], 
          0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
            0.13827763482792507`}, {0.8408964152537147, 0.}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
           0.09893151553078851}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
           0.05942536182748782}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076267947, 
           0.019819713459349683`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076267947, -0.019819713459349683`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01786032812923874], DiskBox[2, 0.01786032812923874], 
         DiskBox[3, 0.01786032812923874], DiskBox[4, 0.01786032812923874], 
         DiskBox[5, 0.01786032812923874], DiskBox[6, 0.01786032812923874]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9058285407141776`*^9, 3.9058318423214617`*^9},
 CellLabel->"Out[3]=",
 CellID->524356078,ExpressionUUID->"20c5dae8-ef31-4dd0-90be-efc912d5e9af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b25b8ee5-ff59-4834-aa32-14b161c49133"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->113516019,ExpressionUUID->"7121b57e-94b1-4166-bbce-ee63866630dc"],

Cell["Color the boundary edges according to their identification:", \
"ExampleText",
 CellChangeTimes->{{3.905828575958935*^9, 3.905828593740858*^9}, {
   3.90582862603226*^9, 3.905828628458458*^9}, 3.9058286958873634`*^9},
 CellID->927824170,ExpressionUUID->"3c6dcf32-d996-4dd0-b8ae-e0b448137c9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.905828720783902*^9, {3.9058288027326*^9, 3.9058288054812303`*^9}, 
   3.905830724415197*^9, 3.9064300481055164`*^9},
 CellLabel->"In[1]:=",
 CellID->41592735,ExpressionUUID->"f7e9565f-196a-4a11-bead-efc3e1886cc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"EdgeStyle", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"EdgeList", "[", "graph", "]"}], "[", 
          RowBox[{"[", "#3", "]"}], "]"}], "->", 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
          RowBox[{"[", "#4", "]"}], "]"}]}], ")"}], "&"}], "@@@", 
      RowBox[{"cellgraph", "[", "\"\<BoundaryEdges\>\"", "]"}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9058285996007743`*^9, 3.9058286135341206`*^9}, {
  3.905828713386201*^9, 3.9058288280494895`*^9}, {3.905828923371459*^9, 
  3.9058289518035374`*^9}},
 CellLabel->"In[3]:=",
 CellID->586296664,ExpressionUUID->"f4c18a2e-38e4-4bf7-89ab-4bf17dbc8384"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {EdgeStyle -> {
        DirectedEdge[{2, 1}, {1, 1}, 1] -> 
         RGBColor[0.368417, 0.506779, 0.709798], 
         DirectedEdge[{2, 1}, {1, 3}, 6] -> 
         RGBColor[0.880722, 0.611041, 0.142051], 
         DirectedEdge[{2, 1}, {1, 3}, 2] -> 
         RGBColor[0.880722, 0.611041, 0.142051], 
         DirectedEdge[{2, 1}, {1, 2}, 4] -> 
         RGBColor[0.922526, 0.385626, 0.209179], 
         DirectedEdge[{2, 1}, {1, 2}, 8] -> 
         RGBColor[0.922526, 0.385626, 0.209179], 
         DirectedEdge[{2, 1}, {1, 4}, 3] -> 
         RGBColor[0.560181, 0.691569, 0.194885], 
         DirectedEdge[{2, 1}, {1, 4}, 7] -> 
         RGBColor[0.560181, 0.691569, 0.194885], 
         DirectedEdge[{2, 1}, {1, 1}, 5] -> 
         RGBColor[0.368417, 0.506779, 0.709798]}, 
       GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{1, {0.3378023603053425, 0.02536937560291487}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{1, {0.2568011971960195, 0.22092348214943944`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           2, {-0.25680119719693395`, 0.22092348214956797`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{2, {-0.3378023603061541, 0.02536937560247319}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           3, {0.22092348214938526`, 0.25680119719604916`}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{3, {0.02536937560285223, 0.3378023603053362}, 6}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{4, {-0.0253693756033302, 0.33780236030572175`}, 6}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           4, {-0.22092348215000032`, 0.25680119719607797`}, 6}], 
          0.01786032812923874], 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          ArrowBox[
           BezierCurveBox[{5, {0.6772494048228729, 0.0826458473215162}, 1}], 
           0.01786032812923874]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          ArrowBox[
           BezierCurveBox[{5, {0.758250567932199, 0.16364701043083812`}, 1}], 
           0.01786032812923874]}, 
         {RGBColor[0.922526, 0.385626, 0.209179], 
          ArrowBox[
           BezierCurveBox[{
            5, {0.08264584732070052, -0.11290825922545052`}, 2}], 
           0.01786032812923874]}, 
         {RGBColor[0.922526, 0.385626, 0.209179], 
          ArrowBox[
           BezierCurveBox[{5, {0.16364701042992177`, 0.3592011169774932}, 2}],
            0.01786032812923874]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          ArrowBox[
           BezierCurveBox[{5, {0.4458175832297086, 0.19952472547741282`}, 3}],
            0.01786032812923874]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          ArrowBox[
           BezierCurveBox[{5, {0.6413716897762445, 0.39507883202397376`}, 3}],
            0.01786032812923874]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], 
          ArrowBox[
           BezierCurveBox[{
            5, {0.19952472547685837`, 0.11852356236815229`}, 4}], 
           0.01786032812923874]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], 
          ArrowBox[
           BezierCurveBox[{5, {0.3950788320235295, 0.476079995133646}, 4}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685714`, 0.13827763482792507`}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076268578, 0.09893151553078851}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.42044820762685686`, 0.05942536182748782}, 5}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076267947, 0.019819713459349683`}, 5}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.4204482076267947, -0.019819713459349683`}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685686`, -0.05942536182748782}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{6, {0.4204482076268578, -0.09893151553078851}, 5}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{
           6, {0.42044820762685714`, -0.13827763482792507`}, 5}], 
          0.01786032812923874]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01786032812923874], DiskBox[2, 0.01786032812923874], 
         DiskBox[3, 0.01786032812923874], DiskBox[4, 0.01786032812923874], 
         DiskBox[5, 0.01786032812923874], DiskBox[6, 0.01786032812923874]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.9058286137310653`*^9, {3.90582891852524*^9, 3.9058289523131776`*^9}, 
   3.905831844496101*^9, 3.9064300504606485`*^9},
 CellLabel->"Out[3]=",
 CellID->75761552,ExpressionUUID->"42a4cb03-0c36-4be3-b221-c9b637a3cc05"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Faces", "ExampleSubsection",
 CellChangeTimes->{{3.9058325350154595`*^9, 3.9058325356766057`*^9}},
 CellID->20472045,ExpressionUUID->"4abdfddc-da01-4a9f-b809-21d7d766d1a7"],

Cell["Highlight a face in the graph:", "ExampleText",
 CellChangeTimes->{{3.9058289901521225`*^9, 3.9058289945920997`*^9}},
 CellID->771861664,ExpressionUUID->"31ec5f91-b0ab-45db-9ec7-76a05a9a9caf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"cellgraph", "[", "\"\<Graph\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"cellgraph", "[", "\"\<FaceEdges\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.905829030104639*^9, 3.9058307267386136`*^9, 
  3.905940478154134*^9, 3.9064300536759453`*^9},
 CellLabel->"In[1]:=",
 CellID->674768025,ExpressionUUID->"989de8ef-3e5e-4345-b7a8-cfa292039fb5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
      1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 4}, {
       6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 
       3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, Null, {1, 
       1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 
       8}}, {GraphHighlight -> {
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, 
       VertexCoordinates -> {{0.5946035575013604, 
        0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
        0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
        0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.3378023603053425, 0.02536937560291487}, {0., 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.5946035575013604, 0.246292857752354}, {
           0.2568011971960195, 0.22092348214943944`}, {0., 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.25680119719693395`, 
           0.22092348214956797`}, {0., 0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{-0.5946035575030888, 
           0.24629285775204157`}, {-0.3378023603061541, 
           0.02536937560247319}, {0., 0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.22092348214938526`, 0.25680119719604916`}, {0., 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.24629285775223855`, 0.5946035575013856}, {
           0.02536937560285223, 0.3378023603053362}, {0., 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.0253693756033302, 0.33780236030572175`}, {
           0., 0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{-0.24629285775332965`, 
           0.5946035575017989}, {-0.22092348215000032`, 
           0.25680119719607797`}, {0., 0.}}], 0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0.8408964152537147, 0.}, {0.6772494048228729, 
            0.0826458473215162}, {0.5946035575013604, 0.246292857752354}}], 
           0.01786032812923874]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0.8408964152537147, 0.}, {0.758250567932199, 
            0.16364701043083812`}, {0.5946035575013604, 0.246292857752354}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {
           0.08264584732070052, -0.11290825922545052`}, {-0.5946035575030888, 
           0.24629285775204157`}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.16364701042992177`, 
           0.3592011169774932}, {-0.5946035575030888, 0.24629285775204157`}}],
           0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.4458175832297086, 
           0.19952472547741282`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.6413716897762445, 
           0.39507883202397376`}, {0.24629285775223855`, 
           0.5946035575013856}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.19952472547685837`, 
           0.11852356236815229`}, {-0.24629285775332965`, 
           0.5946035575017989}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0.8408964152537147, 0.}, {0.3950788320235295, 
           0.476079995133646}, {-0.24629285775332965`, 0.5946035575017989}}], 
          0.01786032812923874], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0., 0.}, {0.42044820762685714`, 
            0.13827763482792507`}, {0.8408964152537147, 0.}}], 
           0.01786032812923874]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[
           BezierCurveBox[{{0., 0.}, {0.4204482076268578, 
            0.09893151553078851}, {0.8408964152537147, 0.}}], 
           0.01786032812923874]}, 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.42044820762685686`, 
           0.05942536182748782}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.4204482076267947, 
           0.019819713459349683`}, {0.8408964152537147, 0.}}], 
          0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076267947, -0.019819713459349683`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685686`, -0.05942536182748782}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.4204482076268578, -0.09893151553078851}, {0.8408964152537147, 
           0.}}], 0.01786032812923874], 
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.42044820762685714`, -0.13827763482792507`}, {0.8408964152537147, 
           0.}}], 0.01786032812923874]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01786032812923874], DiskBox[2, 0.01786032812923874], 
         DiskBox[3, 0.01786032812923874], DiskBox[4, 0.01786032812923874], 
         DiskBox[5, 0.01786032812923874], DiskBox[6, 0.01786032812923874]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9058290226545687`*^9, 3.905829031575248*^9}, 
   3.9058318469438987`*^9, 3.9059404791286583`*^9, 3.9064300541685905`*^9},
 CellLabel->"Out[2]=",
 CellID->78594184,ExpressionUUID->"e1285dcb-577b-4b98-90a0-fa0d2f006067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "18a25c96-3b6f-4a78-baa0-2c5fcdf599a0"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->8816271,ExpressionUUID->"72a5b470-b4cd-46fa-92e5-c6328561647f"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["GetCellGraphFace",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/GetCellGraphFace"]], 
  "InlineFormula",ExpressionUUID->"68c7a856-0d55-4c16-807c-631b0035dc5a"],
 " to show the face in the Poincar\[EAcute] disk:"
}], "ExampleText",
 CellChangeTimes->{{3.9059404499914303`*^9, 3.905940455853563*^9}, {
  3.9059406170324535`*^9, 3.905940628112991*^9}},
 CellID->516762423,ExpressionUUID->"72f5248f-2dae-4aec-be0e-59cd2d8f05dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellgraph", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"HCCellGraph of T2.6\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["HCCellGraph", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["86088", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PatrickMLenggenhager`HyperBloch`HCCellGraph[<|
     "TriangleGroup" -> {2, 8, 8}, "CellCenter" -> 3, "Genus" -> 2, "Graph" -> 
      Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {3, 
        1}}, {{{1, 6}, {5, 1}, {6, 5}, {3, 6}, {5, 3}, {6, 5}, {4, 6}, {5, 
         4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}, {1, 6}, {5, 1}, {6, 5}, {3, 6}, {
         5, 3}, {6, 5}, {4, 6}, {5, 4}, {6, 5}, {2, 6}, {5, 2}, {6, 5}}, 
         Null, {1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7,
          8, 8, 8}}, {
        VertexCoordinates -> {{0.5946035575013604, 
          0.246292857752354}, {-0.5946035575030888, 0.24629285775204157`}, {
          0.24629285775223855`, 0.5946035575013856}, {-0.24629285775332965`, 
          0.5946035575017989}, {0.8408964152537147, 0.}, {0., 0.}}}], 
      "VertexLabels" -> {
       "1", "(y^-1*x^-1)^3", "y^-1*x^-1", "(y^-1*x^-1)^2", "1", "1"}, 
      "SchwarzTriangleLabels" -> {
       "1", "y^-1*x^-1", "(y^-1*x^-1)^2", "(y^-1*x^-1)^3", "(y^-1*x^-1)^4", 
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^6", "(y^-1*x^-1)^7"}, 
      "EdgeTranslations" -> {
       "1", "1", "1", "1", "g2^-1*g3*g4^-1", "g4*g3^-1*g2", "1", "g2^-1*g1", 
        "g1^-1*g2", "1", "g4^-1", "g4", "g1", "g2^-1*g3*g4^-1", 
        "g1^-1*g2*g3^-1*g4", "g2", "g2^-1*g1", "g1^-1", "g3", "g4^-1", 
        "g4*g3^-1", "g4", "g4^-1*g3*g2^-1*g1", "g1^-1*g2*g3^-1"}, 
      "BoundaryEdges" -> {{"1", "1", 2, 1, 0, "g1"}, {
        "(y*x)^3*y", "(y*x)^3*y", 2, 1, 1, "g1^-1"}, {
        "y^-1*x^-1", "y^-1*x^-1", 5, 2, 0, "g2"}, {
        "(y*x)^2*y", "(y*x)^2*y", 5, 2, 1, "g2^-1"}, {
        "(y^-1*x^-1)^2", "(y^-1*x^-1)^2", 8, 3, 0, "g3"}, {
        "y*x*y", "y*x*y", 8, 3, 1, "g3^-1"}, {
        "(y^-1*x^-1)^3", "(y^-1*x^-1)^3", 11, 4, 0, "g4"}, {
        "y", "y", 11, 4, 1, "g4^-1"}, {
        "(y^-1*x^-1)^4", "(y^-1*x^-1)^4", 14, 1, 0, "g1^-1"}, {
        "x^-1", "x^-1", 14, 1, 1, "g1"}, {
        "(y^-1*x^-1)^5", "(y^-1*x^-1)^5", 17, 2, 0, "g2^-1"}, {
        "(y*x)^6*y", "(y*x)^6*y", 17, 2, 1, "g2"}, {
        "(y^-1*x^-1)^6", "(y^-1*x^-1)^6", 20, 3, 0, "g3^-1"}, {
        "(y*x)^5*y", "(y*x)^5*y", 20, 3, 1, "g3"}, {
        "(y^-1*x^-1)^7", "(y^-1*x^-1)^7", 23, 4, 0, "g4^-1"}, {
        "(y*x)^4*y", "(y*x)^4*y", 23, 4, 1, "g4"}}, 
      "TranslationGenerators" -> <|
       "g1" -> "(z^-1*x^-1*y*z^-1*y*z*y*x^-1)", "g2" -> 
        "(z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z)", "g3" -> 
        "(z*y*(x^-1*z^-1)^2*y^3*x*z)", "g4" -> "(y^-1*z*y^-1*x*z)"|>, "Faces" -> {
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
        Graph[{{3, 1}, {2, 1}, {1, 
         2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}, 
      "FaceEdges" -> {{
         DirectedEdge[{3, 1}, {2, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{3, 1}, {2, 1}, 2]}, {
         DirectedEdge[{3, 1}, {2, 1}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{3, 1}, {2, 1}, 3]}, {
         DirectedEdge[{3, 1}, {2, 1}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{3, 1}, {2, 1}, 4]}, {
         DirectedEdge[{3, 1}, {2, 1}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{3, 1}, {2, 1}, 5]}, {
         DirectedEdge[{3, 1}, {2, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 5], 
         DirectedEdge[{2, 1}, {1, 1}, 1], 
         DirectedEdge[{3, 1}, {2, 1}, 6]}, {
         DirectedEdge[{3, 1}, {2, 1}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 6], 
         DirectedEdge[{2, 1}, {1, 3}, 2], 
         DirectedEdge[{3, 1}, {2, 1}, 7]}, {
         DirectedEdge[{3, 1}, {2, 1}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 7], 
         DirectedEdge[{2, 1}, {1, 4}, 3], 
         DirectedEdge[{3, 1}, {2, 1}, 8]}, {
         DirectedEdge[{3, 1}, {2, 1}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 8], 
         DirectedEdge[{2, 1}, {1, 2}, 4], 
         DirectedEdge[{3, 1}, {2, 1}, 1]}}, "AllFaces" -> {{
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -6, -5}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -7, -6}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -8, -7}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -1, -8}}], 
         Graph[{{1, 1}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -2, -1}}], 
         Graph[{{1, 3}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -3, -2}}], 
         Graph[{{1, 4}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -4, -3}}], 
         Graph[{{1, 2}, {3, 1}, {2, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -5, -4}}]}, {
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {1, 1, -8, -4}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {2, 2, -1, -5}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {3, 3, -2, -6}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {4, 4, -3, -7}}], 
         Graph[{{2, 1}, {1, 1}, {3, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {5, 5, -4, -8}}], 
         Graph[{{2, 1}, {1, 3}, {3, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {6, 6, -5, -1}}], 
         Graph[{{2, 1}, {1, 4}, {3, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {7, 7, -6, -2}}], 
         Graph[{{2, 1}, {1, 2}, {3, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}}, Null, {8, 8, -7, -3}}]}, {
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {1, 1, -5, -2}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {2, 2, -6, -3}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {3, 3, -7, -4}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {4, 4, -8, -5}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          1}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {5, 5, -1, -6}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          3}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {6, 6, -2, -7}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          4}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {7, 7, -3, -8}}], 
         Graph[{{3, 1}, {2, 1}, {1, 
          2}}, {{{1, 2}, {2, 3}, {3, 2}, {2, 1}}, Null, {8, 8, -4, -1}}]}}|>],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"VisualizeCellGraph", "[", 
    RowBox[{"cellgraph", ",", 
     RowBox[{"Elements", "\[Rule]", 
      RowBox[{"<|", "|>"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.65"}], "}"}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Green"}], ",", 
         RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GetCellGraphFace", "[", 
       RowBox[{"cellgraph", ",", 
        RowBox[{
         RowBox[{"cellgraph", "[", "\"\<Faces\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.905940485470827*^9, 3.905940549852429*^9}, 
   3.906430057148162*^9},
 CellLabel->"In[1]:=",
 CellID->817051585,ExpressionUUID->"50a55617-3c02-4303-9645-2a605bd10ff5"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzs3cmOK8+6HXbBnnjoV/BbeOqhpzL8ABIsC57IgGTA8KMWe7LYFi+Lfd95
3QqdVB42ycjoI3L9gHvxP3vvYmXHyJWREV/8T//+//63/+d/92/+zb/5L/8D
/t+//Xf/7//yn//zv/v//rf/Ef/jf/9P/+X/+o//6T/8H//rf/p//sN//A//
+X/+9/89/nD834v/+9f/vhMRERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREReXK73XxvAhERERERfbBarRjdiYiIiIgC9y//8i/L5dL3VhARERER
xe16ve73e3ufj9zebDbxWyx9/m63s/TJRERERERB6fV69nI1cvvX19dwOLTx
4bfbbTQa2fhkIiIiIqLQfH9/20u/IrcD/sP4hx8Oh3q9zvHzRERERFQFk8kE
ufrn58fGh2e5HRaLhdkPXy6X+FiOnyciIiKiKkCcFrl6NBoZHzCTz+3w+/tr
8MPxrIHP7HQ6Bj+TiIiIiChM+/0+y9XIwIfDweCHP+R2GAwG5/PZyId/f3+L
z1yv10Y+kIiIiIgoWLfbrVarZbka//3z82Oq4/05t0O9Xv/9/dUfl47PyR43
OMqdiIiIiJLX7XYfojXS+2g02m63mnn4ZW7P0jseEI7Ho9onHw6H/KfZmPdK
RERERBQUMVD8pUaj0e/3p9PpYrFY/oP8QJeC3J5ptVrD4bDs9FIxKTX/oGG1
ED0RERERkXer1epjus7Dv5f8ZJncLnx/f5fa5tFo9Jz/TY2cJyIiIiLKu91u
9tY8koe4Wyq3y5eFkc/t4/G41DYjpT9/SLfbdXw8Qzh9REREROTAdDoNIfu1
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
eGx1+yUxtOvjms5qlsul71Onwv2B4peUJCHnbDab2WyG52Jnr/zwXOl+JSY3
u2YWR8gow1WNS5rd7zpCiO63281qu2Q1t1+v1xDGUTAPaGJjoiPS0TKOj1Ia
Re/JLNz+DofDdrvFw+98PkdLjoZIf56pMvcTVH3tqTKOkNGHx0Mj86krK4To
jsbK3g5aze1oae1tuSSGdmV8eWdKjKNlHD+mRT2Hl+xBaA9qALDL+q54kvW9
u+VwhIxBHJKqw3t0Px6P9vbOam73XmaEoV0NJ8sYF91oGZfPa+12O5DpqOJe
iVaRnf9BCacPodfrOdvr3W7ne3fL4QgZG1gCQo336G5v6Ul7uX273VraZkkM
7WWxOJU90Y2WcZmRfBXZy8umb3Q6HYb2YIkxe86uzJfW67WbnY0rt3ONY6tE
yeV2u+37PMfEb3S3VwLd3ndtOBxa2mYZDO2lnE4nLgZhW6/XC6RXWYa9voIH
+EV+93S73Q4GA/F2Cbnd/dxDKutwOOCUubk+n+HJzs1uInX42seynB0T4hKH
pXiM7vaWHLWU28/ns8friqFdEhdfdmw2m/k+57Kc5XbchnztI351fjfRZHnc
GCoL6d1X2+Wmyx13Zy97V1a9XucrKscQsXB5sLybDI/R3dJX2FJuRz6xsbUy
GNpl4FuPc8RvvWNIhi7ntelwsFjzl7/O9ofELrDpiBFOpfuJVG5GuQdSRfmj
1Wrl4GjQMzEfx1kfS7x8RXdLPdg2cru9twMf8c770W6341s2j1qtVhR9U1bL
WGWcDRXOHI/Hl520vhbEJH1iYo7jYX4OHsCjyGN4uLB9HOgjNGuTyYQjXQv4
iu42RozbyO32RuMXY2gvIGa1eK/wQzAYDHxfDp85GFvreEwsvgLT6fTdEyv7
DGN3uVxcTqpy8C0OfxIiCz8GBU0cHmB5l3/HS3S3UaHFRm73MuaQof2dw+HA
J/HQeC9R9dFyubR9EFzWxlyv1wUvAb3PjSVTNpuNm7e9DpZPDXwcY3Q1sqpj
v9/zrfpLXu68xp+kjOd2q9Xm32FofyZGvvV6Pfengz4Kf6C77TquyCRuxqXI
dMO6H65D9lyvVzezM2zfdwLvbOErqsCh6ZvNZiGsehAU99Hd+AqkxnO7m2Gx
eQztD7JK1I5PBJUS+EB3XEVWdx+XqIO9QLT4uFy4sycIcgmn3nbutX3lWN14
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
         "], {{0, 250.}, {250., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->288.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->250,
       ImageSizeRaw->{250., 250.},
       PlotRange->{{0, 250.}, {0, 250.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, 
   {RGBColor[0, 0, 1], Arrowheads[{{0.02, 0.65}}], FaceForm[{RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5]}], 
    PolygonBox[CompressedData["
1:eJxdVHs01GkYHlNRO7qdTNJVi8hmyTa11uVJoVrslqIijHE5FicOdlFuXQx7
cmmb2tSRUS6VyyB21GIRaaTJrZDrzG8uxjgkWW0r7PQ7Z//pO+c773nO+13e
93me79vKCnXxp1IolKOq+Sl+Pkq73G9wFUr8jzPHzTc55CuRaFXMFBSHoP25
g1YiS4UvvNd0dY2D9t18+jFdJXSVwr6iODZm2ozvC4ZGIRqICAjLTUfBw14H
6a1RtJ8ZMLyWxoF3IsOtxHMUidY6XWpT12FgcN/EePModEMnLDPis0D3H1zt
M6yAUUe9hf+NHMx7b2GcuK1AYKvl4c0auRhY2sin+ynQG388iZGSj5pfUu5w
DVX4PI8TvPEebPQXTc6OjUBg88QlobEQTTsWnTcrHwFle3StSVwJHH+nbNsf
NYLpZKePmfplOMNP4VjYjEDhO1h8h1OOoIaSYB111fqD9KoMWgXiL0d/q3gh
x0fQ1CxTK2FceiqkKFMOK/1JTjydj4Jqnk+grxw1zULuN3erMGe0yV3fVJXP
8Egwt32E8dCv4qWzMsTqK6pdJH8iq7p0oKRFhrz646uD02pA33I0KClThr2t
u8OP4C/QmVpqYYEy5LiIaP3/1OGKr9A73EKG1DkPg4mBemgdrN7+G02GzljL
UK2GBuRZLJO3D0lR2W0/3HLvMag0rwVGhRQ3K+2vv+c0Yh83pLEpRYXn3X3Y
55tANU1mnfOWYu0B+wdekU/QGsF4E7pHCm4uvyjwp2YYNgk9r66SYraKtznV
5ynSjVdfnFJKYPlwMK3slACUc8/WpTdLoG+w0qzWvQXKm2EVQbkS7FXPmsr0
eIYUdmvrpXMSxPtKzxp7t6JmIuvRNFMCan2byQn/59hQ4Fh5z1YCmdsxo6Wn
hTjse6WzUE+CJX2LnXRjXmBN1c4v5tUl8AnPs2Kz25DdnW+aP0agZ0RUvtKx
HWWswb/vdBB423M/RtHVDsrEzPiHhwTWlZpN13l2YP7yArv4NoEvNbrZKYoO
7Ar5Y3ntJQJKPdOEXZGdiE5zLjaJImBDZWrxKV3gWVsHUfwI9N6KClxI60Jk
jfqOPS4EJh1f/Erd+BL9p5dVdNkSeKcREFle+BKdSa63eswJRGY4rZm3eAW+
7gV/OwMCF40XbPtaXmH6TSprgw4Bq7k24R73bnA8eE89VxBwrHOKWjrWjX4z
+zzNJQQ0+QXvrGN7oN/HlxjNiVEu3DDRsrwXiXonnStmxBCUMJdlc3sRku51
sfitGGfzaeKina9xbXezBn1CjBxHCk3W+BpWh340Hx8To4nXv87SrQ8Rq8K+
Y6iwxVum6h33YQvnMJlnmMh1Fp/th9UzAbl/LLbB0H35AK4Gs8jzy6j8Ixzu
AASHvMj7tYTM7bd3DoJ2qJasbyo83+7nxkHUjDiR9UfvXw811yHwTlaR/UEe
Ub1bPgS/XdfJ/uMOTPppRA0jujCd5MfZjRn9YJEITUdZJH8FAY8ychxFqErQ
JvkdCtgx7MARoXfFWpJ/6mzUsew+EbTbnUl95Gp6Mu5WMfZ7eZP62cd8nWEX
KEZ2jIDUt/lS88kknhjbXq9J/qT/D1VTrh7TYshPa0588ofzv3bcOgsCjPXT
pH+qZ5JPFcWrdHtcS/rr8ofgeu1GAgsvvyf9l/fKnIyf/4//AVNaiO4=
     "]], {ArrowBox[LineBox[{{0., 0.}, {0.8408964152537147, 0.}}]], 
     ArrowBox[LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAr9NamZ/o6j8AAAAAAAAAAJjtMh1G
peo/gDysYMisbD/QzEYUgGLqP4CD9wxVVX0/F6elFVQg6j8g6s3aq32GP/bP
KqnI3uk/4NxzZnCjjj+muNhG5J3pP9B63CeVjZM/X4A1Vq1d6T+APRnTAfKX
PyUlqS0qHuk/IG/uO49+nD8VZd0RYd/oPyjRwDllmaA//l8fNVih6D9oyztQ
HgejP9wIw7YVZOg/2H5XhTWIpT+8doiinyfoP9iCrpNrHKg/PiQD8Pvr5z/I
PsVSf8OqP8QsA4Iwsec/ACl4vS19rT9LlgAmQ3fnP/SHTPyYJLA/eraIkzk+
5z/oY92sopOxP2rBrWsZBuc/AEgVt48Lsz9+kHg46M7mP/w/CwE7jLQ/Kq9c
bKuY5j88JPCTfhW2P6a7rmFoY+Y/vMbNnzOntz/9KB1aJC/mPzyPW38yQbk/
7W8rfuT75T98JOi7UuO6P5y7r9ytyeU/pMBXEWuNvD8VH1NqhZjlP0DLNnJR
P74/FWAUAXBo5T+gUuAL2/i/P5JjzV9yOeU/jP1bJe7cwD8USLspkQvlP9J8
O28UwcE/pDkJ5tDe5D+01kXfyajCPwILXv81s+Q/mrRFl/eTwz9Cn2zDxIjk
P5r+WmGGgsQ/Ai+HYoFf5D8WR0WyXnTFP8tzNe9vN+Q/n6O2q2hpxj8nxM1d
lBDkP/u3rh6MYcc/jioRhPLq4z87uN2NsFzIPwCByhiOxuM/JCUPML1ayT/q
mnCzaqPjP0AGnPKYW8o/iIbLy4uB4z9+Y+R7Kl/LP7zunLn0YOM/AsDPLVhl
zD8bpku0qEHjP+VWVCgIbs0/UGOS0qoj4z8F2gRMIHnOPxO3MQr+BuM/YXKk
PIaGzz8WJEDU
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwdkmtI01EYxucql6kVaHkLyuxmaF7wgjV7EGdhc10sBTVtDBVJsdDFJloG
6SzMC6yIPrhpOCG1pUlboWKl2AzMy9TNzcv+f3FKw+VlCRa69Hx4eXk5nHOe
9/k9voJ7iVlMBoPhv1073V0dsm/LcQ78gka2RDIE2YQiSGGhoVswtR/gDqNN
MP3nzQiNFd3bokXtMBjW9aWNTzQ83wfbetJHsFVrl7Q20DjOmpA8XRxBWN5H
1+5KGr/8gkrDhKMQV/FaA0U0LjL57iqGFsro6LuMTBr6OlGOvUoLYZdjQGQi
jWXuz2fMI2Mw5jt1aGNorLGyhe3NYxgtT6rThdIQ1iS4bUWNQ3XsSRbnJI2y
s/YYw8A4bL+fC3y8aLA3hwYjUycgTVN+T99Pg9uTINprmYAxOK7RZQ8NF1XT
WnSJDicMqrkzmxTaB32sA656PPZL4XWsU9C84zvJ5HrkVWeUta5QKFY4Uy0h
k3gZ0c86ZKVQz2U4z/dOgh1/LXTJQqFPafS8kGxA4cH758O356gV/mv5ogFH
pdfJeXig2Wt3sRHsHxpy31Ly9XSq6xRe5ArI+21M1Q2pfAqa+Azyv/sg378h
ZBrO8d1E32qBgvOgdxpdCwlEvzjWGw5JM1CmqMl+MBd2RphnkBn2iuz/8PJy
Jks0C3FzNfGHl8wXf9hlQt9NAfGvKftzTT3XBHWpB/F3Jjtg9pLUBP3+w8R/
5j/RLZnBBI9hHuFjdvCbl/tSiM24Q/jFFZ2r4eRQkBVpCN/+yv6UciWFU5Nu
FTv8r6pXk9JsFMz5LtadfPD+cuQ9UTTCvW0kP53rFbdbHm1z+9ZN8lW7kfvF
o5eGfewKyV/jeCjp/wERhFC/
       "]]], 
     ArrowBox[LineBox[{{0.5946035576841096, 0.5946035575095049}, {0., 
       0.}}]]}}},
  ImageSize->250,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 CellChangeTimes->{{3.9059405333479443`*^9, 3.9059405510640197`*^9}, 
   3.906430058425834*^9},
 CellLabel->"Out[2]=",
 CellID->746971846,ExpressionUUID->"39e93048-ccd4-417f-9dd9-f86db07ca555"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "3e598867-3ee3-4f87-81b3-aa2b4b1848e2"],
  $Line = 0; Null]], "ExampleSection",
 CellID->34412093,ExpressionUUID->"496c62dd-723d-40f9-8b38-61a6e0731286"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "22dadb2b-e660-4e1a-ab4d-d0c6bd84bd84"],
  $Line = 0; Null]], "ExampleSection",
 CellID->22904382,ExpressionUUID->"a1be84df-6af8-4dff-bc05-382a40c0a6ed"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "3ebf8e61-6a00-4515-83e7-0ebd276b0655"],
  $Line = 0; Null]], "ExampleSection",
 CellID->183122777,ExpressionUUID->"00b81912-e4dd-4bae-90f1-99cd82269031"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->43755039,ExpressionUUID->"2cd5ab76-c812-45ed-9665-4931a1d8de4f"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"96d116b6-d909-4f57-af89-ed6b17c33834"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"8173cb69-6d14-42b8-b213-8a4a1a3f7a78"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"39f144a6-3faf-4f8e-ac2e-880503d692d4"]
}], "History",
 CellID->290458378,ExpressionUUID->"a05b83a0-23b0-4384-8d34-d927cad50d3d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "71d0371a-0647-4f56-a6c7-c128e438b335"]
}], "CategorizationSection",
 CellID->198187633,ExpressionUUID->"4b0afd52-c297-47e1-877f-210b92166e9e"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->123578456,ExpressionUUID->"35256feb-abf2-4e30-bfa8-91225ea1b12a"],

Cell["PatrickMLenggenhager/HyperBloch", "Categorization",
 CellLabel->"Paclet Name",
 CellID->219557852,ExpressionUUID->"c77b671b-a4b5-4ed8-93ef-4c2eca9c12dc"],

Cell["PatrickMLenggenhager`HyperBloch`", "Categorization",
 CellLabel->"Context",
 CellID->4578863,ExpressionUUID->"3a2c4c8a-8ced-481f-88e6-22b71260b2f5"],

Cell["PatrickMLenggenhager/HyperBloch/ref/HCCellGraph", "Categorization",
 CellChangeTimes->{{3.9060227229422197`*^9, 3.906022724440501*^9}},
 CellLabel->"URI",
 CellID->18843436,ExpressionUUID->"c9aa1f3b-4908-4d9a-91e6-3871df65ae2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->216367950,ExpressionUUID->"a8045c2a-ba1c-475e-9855-3526005df5f0"],

Cell["XXXX", "Keywords",
 CellID->352154022,ExpressionUUID->"ad1e530f-cc7d-46df-9c29-f8e103afc8b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->79614600,ExpressionUUID->"b846dbf8-7133-4927-ae2b-81da65a5c2b0"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->454795212,ExpressionUUID->"413b2954-7aec-419b-ab29-71814e26220e"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->306009291,ExpressionUUID->"d7a72885-3197-4bd1-8766-ea574c33e796"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->20565829,ExpressionUUID->"ef447760-2fe1-4d79-aac1-61fee5f45d03"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->860950844,ExpressionUUID->"7c5fb23f-2f80-4369-bc60-2315ac436d22"]
}, Closed]]
}, Open  ]]
},
WindowSize->{821.25, 463.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PatrickMLenggenhager/HyperBloch"|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"4940b8d9-1a19-4b02-a347-22f923d96f3c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[444830, 7789, 486, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"189dd208-1efd-43f3-8fce-9763eb2901df",
   CellTags->"ExtendedExamples",
   CellID->59282690]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 691767, 12546}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 176, 2, 74, "ObjectName",ExpressionUUID->"a50f63d9-64c4-4989-b406-103e2f77c303",
 CellID->714267441],
Cell[759, 26, 1543, 32, 79, "Usage",ExpressionUUID->"ab90c281-322b-4d87-ab9a-78fc7e5c0b68",
 CellID->352873481],
Cell[2305, 60, 673, 16, 28, "Notes",ExpressionUUID->"c1ffea9c-db1e-4de3-9d44-da3b0074e3a2",
 CellID->350026957],
Cell[2981, 78, 9506, 192, 645, "2ColumnTableMod",ExpressionUUID->"6e29fb2a-47c2-407c-930b-d2e4a19d3f1b",
 CellID->192372380],
Cell[12490, 272, 1026, 36, 66, "Notes",ExpressionUUID->"031e25aa-f908-444e-a162-023247731030",
 CellID->23569687],
Cell[13519, 310, 635, 18, 45, "Notes",ExpressionUUID->"11136ea8-b3fd-4844-b757-3d5f40b919f6",
 CellID->39466738],
Cell[14157, 330, 669, 17, 28, "Notes",ExpressionUUID->"d89a89a6-5a0f-4a82-8962-e241a5da3349",
 CellID->154853298]
}, Open  ]],
Cell[CellGroupData[{
Cell[14863, 352, 435, 12, 40, "TechNotesSection",ExpressionUUID->"9fd73f94-9f8f-4710-a3ee-c0de34c1747e",
 CellID->785480147],
Cell[15301, 366, 263, 5, 19, "Tutorials",ExpressionUUID->"f6ef3a7a-cf5b-4035-b87e-caa0f3a6f08a",
 CellID->151400]
}, Open  ]],
Cell[CellGroupData[{
Cell[15601, 376, 472, 13, 39, "RelatedLinksSection",ExpressionUUID->"b98f7b94-2a85-4742-a95b-c1bc1deac6f4",
 CellID->380438368],
Cell[16076, 391, 103, 1, 19, "RelatedLinks",ExpressionUUID->"b4e60018-f294-4783-b512-d8b40111ea3e",
 CellID->158160376]
}, Open  ]],
Cell[CellGroupData[{
Cell[16216, 397, 458, 13, 39, "SeeAlsoSection",ExpressionUUID->"919c7973-d17b-4596-adc4-debd60d1e4fc",
 CellID->118117987],
Cell[16677, 412, 3645, 88, 42, "SeeAlso",ExpressionUUID->"356f1aaa-c00a-473c-934f-c4273ebb5b0b",
 CellID->504977350]
}, Open  ]],
Cell[CellGroupData[{
Cell[20359, 505, 182, 2, 39, "MoreAboutSection",ExpressionUUID->"3985363b-81b8-4e98-a1a5-13589a4a1746",
 CellID->17695889],
Cell[20544, 509, 283, 6, 19, "MoreAbout",ExpressionUUID->"dd0ae97e-deb2-4f7c-9673-9556282e1db3",
 CellID->542581366]
}, Open  ]],
Cell[CellGroupData[{
Cell[20864, 520, 529, 14, 69, "ExamplesInitializationSection",ExpressionUUID->"db687b28-3a2b-48ed-b118-ca7ba3b6ed86",
 CellID->28881273],
Cell[21396, 536, 513, 8, 45, "ExampleInitialization",ExpressionUUID->"3ec8a1ef-81bb-42f6-bd40-9dc0138e000c",
 CellID->318279014]
}, Open  ]],
Cell[CellGroupData[{
Cell[21946, 549, 441, 12, 71, "PrimaryExamplesSection",ExpressionUUID->"feb5a5e6-f6e5-4fbb-94bd-1cfad59bb277",
 CellID->65331860],
Cell[22390, 563, 593, 12, 26, "ExampleText",ExpressionUUID->"e4277e55-d2e2-48bb-8d3d-2e07330e52a5",
 CellID->598674459],
Cell[22986, 577, 8831, 168, 33, "Input",ExpressionUUID->"96a1f24b-6816-4c97-ae22-f627f1ac294c",
 CellID->424664287],
Cell[CellGroupData[{
Cell[31842, 749, 408, 7, 61, "Input",ExpressionUUID->"d049d3a6-aa19-460b-8ed2-844d142cab86",
 CellID->457102273],
Cell[32253, 758, 371, 7, 24, "Output",ExpressionUUID->"370cf7dc-8d0b-4b8e-b997-56c41191b800",
 CellID->691577656],
Cell[32627, 767, 316, 5, 24, "Output",ExpressionUUID->"079a9c49-15d6-4ace-929c-9834da1d606f",
 CellID->277889224],
Cell[32946, 774, 318, 5, 24, "Output",ExpressionUUID->"9279dab8-f38e-45d2-9f44-78147f4b701c",
 CellID->367138058]
}, Open  ]],
Cell[33279, 782, 343, 9, 26, "ExampleText",ExpressionUUID->"eb735601-995f-43dd-993e-db43d9001f5d",
 CellID->1983750],
Cell[CellGroupData[{
Cell[33647, 795, 317, 6, 25, "Input",ExpressionUUID->"5e78b22b-e381-4e17-85f8-c664f8209d7d",
 CellID->138767692],
Cell[33967, 803, 10937, 208, 200, "Output",ExpressionUUID->"ebe7eb87-3309-49f2-81fd-2a4cd425ae2e",
 CellID->76810869]
}, Open  ]],
Cell[44919, 1014, 249, 4, 24, "ExampleText",ExpressionUUID->"4ed0b345-e01e-4664-8ca7-f13f6de716aa",
 CellID->290017938],
Cell[CellGroupData[{
Cell[45193, 1022, 247, 4, 25, "Input",ExpressionUUID->"b6888912-a391-41db-89c3-1690546355fe",
 CellID->676423889],
Cell[45443, 1028, 413, 8, 24, "Output",ExpressionUUID->"48aa55cc-444b-4f43-a860-2bbd7859be4a",
 CellID->83554973]
}, Open  ]],
Cell[45871, 1039, 263, 5, 24, "ExampleText",ExpressionUUID->"4e1d35bd-81a4-4a57-b444-ec97d33dd0a5",
 CellID->416043477],
Cell[CellGroupData[{
Cell[46159, 1048, 258, 4, 25, "Input",ExpressionUUID->"ec65a918-a425-4ea4-998d-f9cd6546507c",
 CellID->212050636],
Cell[46420, 1054, 479, 9, 42, "Output",ExpressionUUID->"d97d41b5-89c2-428c-a582-e56201c1a72a",
 CellID->129529377]
}, Open  ]],
Cell[46914, 1066, 217, 2, 24, "ExampleText",ExpressionUUID->"c23d7427-5f48-486a-8410-deb3f38a17cb",
 CellID->549014001],
Cell[CellGroupData[{
Cell[47156, 1072, 466, 10, 43, "Input",ExpressionUUID->"f1605d53-febe-4368-85bf-1d8cf8c6a482",
 CellID->337642245],
Cell[47625, 1084, 389, 10, 28, "Output",ExpressionUUID->"8c94db96-d248-4959-bb50-51e742ff0885",
 CellID->453683930],
Cell[48017, 1096, 252, 4, 24, "Output",ExpressionUUID->"23e40a16-0f16-44c8-9c85-12b5fe46e4f6",
 CellID->57056107]
}, Open  ]],
Cell[48284, 1103, 244, 4, 24, "ExampleText",ExpressionUUID->"f91c9d4f-b39e-4ff4-bec6-39439eaab23a",
 CellID->203547541],
Cell[CellGroupData[{
Cell[48553, 1111, 297, 6, 25, "Input",ExpressionUUID->"97d256db-ae80-48a7-83d8-a1ca46c96a57",
 CellID->249529850],
Cell[48853, 1119, 256, 4, 24, "Output",ExpressionUUID->"3f2ac5ca-3127-4895-90f3-19365ecd25f6",
 CellID->308194891]
}, Open  ]],
Cell[49124, 1126, 207, 2, 24, "ExampleText",ExpressionUUID->"d8d029f0-fe28-459c-a20f-513a2f6898f0",
 CellID->141332292],
Cell[CellGroupData[{
Cell[49356, 1132, 300, 6, 25, "Input",ExpressionUUID->"0875b69a-fd68-4306-8f15-d0e701dd72b5",
 CellID->140806741],
Cell[49659, 1140, 352, 7, 24, "Output",ExpressionUUID->"9dde63db-1bc3-4040-8308-118fb0df50d8",
 CellID->322380307]
}, Open  ]],
Cell[50026, 1150, 210, 2, 24, "ExampleText",ExpressionUUID->"c9870ec2-b1f7-4f74-833c-620dca255a57",
 CellID->453874717],
Cell[CellGroupData[{
Cell[50261, 1156, 291, 6, 25, "Input",ExpressionUUID->"2d6c0608-a22c-4228-95d6-369ea923d212",
 CellID->65562953],
Cell[50555, 1164, 2352, 47, 79, "Output",ExpressionUUID->"ecc72b37-cfb2-4193-9dad-7f170d4876e0",
 CellID->164972484]
}, Open  ]],
Cell[CellGroupData[{
Cell[52944, 1216, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"796be192-0fac-4e20-bf7a-e1ee0320be6b",
 CellID->821076258],
Cell[53189, 1223, 792, 18, 43, "ExampleText",ExpressionUUID->"ad7b1b91-fb9c-493d-9101-9316714be972",
 CellID->117330499],
Cell[CellGroupData[{
Cell[54006, 1245, 9262, 180, 139, "Input",ExpressionUUID->"174b9b66-c98a-495d-9d63-0e53d8691767",
 CellID->80828223],
Cell[63271, 1427, 381498, 6355, 310, 148385, 2532, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6862812c-5f5c-454f-af72-1e18fc19e3fb",
 CellID->174700215]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[444830, 7789, 486, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"189dd208-1efd-43f3-8fce-9763eb2901df",
 CellTags->"ExtendedExamples",
 CellID->59282690],
Cell[CellGroupData[{
Cell[445341, 7806, 241, 5, 35, "ExampleSection",ExpressionUUID->"a9cd3ade-0d74-40b6-8a0f-54267657c045",
 CellID->169591057],
Cell[CellGroupData[{
Cell[445607, 7815, 176, 2, 24, "ExampleSubsection",ExpressionUUID->"8f249a22-2734-4d04-b7c9-658f449784b9",
 CellID->77762580],
Cell[445786, 7819, 449, 7, 58, "ExampleText",ExpressionUUID->"375adb65-63bf-42d7-964f-73cd6c37c1e1",
 CellID->565783619],
Cell[CellGroupData[{
Cell[446260, 7830, 8820, 170, 51, "Input",ExpressionUUID->"85d481bb-31ad-4ac9-9948-3381a07f2717",
 CellID->464781799],
Cell[455083, 8002, 957, 32, 33, "Output",ExpressionUUID->"64693a74-6f27-4181-96c4-d3a1bd2f85fb",
 CellID->235067371]
}, Open  ]],
Cell[456055, 8037, 488, 8, 58, "ExampleText",ExpressionUUID->"8cb86a7e-ceb9-436a-915d-48b79f58ac52",
 CellID->214135134],
Cell[CellGroupData[{
Cell[456568, 8049, 241, 5, 20, "ExampleDelimiter",ExpressionUUID->"bcd9e864-b677-451e-b1f1-62f3c5ec7388",
 CellID->17659725],
Cell[456812, 8056, 294, 6, 24, "ExampleText",ExpressionUUID->"fd934aa6-041c-4e8d-bff3-7440322d2a05",
 CellID->94632968],
Cell[CellGroupData[{
Cell[457131, 8066, 8819, 170, 51, "Input",ExpressionUUID->"abfc9bc6-108a-4ab1-ae7f-a26d957d962c",
 CellID->22802683],
Cell[465953, 8238, 885, 29, 33, "Output",ExpressionUUID->"e5fd1296-9f72-4d03-b516-7edddaa094ac",
 CellID->255686695]
}, Open  ]],
Cell[466853, 8270, 246, 4, 24, "ExampleText",ExpressionUUID->"92f9435d-c4a9-4d93-8c7c-817a796ab715",
 CellID->444774495]
}, Open  ]],
Cell[CellGroupData[{
Cell[467136, 8279, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"1e27f4a8-52b0-484a-a424-b896f07fc4ee",
 CellID->282194481],
Cell[467381, 8286, 660, 15, 81, "ExampleText",ExpressionUUID->"81ad1767-06b7-4162-9eab-650a8e4f4510",
 CellID->277188354],
Cell[CellGroupData[{
Cell[468066, 8305, 8805, 170, 51, "Input",ExpressionUUID->"7ce35101-cad8-4f39-ac72-b46034414ede",
 CellID->220578341],
Cell[476874, 8477, 1180, 24, 369, "Output",ExpressionUUID->"b1d59ddf-4556-4bf3-bf2a-161d5e916531",
 CellID->263446120]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[478105, 8507, 264, 5, 35, "ExampleSection",ExpressionUUID->"9cd69430-9258-43c2-9dab-6b674decc476",
 CellID->391422088],
Cell[478372, 8514, 241, 5, 23, "ExampleSection",ExpressionUUID->"1ee94778-f405-45f9-97d4-9bc4285eafdf",
 CellID->4228122],
Cell[CellGroupData[{
Cell[478638, 8523, 247, 5, 23, "ExampleSection",ExpressionUUID->"a969f0f9-6994-45a8-b4f1-3013bd98153a",
 CellID->47787490],
Cell[CellGroupData[{
Cell[478910, 8532, 198, 2, 24, "ExampleSubsection",ExpressionUUID->"33c8a5f8-48e1-4c80-963d-d2b31f21b4bd",
 CellID->445462844],
Cell[479111, 8536, 241, 4, 24, "ExampleText",ExpressionUUID->"349a8a5d-0364-4bbb-b063-af932cac0e2d",
 CellID->475614113],
Cell[CellGroupData[{
Cell[479377, 8544, 9058, 173, 68, "Input",ExpressionUUID->"b872adb0-d5a5-4c7a-990e-b07a38406806",
 CellID->788814381],
Cell[488438, 8719, 11196, 234, 217, "Output",ExpressionUUID->"50317ffb-ad59-4ec4-84a2-4998099b9cbe",
 CellID->259743769]
}, Open  ]],
Cell[CellGroupData[{
Cell[499671, 8958, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"f4f10e31-8f70-4576-ae41-d7c660a1c626",
 CellID->282811621],
Cell[499916, 8965, 751, 22, 41, "ExampleText",ExpressionUUID->"eceab449-a11b-4829-9703-4e45ac1e2c2e",
 CellID->283956275],
Cell[500670, 8989, 8800, 169, 51, "Input",ExpressionUUID->"d813de76-7b1d-455d-964f-7fd37b871f10",
 CellID->437721174],
Cell[CellGroupData[{
Cell[509495, 9162, 864, 20, 96, "Input",ExpressionUUID->"9d77a988-d14d-43d6-b383-3763d1ef5bb5",
 CellID->101553327],
Cell[510362, 9184, 12712, 257, 226, "Output",ExpressionUUID->"435dc709-499f-44cd-956f-8a3f2fe24e32",
 CellID->673617951]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[523147, 9449, 258, 5, 35, "ExampleSection",ExpressionUUID->"414991a4-2572-4881-bd71-ceaa7e3c1c86",
 CellID->114759276],
Cell[CellGroupData[{
Cell[523430, 9458, 213, 2, 24, "ExampleSubsection",ExpressionUUID->"83242fcc-7c8d-4daa-8651-7a2437acffb9",
 CellID->167086691],
Cell[523646, 9462, 195, 2, 24, "ExampleText",ExpressionUUID->"c8900bb2-54dc-43b6-ae4d-c12da70af360",
 CellID->164487619],
Cell[523844, 9466, 8800, 169, 51, "Input",ExpressionUUID->"dc95f0c8-4862-4373-b796-560199a86c59",
 CellID->140106855],
Cell[CellGroupData[{
Cell[532669, 9639, 536, 13, 43, "Input",ExpressionUUID->"15f03c91-6d73-44dc-8cd4-bf048906c351",
 CellID->307115202],
Cell[533208, 9654, 12668, 234, 200, "Output",ExpressionUUID->"20c5dae8-ef31-4dd0-90be-efc912d5e9af",
 CellID->524356078]
}, Open  ]],
Cell[CellGroupData[{
Cell[545913, 9893, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"7121b57e-94b1-4166-bbce-ee63866630dc",
 CellID->113516019],
Cell[546158, 9900, 298, 4, 24, "ExampleText",ExpressionUUID->"3c6dcf32-d996-4dd0-b8ae-e0b448137c9f",
 CellID->927824170],
Cell[546459, 9906, 8820, 170, 51, "Input",ExpressionUUID->"f7e9565f-196a-4a11-bead-efc3e1886cc9",
 CellID->41592735],
Cell[CellGroupData[{
Cell[555304, 10080, 858, 22, 78, "Input",ExpressionUUID->"f4c18a2e-38e4-4bf7-89ab-4bf17dbc8384",
 CellID->586296664],
Cell[556165, 10104, 12136, 234, 200, "Output",ExpressionUUID->"42a4cb03-0c36-4be3-b221-c9b637a3cc05",
 CellID->75761552]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[568362, 10345, 178, 2, 24, "ExampleSubsection",ExpressionUUID->"4abdfddc-da01-4a9f-b809-21d7d766d1a7",
 CellID->20472045],
Cell[568543, 10349, 198, 2, 24, "ExampleText",ExpressionUUID->"31ec5f91-b0ab-45db-9ec7-76a05a9a9caf",
 CellID->771861664],
Cell[CellGroupData[{
Cell[568766, 10355, 8905, 172, 51, "Input",ExpressionUUID->"989de8ef-3e5e-4345-b7a8-cfa292039fb5",
 CellID->674768025],
Cell[577674, 10529, 12569, 231, 200, "Output",ExpressionUUID->"e1285dcb-577b-4b98-90a0-fa0d2f006067",
 CellID->78594184]
}, Open  ]],
Cell[CellGroupData[{
Cell[590280, 10765, 240, 5, 20, "ExampleDelimiter",ExpressionUUID->"72a5b470-b4cd-46fa-92e5-c6328561647f",
 CellID->8816271],
Cell[590523, 10772, 518, 12, 26, "ExampleText",ExpressionUUID->"72f5248f-2dae-4aec-be0e-59cd2d8f05dd",
 CellID->516762423],
Cell[CellGroupData[{
Cell[591066, 10788, 9682, 193, 156, "Input",ExpressionUUID->"50a55617-3c02-4303-9645-2a605bd10ff5",
 CellID->817051585],
Cell[600751, 10983, 86877, 1437, 260, "Output",ExpressionUUID->"39e93048-ccd4-417f-9dd9-f86db07ca555",
 CellID->746971846]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[687679, 12426, 250, 5, 35, "ExampleSection",ExpressionUUID->"496c62dd-723d-40f9-8b38-61a6e0731286",
 CellID->34412093],
Cell[687932, 12433, 255, 5, 23, "ExampleSection",ExpressionUUID->"a1be84df-6af8-4dff-bc05-382a40c0a6ed",
 CellID->22904382],
Cell[688190, 12440, 249, 5, 23, "ExampleSection",ExpressionUUID->"00b81912-e4dd-4bae-90f1-99cd82269031",
 CellID->183122777]
}, Open  ]],
Cell[CellGroupData[{
Cell[688476, 12450, 109, 1, 72, "MetadataSection",ExpressionUUID->"2cd5ab76-c812-45ed-9665-4931a1d8de4f",
 CellID->43755039],
Cell[688588, 12453, 473, 11, 26, "History",ExpressionUUID->"a05b83a0-23b0-4384-8d34-d927cad50d3d",
 CellID->290458378],
Cell[CellGroupData[{
Cell[689086, 12468, 484, 13, 21, "CategorizationSection",ExpressionUUID->"4b0afd52-c297-47e1-877f-210b92166e9e",
 CellID->198187633],
Cell[689573, 12483, 134, 2, 35, "Categorization",ExpressionUUID->"35256feb-abf2-4e30-bfa8-91225ea1b12a",
 CellID->123578456],
Cell[689710, 12487, 159, 2, 35, "Categorization",ExpressionUUID->"c77b671b-a4b5-4ed8-93ef-4c2eca9c12dc",
 CellID->219557852],
Cell[689872, 12491, 154, 2, 35, "Categorization",ExpressionUUID->"3a2c4c8a-8ced-481f-88e6-22b71260b2f5",
 CellID->4578863],
Cell[690029, 12495, 234, 3, 35, "Categorization",ExpressionUUID->"c9aa1f3b-4908-4d9a-91e6-3871df65ae2a",
 CellID->18843436]
}, Open  ]],
Cell[CellGroupData[{
Cell[690300, 12503, 110, 1, 31, "KeywordsSection",ExpressionUUID->"a8045c2a-ba1c-475e-9855-3526005df5f0",
 CellID->216367950],
Cell[690413, 12506, 99, 1, 21, "Keywords",ExpressionUUID->"ad1e530f-cc7d-46df-9c29-f8e103afc8b0",
 CellID->352154022]
}, Closed]],
Cell[CellGroupData[{
Cell[690549, 12512, 118, 1, 21, "TemplatesSection",ExpressionUUID->"b846dbf8-7133-4927-ae2b-81da65a5c2b0",
 CellID->79614600],
Cell[690670, 12515, 148, 2, 29, "Template",ExpressionUUID->"413b2954-7aec-419b-ab29-71814e26220e",
 CellID->454795212],
Cell[690821, 12519, 137, 2, 29, "Template",ExpressionUUID->"d7a72885-3197-4bd1-8766-ea574c33e796",
 CellID->306009291],
Cell[690961, 12523, 134, 2, 29, "Template",ExpressionUUID->"ef447760-2fe1-4d79-aac1-61fee5f45d03",
 CellID->20565829],
Cell[691098, 12527, 137, 2, 29, "Template",ExpressionUUID->"7c5fb23f-2f80-4369-bc60-2315ac436d22",
 CellID->860950844]
}, Closed]]
}, Open  ]]
}
]
*)

