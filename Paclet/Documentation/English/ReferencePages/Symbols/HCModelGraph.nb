(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    342348,       6886]
NotebookOptionsPosition[    324775,       6515]
NotebookOutlinePosition[    325584,       6540]
CellTagsIndexPosition[    325503,       6535]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["HCModelGraph", "ObjectName",
 CellChangeTimes->{{3.906001392958563*^9, 3.9060013947050533`*^9}},
 CellID->818851541,ExpressionUUID->"f0b6b5c0-4563-4130-a82e-963bef7fd6e3"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"eb215e51-553c-4d23-b3d7-33c6ba09b53e"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["HCModelGraph",
    BaseStyle->"Link",
    ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCModelGraph"], 
   "[", 
   StyleBox["assoc", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "48ae7e9b-05eb-404d-a25c-eaf7fdaafb48"],
 "\[LineSeparator]represents a model graph with its properties defined by the \
",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "4227f319-ccaa-4127-accf-e0c159760b33"],
 " ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",ExpressionUUID->
  "46029625-3bea-4aab-80c9-01fbfd9d56c8"],
 " as specified below"
}], "Usage",
 CellChangeTimes->{{3.905829581545306*^9, 3.905829600477641*^9}, {
  3.9058469786105475`*^9, 3.905846979071868*^9}, {3.9058470822940197`*^9, 
  3.905847118299162*^9}, {3.905847201010442*^9, 3.9058472015520515`*^9}, {
  3.905847793341299*^9, 3.9058478165846357`*^9}, {3.9058479353010883`*^9, 
  3.9058479458668184`*^9}, {3.9060013858250093`*^9, 3.9060014334234333`*^9}},
 CellID->6025608,ExpressionUUID->"b0dc4d22-72ac-4015-b780-96e84d74be9f"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "b2950ce0-3ae0-4ccb-bb1e-8897d3a6dcaa"],
 " ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",ExpressionUUID->
  "d457006c-cd8b-40b7-aad1-b4ca313915b1"],
 " of a cell graph has the following keys:"
}], "Notes",
 CellChangeTimes->{{3.905668884321773*^9, 3.9056689303746915`*^9}, {
   3.9058296738347907`*^9, 3.9058296769656076`*^9}, {3.905996567562484*^9, 
   3.9059965727716603`*^9}, 3.9060001329598026`*^9, {3.9060001909543123`*^9, 
   3.906000210843789*^9}},
 CellID->350026957,ExpressionUUID->"06e62db1-ccf8-4f68-be25-d3473a99337e"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "a9577a82-6254-482b-81bc-60d011d6ec59"], Cell[TextData[StyleBox[
    "\"TriangleGroup\"", "InlineCode"]], "TableText",ExpressionUUID->
     "f30e8ee0-b9a8-4e88-b4ab-5e6be4f5d082"], Cell[TextData[{
     "list ",
     StyleBox["{r, q, p}", "InlineCode"],
     " representing the signature of the triangle group"
    }], "TableText",ExpressionUUID->"322c0315-53b5-425b-9448-b52bce85cd27"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "d576cc3d-5d7a-46e7-8f28-0477b7527a52"], Cell[TextData[StyleBox[
    "\"CellCenter\"", "InlineCode"]], "TableText",ExpressionUUID->
     "76e4fd0b-218f-4c4f-a23e-2506c7792045"], Cell["\<\
center of the cell, integer between 1 and 3 representing a vertex of type x, \
y, or z, respectively\
\>", "TableText",ExpressionUUID->"aeee528d-4060-445f-b1c2-9a404dd00990"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "f788427f-a30e-46d7-8862-e53b34ee476a"], Cell[TextData[StyleBox[
    "\"Genus\"", "InlineCode"]], "TableText",ExpressionUUID->
     "cb8c2e4b-2188-4059-8af3-0cac22b20b4a"], Cell[
    "genus of the surface on which the cell is compactified", "TableText",
     ExpressionUUID->"402d7e0b-585f-410f-bb92-ce639d573583"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "fdb4b550-9707-4028-b63f-f4cdd9c158a6"], Cell[TextData[StyleBox[
    "\"Graph\"", "InlineCode"]], "TableText",ExpressionUUID->
     "466b802b-4134-40cc-8efe-0fe5a0dacb58"], Cell[TextData[{
     "directed ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "9ea20131-d7e2-4a0d-be1d-19558c07de5a"],
     " representing the model graph with vertex coordinates in the Poincar\
\[EAcute] disk and canonical edge orientation"
    }], "TableText",ExpressionUUID->"7722466a-4b69-4672-b785-89f0cffeeb67"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "49b8b458-6ab2-4889-986c-7cdb7b565d25"], Cell[TextData[StyleBox[
    "\"UndirectedGraph\"", "InlineCode"]], "TableText",ExpressionUUID->
     "31d939a6-1fb4-4c4f-8a63-71432b5447b3"], Cell[TextData[{
     "undirected  ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "12fde3f5-d3f3-409a-8e52-99b8fc3ca9b1"],
     " representing the model graph with vertex coordinates in the Poincar\
\[EAcute] disk and canonical edge orientation"
    }], "TableText",ExpressionUUID->"92b7d017-23e5-4b07-8c2f-de2346c987e8"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "6655bf7a-c9b5-449f-a029-6ee6d665ec84"], Cell[TextData[StyleBox[
    "\"FullGraph\"", "InlineCode"]], "TableText",ExpressionUUID->
     "52a3695a-1a69-46b5-98b6-f275a9162a24"], Cell[TextData[{
     "directed ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "a3d6f8cd-7ba5-41e0-aac7-a25d34cd1465"],
     " representing the model graph with vertex coordinates in the Poincar\
\[EAcute] disk and canonical edge orientation with each edge given in ",
     StyleBox["both",
      FontSlant->"Italic"],
     " directions"
    }], "TableText",ExpressionUUID->"08268068-414e-451d-a06d-df3de68d22c3"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "5a3ca030-0734-44e4-820e-76c3b507e855"], Cell[TextData[StyleBox[
    "\"VertexLabels\"", "InlineCode"]], "TableText",ExpressionUUID->
     "accb6236-de8a-41b1-9a03-35bf619248eb"], Cell[TextData[{
     "list of vertex labels, i.e., elements of ",
     Cell[BoxData[
      RowBox[{
       StyleBox[
        SubscriptBox["T", 
         SuperscriptBox["G", 
          StyleBox["+",
           FontSlant->"Plain"]]],
        FontSlant->"Italic"], 
       RowBox[{"(", 
        SubsuperscriptBox[
         StyleBox["G",
          FontSlant->"Italic"], 
         StyleBox["w",
          FontSlant->"Italic"], "+"], ")"}]}]], "InlineFormula",
      ExpressionUUID->"0317a835-7e23-4e04-a845-2da3992c4755"],
     " given as strings representing words in the generators ",
     StyleBox["x, y, z ",
      FontSlant->"Italic"],
     "of the proper triangle group in the same order as the vertices in the \
graph"
    }], "TableText",ExpressionUUID->"bbc5dcdb-85e3-4e0d-8c45-01e076584372"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "ee6f8103-a889-4b4d-b9f7-016a5e026d7c"], Cell[TextData[StyleBox[
    "\"SchwarzTriangleLabels\"", "InlineCode"]], "TableText",ExpressionUUID->
     "08472e3c-3d00-4d88-b272-0a5f73997c16"], Cell[TextData[{
     "list of labels of the Schwarz triangles in the cell, i.e., elements of ",
     Cell[BoxData[
      RowBox[{
       StyleBox[
        SubscriptBox["T", 
         StyleBox[
          SuperscriptBox[
           StyleBox["\[CapitalDelta]",
            FontSlant->"Plain"], "+"],
          FontSlant->"Plain"]],
        FontSlant->"Italic"], 
       RowBox[{"(", "\[CapitalGamma]", ")"}]}]], "InlineFormula",
      ExpressionUUID->"98eb1a0c-8847-4233-8146-b94aff8e4e28"],
     " given as string representing words in the generators ",
     StyleBox["x, y, z ",
      FontSlant->"Italic"],
     "of the proper triangle group"
    }], "TableText",ExpressionUUID->"accfbf06-5203-46e1-b435-ee3a8bdf83dd"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "da4f0315-381f-4763-aa0c-81f565b229a5"], Cell[TextData[StyleBox[
    "\"EdgeTranslations\"", "InlineCode"]], "TableText",ExpressionUUID->
     "31e0b35d-8825-4422-884d-015fa71cfc59"], Cell[TextData[{
     "list of translations associated with the edges in the same order as the \
eges in the graph; given as words in the generators ",
     StyleBox["\"g1\", \"g2\", ... ", "InlineCode"],
     "of the translation group"
    }], "TableText",ExpressionUUID->"51d039e4-e1d8-4013-9e31-1b36f2e3b41b"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "c1a6b135-79cd-4e22-bc28-74e84195f1fe"], Cell[TextData[StyleBox[
    "\"TranslationGenerators\"", "InlineCode"]], "TableText",ExpressionUUID->
     "1abce0ef-b9b3-4169-8942-b922a06f3dbf"], Cell[TextData[{
     Cell[BoxData[
      ButtonBox["Association",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "cfb05456-4c8e-4489-8e6a-3d74145d242e"],
     " with the translation generators ",
     StyleBox["\"g1\", \"g2\", ...", "InlineCode"],
     " as keys and their representation in the proper triangle group as values"
    }], "TableText",ExpressionUUID->"2617bf8c-f7c9-40df-b649-6f21a012eb8d"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "090ce8db-5292-43b3-9558-b53445c7a157"], Cell[TextData[StyleBox[
    "\"Faces\"", "InlineCode"]], "TableText",ExpressionUUID->
     "9e6231eb-7e35-4c5c-ace4-ed7a77968aa2"], Cell[TextData[{
     "list of oriented faces covering a gray and white Schwarz triangle, each \
given as directed ",
     Cell[BoxData[
      ButtonBox["Graph",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "e6f18a23-1fed-46f7-8282-bf4a3995cb12"],
     ", where edge tags are multiplied by -1 if they have been inverted with \
respect to the edges of the cell graph"
    }], "TableText",ExpressionUUID->"3bc65a01-46b5-4625-a2c8-94e10bd3619b"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "d27a0698-c727-4caa-8439-afa2fbc458cf"], Cell[TextData[StyleBox[
    "\"FaceEdges\"", "InlineCode"]], "TableText",ExpressionUUID->
     "402eac26-e75a-4c61-84a3-631982098025"], Cell[TextData[{
     "list of lists of ",
     Cell[BoxData[
      ButtonBox["DirectedEdge",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "78db5133-26e2-421d-a117-34901eb3a88d"],
     " objects, each in the same orientation as in the cell graph"
    }], "TableText",ExpressionUUID->"91a969bf-24f6-49de-ad88-4895cb7c1f50"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.905669148202936*^9, 3.905669290809169*^9}, {
  3.9056693540622597`*^9, 3.9056693775119796`*^9}, {3.905669585274537*^9, 
  3.905669957953737*^9}, {3.905825070299544*^9, 3.9058251433794518`*^9}, {
  3.9058252319481974`*^9, 3.9058255030191603`*^9}, {3.9058262771795874`*^9, 
  3.9058263486616287`*^9}, {3.9058263930059557`*^9, 3.905826460589053*^9}, {
  3.9058266794413033`*^9, 3.90582671462323*^9}, {3.9058267463975253`*^9, 
  3.9058267463975253`*^9}, {3.905826796487712*^9, 3.905826996850445*^9}, {
  3.90582704007017*^9, 3.9058271527319884`*^9}, {3.9058297387684174`*^9, 
  3.9058299111176357`*^9}, {3.905831154197975*^9, 3.9058313040387383`*^9}, {
  3.905841032778609*^9, 3.905841033055624*^9}},
 CellID->192372380,ExpressionUUID->"ff6d7b33-e4b1-4b37-8b7c-a81b384ce443"],

Cell[TextData[{
 "Vertices are given in the form ",
 StyleBox["{w, gi}", "InlineCode"],
 ", where ",
 StyleBox["w", "InlineCode"],
 " is an integer between 1 and 3 indicating the type of vertex of the Schwarz \
triangle (",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", ",
 StyleBox["z",
  FontSlant->"Italic"],
 ") and ",
 StyleBox["gi", "InlineCode"],
 " is the position in the transversal ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["T", 
     SuperscriptBox["G", 
      StyleBox["+",
       FontSlant->"Plain"]]],
    FontSlant->"Italic"], 
   RowBox[{"(", 
    SubsuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], 
     StyleBox["w",
      FontSlant->"Italic"], "+"], ")"}]}]],ExpressionUUID->
  "aa89c592-e10b-417c-b7a3-7cb5896b51d0"],
 " labeling the Schwarz triangle the vertex is a part of."
}], "Notes",
 CellChangeTimes->{{3.905841197283508*^9, 3.9058413811453133`*^9}},
 CellID->23569687,ExpressionUUID->"d34fb611-da8e-4d30-9faf-96c06e582517"],

Cell[TextData[{
 "Each edge has a unique tag specifying the edge. For models derived from \
cell graphs, the edge tag corresponding to nearest-neighbour edges takes the \
form ",
 StyleBox["{1, {ve, s1, s2}}", "InlineCode"],
 ", where the first entry, ",
 StyleBox["1", "InlineCode"],
 ", indicates a nearest-neighbor edge, ",
 StyleBox["ve", "InlineCode"],
 " is the position of the Schwarz triangle associated with the cell-graph \
edge vertex in ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["T", 
     StyleBox[
      SuperscriptBox[
       StyleBox["\[CapitalDelta]",
        FontSlant->"Plain"], "+"],
      FontSlant->"Plain"]],
    FontSlant->"Italic"], 
   RowBox[{"(", "\[CapitalGamma]", ")"}]}]], "InlineFormula",ExpressionUUID->
  "fc5626d9-ba21-4ea2-afb5-ab4b0c4742cd"],
 ", and ",
 StyleBox["s1, s2", "InlineCode"],
 " are the positions of the Schwarz triangles associated with the cell-graph \
edges in ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    SubscriptBox["T", 
     StyleBox[
      SuperscriptBox[
       StyleBox["\[CapitalDelta]",
        FontSlant->"Plain"], "+"],
      FontSlant->"Plain"]],
    FontSlant->"Italic"], 
   RowBox[{"(", "\[CapitalGamma]", ")"}]}]], "InlineFormula",ExpressionUUID->
  "fc6a4b10-92e9-4ab9-b820-d68a706fed8e"],
 "."
}], "Notes",
 CellChangeTimes->{{3.905841389616559*^9, 3.905841499680417*^9}, {
  3.905841936575581*^9, 3.9058420520860972`*^9}},
 CellID->39466738,ExpressionUUID->"68d2143c-882a-45b3-b5fc-31d7ccf89df4"],

Cell[TextData[{
 "Values can be accessed as follows: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    ButtonBox["HCModelGraph",
     BaseStyle->"Link",
     ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCModelGraph"], 
    "[", 
    StyleBox["assoc", "TI"], "]"}], "[", 
   "\"\<\!\(\*StyleBox[\"key\", \"TI\"]\)\>\"", "]"}]], "InlineFormula",
  ExpressionUUID->"9fcc141f-8269-4f63-aa08-6abeb0fe68d2"],
 "."
}], "Notes",
 CellChangeTimes->{{3.9060011778708534`*^9, 3.9060012209061117`*^9}, {
  3.9060012565376244`*^9, 3.9060012660179677`*^9}, {3.906001460585061*^9, 
  3.9060014840809555`*^9}},
 CellID->154853298,ExpressionUUID->"32383ee7-34f2-43f9-bc48-673259d9ea3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "77dbc804-40d5-477e-9a43-8064ad71fcd3"]
}], "TechNotesSection",
 CellID->13359459,ExpressionUUID->"de5f6cf7-27f3-4cfc-b54d-dbbe13ff3189"],

Cell["XXXX", "Tutorials",
 CellID->62546640,ExpressionUUID->"5f51a899-1a0d-4531-bb24-01677b84a5f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "714adeeb-445e-45f9-a46b-1948711cff78"]
}], "RelatedLinksSection",
 CellID->328612988,ExpressionUUID->"2bfb7cde-d1a5-4ff8-a062-20314ca879cd"],

Cell["XXXX", "RelatedLinks",
 CellID->289518276,ExpressionUUID->"cebcdfd8-99ab-4fcc-a00e-7e788ba17bfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "fd2d7a9c-cbd0-4254-bdda-0d3f31398192"]
}], "SeeAlsoSection",
 CellID->611502557,ExpressionUUID->"bcf40df6-75e5-4ea9-ab2c-61f28104f448"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ImportModelGraphString",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/ImportModelGraphString"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "57d59bd2-ada3-4c13-ba30-85c43221ca86"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["VisualizeModelGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/VisualizeModelGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"8b7f0df2-45ca-4fed-b45d-17aa341f0add",ExpressionUUID->
  "338817a2-e55b-4929-a6b8-bddbe3b5c7d1"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["GetCellGraphFace",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/GetCellGraphFace"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"2a14ce8f-e1a6-4ac9-99a9-e95f792b9164",ExpressionUUID->
  "f2048efc-45c5-4899-8e5b-e7f8d81f1f8d"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["HCCellGraph",
   BaseStyle->"Link",
   ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCCellGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"ced29832-25d8-4432-98cc-a29e492766bd",ExpressionUUID->
  "047adeb8-98ad-46ce-b5ae-4b71c934335b"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["HCSupercellModelGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/HCSupercellModelGraph"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"ee9831ba-90f2-4102-8490-81b6420862c6",ExpressionUUID->
  "7fee2459-e9c1-4717-a9c4-2560f2b38209"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "bb58a7e4-ca23-4dbb-880f-6bbe542cca73"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "ac5aa272-1283-4616-9cfc-777a989b1881", 
     "7f739cbe-a7b6-4097-918b-b89e896d1123"], $CellContext`cellobj$$ = 
    CellObject[
    "24af5ce1-948e-43bc-9d92-d0a0936702da", 
     "f86a5cab-9d2f-43ee-8998-a40116f25b03"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "24af5ce1-948e-43bc-9d92-d0a0936702da"]
}], "SeeAlso",
 CellChangeTimes->{{3.905830069939624*^9, 3.9058300869850364`*^9}, {
  3.9058428276407413`*^9, 3.905842834302393*^9}, {3.9059339930421295`*^9, 
  3.90593400482405*^9}, {3.905940649119913*^9, 3.9059406618293147`*^9}, {
  3.906001494022783*^9, 3.906001513317937*^9}, {3.9060015811734996`*^9, 
  3.9060016032781973`*^9}},
 CellID->98480288,ExpressionUUID->"901cb94b-8072-451f-907b-5d1d78baa0de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellChangeTimes->{{3.843042374232973*^9, 3.843042375545676*^9}},
 CellID->77843704,ExpressionUUID->"cd5f78c2-9e9d-445a-9ddd-885e20cada6a"],

Cell["XXXX", "MoreAbout",
 CellID->75808018,ExpressionUUID->"c1cbb4fa-a228-4766-bbfd-5fa2d1a79223"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "05bb6af9-7097-484e-84a9-213bf8ca0f96"]
}], "ExamplesInitializationSection",
 CellID->70024969,ExpressionUUID->"f814ef76-6307-45cd-8731-dc2725cfd669"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<PatrickMLenggenhager`HyperBloch`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "modelgraph88String", "=", 
   "\"\<HyperCells HCM version 1.0\n[ 2, 8, 8 ]\n[ [ x^2, x*y*z, x*z*y, \
y^3*z^-1 ], 3 ]\n[ g1, g2, g3, g4 ] -> [ z^-1*x^-1*y*z^-1*y*z*y*x^-1, \
z^-1*x^-1*y*z^-1*y*z*y*x^-1*y*x*z, z*y*(x^-1*z^-1)^2*y^3*x*z, y^-1*z*y^-1*x*z \
]\n[ 1, y^-1*x^-1, (y^-1*x^-1)^2, (y^-1*x^-1)^3, (y^-1*x^-1)^4, \
(y^-1*x^-1)^5, (y^-1*x^-1)^6, (y^-1*x^-1)^7 ]\n[ [ 1, (y^-1*x^-1)^3, \
y^-1*x^-1, (y^-1*x^-1)^2 ], [ 1 ], [ 1 ] ]\n[ \\\"TESS\\\", [ 8, 8 ], [ \
\\\"VEF\\\", [ [ 3 ], [ 1 ], [ 2 ] ] ] ]\n[ [ 3, 1 ] ]\n[ [ 1, 1, [ 1, [ 1, \
1, 5 ] ] ], [ 1, 1, [ 1, [ 2, 4, 8 ] ] ], [ 1, 1, [ 1, [ 3, 2, 6 ] ] ], [ 1, \
1, [ 1, [ 4, 3, 7 ] ] ] ]\n[ g1, g4, g2, g3 ]\n[ [ [ 1, -1 ], [ 2, -1 ], [ 4, \
1 ], [ 3, -1 ], [ 1, 1 ], [ 2, 1 ], [ 4, -1 ], [ 3, 1 ] ] ]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "modelgraph83String", "=", 
   "\"\<HyperCells HCM version 1.0\n[ 2, 3, 8 ]\n[ [ x^2, y^3, x*y*z, \
z*y*x*z*y^-1*z^-1*x*z ], 3 ]\n[ g1, g2, g3, g4 ] -> [ \
z^2*y^-1*z^-1*x^-1*z^2*y^-1, z*y^-1*z^-1*x*z^2*y*x^-1, \
y^-1*z^-1*x*z^2*y*x^-1*z, y^-1*z^-2*x*z*y*z^-1*x^-1*y*z^-2*x*z*y*z^-2 ]\n[ 1, \
y^-1*x^-1, (y^-1*x^-1)^2, (y^-1*x^-1)^3, (y^-1*x^-1)^4, (y^-1*x^-1)^5, \
(y^-1*x^-1)^6, (y^-1*x^-1)^7, x^-1, x^-1*y^-1*x^-1, (x^-1*y^-1)^2*x^-1, \
(x^-1*y^-1)^3*x^-1, (x^-1*y^-1)^4*x^-1, (x^-1*y^-1)^5*x^-1, \
(x^-1*y^-1)^6*x^-1, (x^-1*y^-1)^7*x^-1, y^-1, y^-2*x^-1, y^-1*(y^-1*x^-1)^2, \
y^-1*(y^-1*x^-1)^3, y^-1*(y^-1*x^-1)^4, y^-1*(y^-1*x^-1)^5, \
y^-1*(y^-1*x^-1)^6, y^-1*(y^-1*x^-1)^7, x*y*x^-1, x*y*x^-1*y^-1*x^-1, \
x*y*(x^-1*y^-1)^2*x^-1, x*y*(x^-1*y^-1)^3*x^-1, x*y*(x^-1*y^-1)^4*x^-1, \
x*y*(x^-1*y^-1)^5*x^-1, x*y*(x^-1*y^-1)^6*x^-1, x*y*(x^-1*y^-1)^7*x^-1, \
y^-1*x^-1*y^-1, y^-1*x^-1*y^-2*x^-1, (y^-1*x^-1*y^-1)^2*x^-1, \
(y^-1*x^-1*y^-1)^2*x^-1*y^-1*x^-1, y^-1*x^-1*y^-1*(y^-1*x^-1)^4, \
y^-1*x^-1*y^-1*(y^-1*x^-1)^5, y^-1*x^-1*y^-1*(y^-1*x^-1)^6, \
y^-1*x^-1*y^-1*(y^-1*x^-1)^7, y*x*y*x^-1, y*x*y*x^-1*y^-1*x^-1, \
y*x*y*(x^-1*y^-1)^2*x^-1, y*x*y*(x^-1*y^-1)^3*x^-1, y*x*y*(x^-1*y^-1)^4*x^-1, \
y*x*y*(x^-1*y^-1)^5*x^-1, y*x*y*(x^-1*y^-1)^6*x^-1, y*x*y*(x^-1*y^-1)^7*x^-1 \
]\n[ [ 1, (y^-1*x^-1)^7, y^-1, y^-1*x^-1, y^-2*x^-1, (y^-1*x^-1)^6, \
y^-1*(y^-1*x^-1)^7, y^-1*x^-1*y^-1, (y^-1*x^-1)^2, \
(y^-1*x^-1*y^-1)^2*x^-1*y^-1*x^-1, y^-1*(y^-1*x^-1)^2, \
y^-1*x^-1*y^-1*(y^-1*x^-1)^4, (y^-1*x^-1)^5, y^-1*x^-1*y^-2*x^-1, \
y^-1*(y^-1*x^-1)^6, y^-1*x^-1*y^-1*(y^-1*x^-1)^7, y^-1*(y^-1*x^-1)^5, \
(y^-1*x^-1)^3, (y^-1*x^-1*y^-1)^2*x^-1, y^-1*x^-1*y^-1*(y^-1*x^-1)^5, \
y^-1*(y^-1*x^-1)^3, y^-1*(y^-1*x^-1)^4, (y^-1*x^-1)^4, \
y^-1*x^-1*y^-1*(y^-1*x^-1)^6 ], [ 1, y^-1*x^-1, (y^-1*x^-1)^7, \
x*y*(x^-1*y^-1)^7*x^-1, (y^-1*x^-1)^2, x*y*x^-1, (y^-1*x^-1)^6, \
x*y*(x^-1*y^-1)^6*x^-1, x*y*(x^-1*y^-1)^4*x^-1, (y^-1*x^-1)^3, \
x*y*(x^-1*y^-1)^2*x^-1, x*y*x^-1*y^-1*x^-1, x*y*(x^-1*y^-1)^3*x^-1, \
(y^-1*x^-1)^5, x*y*(x^-1*y^-1)^5*x^-1, (y^-1*x^-1)^4 ], [ 1, x^-1, \
(x^-1*y^-1)^3*x^-1, x^-1*y^-1*x^-1, (x^-1*y^-1)^2*x^-1, y*x*y*x^-1 ] ]\n[ \
\\\"TESS\\\", [ 8, 3 ], [ \\\"VEF\\\", [ [ 2 ], [ 1 ], [ 3 ] ] ] ]\n[ [ 2, 1 \
], [ 2, 2 ], [ 2, 3 ], [ 2, 4 ], [ 2, 5 ], [ 2, 6 ], [ 2, 7 ], [ 2, 8 ], [ 2, \
9 ], [ 2, 10 ], [ 2, 11 ], [ 2, 12 ], [ 2, 13 ], [ 2, 14 ], [ 2, 15 ], [ 2, \
16 ] ]\n[ [ 1, 2, [ 1, [ 1, 1, 9 ] ] ], [ 3, 1, [ 1, [ 2, 8, 16 ] ] ], [ 1, \
4, [ 1, [ 3, 17, 32 ] ] ], [ 2, 5, [ 1, [ 4, 2, 10 ] ] ], [ 2, 6, [ 1, [ 5, \
18, 25 ] ] ], [ 7, 3, [ 1, [ 6, 7, 15 ] ] ], [ 3, 8, [ 1, [ 7, 24, 31 ] ] ], \
[ 4, 9, [ 1, [ 8, 33, 45 ] ] ], [ 5, 10, [ 1, [ 9, 3, 11 ] ] ], [ 11, 4, [ 1, \
[ 10, 36, 48 ] ] ], [ 5, 12, [ 1, [ 11, 19, 26 ] ] ], [ 13, 6, [ 1, [ 12, 37, \
41 ] ] ], [ 14, 7, [ 1, [ 13, 6, 14 ] ] ], [ 6, 15, [ 1, [ 14, 34, 46 ] ] ], \
[ 7, 15, [ 1, [ 15, 23, 30 ] ] ], [ 8, 13, [ 1, [ 16, 40, 44 ] ] ], [ 14, 9, \
[ 1, [ 17, 22, 29 ] ] ], [ 10, 16, [ 1, [ 18, 4, 12 ] ] ], [ 12, 8, [ 1, [ \
19, 35, 47 ] ] ], [ 9, 12, [ 1, [ 20, 38, 42 ] ] ], [ 10, 11, [ 1, [ 21, 20, \
27 ] ] ], [ 16, 13, [ 1, [ 22, 21, 28 ] ] ], [ 16, 14, [ 1, [ 23, 5, 13 ] ] \
], [ 15, 11, [ 1, [ 24, 39, 43 ] ] ] ]\n[ 1, 1, 1, 1, 1, 1, 1, g1, 1, g4, 1, \
g1^-1, 1, g2, 1, g4^-1, 1, 1, g3, g2^-1, 1, 1, 1, g3^-1 ]\n[ [ [ 1, 1 ], [ 4, \
1 ], [ 9, 1 ], [ 18, 1 ], [ 23, 1 ], [ 13, 1 ], [ 6, 1 ], [ 2, 1 ] ], [ [ 1, \
-1 ], [ 3, 1 ], [ 8, 1 ], [ 17, -1 ], [ 23, -1 ], [ 22, 1 ], [ 12, 1 ], [ 5, \
-1 ] ], [ [ 18, -1 ], [ 21, 1 ], [ 10, 1 ], [ 3, -1 ], [ 2, -1 ], [ 7, 1 ], [ \
16, 1 ], [ 22, -1 ] ], [ [ 4, -1 ], [ 5, 1 ], [ 14, 1 ], [ 15, -1 ], [ 13, -1 \
], [ 17, 1 ], [ 20, 1 ], [ 11, -1 ] ], [ [ 9, -1 ], [ 11, 1 ], [ 19, 1 ], [ \
7, -1 ], [ 6, -1 ], [ 15, 1 ], [ 24, 1 ], [ 21, -1 ] ], [ [ 12, -1 ], [ 16, \
-1 ], [ 19, -1 ], [ 20, -1 ], [ 8, -1 ], [ 10, -1 ], [ 24, -1 ], [ 14, -1 ] ] \
]\>\""}], ";"}]}], "ExampleInitialization",
 CellChangeTimes->{{3.9058299401476493`*^9, 3.9058299406686397`*^9}, 
   3.905830036575678*^9, 3.9058303181596117`*^9, {3.9058307908030434`*^9, 
   3.905830798876693*^9}, {3.905830840800049*^9, 3.9058308578565907`*^9}},
 CellID->137008383,ExpressionUUID->"bfbdeb00-2e0a-4c67-a87a-eb092ea3df92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->7945103,ExpressionUUID->"bfc6a0a0-cf46-4432-a2ed-eb193905b5e7"],

Cell[TextData[{
 "Import an ",
 Cell[BoxData[
  ButtonBox["HCModelGraph",
   BaseStyle->"Link",
   ButtonData->"paclet:PatrickMLenggenhager/HyperBloch/ref/HCModelGraph"]], 
  "InlineFormula",ExpressionUUID->"589b73a0-a67f-49f6-9254-5dde2fde2278"],
 " (here based on the {8,8} tessellation) from a string using ",
 Cell[BoxData[
  ButtonBox["ImportModelGraphString",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/ImportModelGraphString"]], 
  "InlineFormula",ExpressionUUID->"0ded36a4-4466-4a5f-aee0-d727a28218bb"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.905830187117916*^9, 3.9058301910345726`*^9}, {
  3.9058308663974886`*^9, 3.9058308953268304`*^9}, {3.905830950016134*^9, 
  3.9058309705654926`*^9}, {3.90600152375248*^9, 3.9060015315667562`*^9}, {
  3.9060032162279005`*^9, 3.9060032492114363`*^9}},
 CellID->612628752,ExpressionUUID->"4bbe0204-077d-4d0a-a654-e62324de733c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph88String", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.905830876927809*^9, 3.9058308770218754`*^9}},
 CellLabel->"In[1]:=",
 CellID->45541709,ExpressionUUID->"967455bc-b562-4392-aebf-9ec0af5715c1"],

Cell["\<\
Access its properties such as its triangle-group signature, cell center, and \
genus:\
\>", "ExampleText",
 CellChangeTimes->{{3.905829951735175*^9, 3.9058299840594935`*^9}, {
  3.90600327741728*^9, 3.9060032873867855`*^9}},
 CellID->598674459,ExpressionUUID->"d1bacb34-cbe5-447d-a9da-92a733469b5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modelgraph", "[", "\"\<TriangleGroup\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"modelgraph", "[", "\"\<CellCenter\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"modelgraph", "[", "\"\<Genus\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.905829974382963*^9, 3.9058300057031765`*^9}, {
  3.905830339265074*^9, 3.9058303402722387`*^9}},
 CellLabel->"In[2]:=",
 CellID->457102273,ExpressionUUID->"b6615f13-f1d9-4391-a7a8-9317ae08f822"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "8", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.905830336296172*^9, 3.905830340501052*^9}, 
   3.905831890093461*^9},
 CellLabel->"Out[2]=",
 CellID->3502801,ExpressionUUID->"58d763f4-9f39-4d16-a495-2edd9d927356"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.905830336296172*^9, 3.905830340501052*^9}, 
   3.90583189010252*^9},
 CellLabel->"Out[3]=",
 CellID->352726731,ExpressionUUID->"84d3b5c4-1e68-415f-b7e1-6e34002fe2a0"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.905830336296172*^9, 3.905830340501052*^9}, 
   3.905831890112417*^9},
 CellLabel->"Out[4]=",
 CellID->102864002,ExpressionUUID->"de126527-c364-488b-bf14-0b4308505be9"]
}, Open  ]],

Cell[TextData[{
 "Get the model graph as a ",
 Cell[BoxData[
  ButtonBox["Graph",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "13f627e9-9836-4e14-a977-38aef48ded40"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.905830356059104*^9, 3.9058303712312403`*^9}},
 CellID->10928972,ExpressionUUID->"9a2bc54a-4095-4994-9414-3bb858acf3e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905830359351699*^9, 3.905830361714822*^9}},
 CellLabel->"In[5]:=",
 CellID->546878286,ExpressionUUID->"4e4024b9-206d-4607-afb5-859e68f8ae28"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 
      1}}, {{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, 
       Null, {{1, {1, 1, 5}}, {1, {2, 4, 8}}, {1, {3, 2, 6}}, {
        1, {4, 3, 7}}}}, {VertexCoordinates -> {{0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxd1E9Ik2EcB/D19kdadikC6VZhSC0bNmWU7RuExWqH8tahS1J4CBPssERi
1KSULmWkZrmyiBbONN+6RP3AOUmzFkG0Wx1GRH9uTpIiK57v74WnwXjZy/Pn
9/s832cbjp1qPO74fL6jf7//nv9/XjvR9M7JNOKl4belxoRcf18oL5zMIBgv
Hnq6NSm1+cfZueZRJE8saflU6JZM32C0+fMY7nalssFVV2RFJLA3UTmOPS9D
/oWJXln6YXb1wFoXP561TXccGZQvxTVd9WkXm+fbx6ZyQ3Lw0ro3LR9dzG7x
/yxeuCd93RXO4hMXk7fPvsvFHkjdmdRIT7WLmprLDxe+Z+RqtMF3IzaO5Ndv
TZE7o+JvWjxcsf4R+JRO8x4cJzvMPHAdyZl1wX2E+4J1SJWpC6xTfpm6scz0
IQ2mL5SZPmXI9A06CF1AJwkZNwwYR+kwrqCznKbzK/4O0Llfx9NZ17tFZ91v
N53pLiU6010q6az9zNBZ+52gs3oE6axe5+msnuqszx6+p7s3j+7Sy3WnuM8B
7qvnrXXR3av7N/vQvvaxT+1b8xaiS4JOzKu6e650l7zt7p0L3VHH9eiOEe6X
4jnruUeYA83FHHOi/WxijmLsl+7op0eWOQzTaztzeo2edEe57Y1O+zwQpnMt
78kLOtMdeTrTHQE7D3CeW3nBfjtPuG/nDRfpTHfU01n/J5J2ntFq5x1VdNbx
cTrTHTfpTHfssu8b5u37iI32fcU0nekO5lvdUU1nuuMcnemOlXSmO5hvdUeI
88J6XlyX7lBnunt1bWOdDuumO5azL7pjmH2n6aDOdPfc6A51pjv+AC4VDSU=

       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[BezierCurveBox[{1, 5, 8, 10, 16, 18, 21, 1},
           SplineDegree->7], 0.004014598540145964], 
         ArrowBox[BezierCurveBox[{1, 28, 31, 33, 39, 41, 44, 1},
           SplineDegree->7], 0.004014598540145964], 
         ArrowBox[BezierCurveBox[{1, 51, 54, 56, 62, 64, 67, 1},
           SplineDegree->7], 0.004014598540145964], 
         ArrowBox[BezierCurveBox[{1, 74, 77, 79, 85, 87, 90, 1},
           SplineDegree->7], 0.004014598540145964]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.004014598540145964]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRangePadding->0.1]], "Output",
 CellChangeTimes->{3.905830362254292*^9, 3.9058318921184063`*^9},
 CellLabel->"Out[5]=",
 CellID->556856846,ExpressionUUID->"bdd7b01d-ffb3-4977-a59a-a8a569682375"]
}, Open  ]],

Cell["\<\
Get the elements of the proper triangle group associated with the vertices:\
\>", "ExampleText",
 CellChangeTimes->{{3.905827465594511*^9, 3.9058274950236664`*^9}},
 CellID->290017938,ExpressionUUID->"abad45f2-85f3-441a-8c64-6d9039c0bac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph", "[", "\"\<VertexLabels\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905827496964772*^9, 3.9058275007327175`*^9}, {
  3.905830391764219*^9, 3.9058303925854583`*^9}},
 CellLabel->"In[6]:=",
 CellID->676423889,ExpressionUUID->"abdf26fe-74cd-455c-b752-9a85dcc89dab"],

Cell[BoxData[
 RowBox[{"{", "\<\"1\"\>", "}"}]], "Output",
 CellChangeTimes->{3.9058275020283546`*^9, 3.9058303931184626`*^9, 
  3.905831894435858*^9},
 CellLabel->"Out[6]=",
 CellID->983492630,ExpressionUUID->"0b55c7eb-87ca-48ab-90d7-f641baa3c3bc"]
}, Open  ]],

Cell["\<\
Get the elements of the proper triangle group labeling the Schwarz triangles \
in the underlying cell:\
\>", "ExampleText",
 CellChangeTimes->{{3.905833512515422*^9, 3.905833529460494*^9}, {
  3.905834333615082*^9, 3.905834334552963*^9}},
 CellID->416043477,ExpressionUUID->"91375961-3528-4ee1-ba5a-806963c695d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph", "[", "\"\<SchwarzTriangleLabels\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9058335490986423`*^9, 3.9058335582343364`*^9}, {
  3.905834326931199*^9, 3.9058343272213945`*^9}},
 CellLabel->"In[8]:=",
 CellID->212050636,ExpressionUUID->"92961305-19d7-432d-9209-7e3936954fc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"y^-1*x^-1\"\>", ",", "\<\"(y^-1*x^-1)^2\"\>",
    ",", "\<\"(y^-1*x^-1)^3\"\>", ",", "\<\"(y^-1*x^-1)^4\"\>", 
   ",", "\<\"(y^-1*x^-1)^5\"\>", ",", "\<\"(y^-1*x^-1)^6\"\>", 
   ",", "\<\"(y^-1*x^-1)^7\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.90583432800451*^9},
 CellLabel->"Out[8]=",
 CellID->306936346,ExpressionUUID->"72ebeab0-13a2-48a5-bcf5-123f5d0691cc"]
}, Open  ]],

Cell["Find the translations associated with the edges:", "ExampleText",
 CellChangeTimes->{{3.9058276775524907`*^9, 3.905827689631528*^9}, {
  3.905830408722427*^9, 3.90583041367494*^9}},
 CellID->549014001,ExpressionUUID->"8d7cd2a4-a36a-46c4-9a2f-a89f35bde882"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EdgeList", "[", 
      RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}], "]"}], ",", 
     RowBox[{"modelgraph", "[", "\"\<EdgeTranslations\>\"", "]"}]}], "}"}], 
   "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.905827693303321*^9, 3.905827781566966*^9}, {
  3.9058304193693066`*^9, 3.905830435372081*^9}},
 CellLabel->"In[7]:=",
 CellID->337642245,ExpressionUUID->"62762aaf-a3d4-4445-b282-0d46e4fc6a22"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"1", ",", 
           RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], "}"}]},
      "DirectedEdge"], "\<\"g1\"\>"},
    {
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"1", ",", 
           RowBox[{"{", 
             RowBox[{"2", ",", "4", ",", "8"}], "}"}]}], "}"}]},
      "DirectedEdge"], "\<\"g4\"\>"},
    {
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"1", ",", 
           RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "6"}], "}"}]}], "}"}]},
      "DirectedEdge"], "\<\"g2\"\>"},
    {
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], 
       RowBox[{"{", 
         RowBox[{"1", ",", 
           RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "7"}], "}"}]}], "}"}]},
      "DirectedEdge"], "\<\"g3\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.905830435838974*^9, 3.9058318962586837`*^9},
 CellLabel->"Out[7]//TableForm=",
 CellID->130275292,ExpressionUUID->"663be49a-0b5c-4482-b4d5-a936f83f86ac"]
}, Open  ]],

Cell["\<\
Get a translation in terms of elements of the proper triangle group:\
\>", "ExampleText",
 CellChangeTimes->{{3.905827792082692*^9, 3.9058278096805544`*^9}, 
   3.9058343510635023`*^9},
 CellID->203547541,ExpressionUUID->"366d2eb3-e8c8-49aa-a4e3-29d7ca7b7914"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"modelgraph", "[", "\"\<TranslationGenerators\>\"", "]"}], "[", 
  "\"\<g1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9058278168061867`*^9, 3.905827820986105*^9}, {
  3.9058343538777504`*^9, 3.9058343541951113`*^9}},
 CellLabel->"In[9]:=",
 CellID->249529850,ExpressionUUID->"983499a1-3882-459a-bdd8-42b789d145c9"],

Cell[BoxData["\<\"(z^-1*x^-1*y*z^-1*y*z*y*x^-1)\"\>"], "Output",
 CellChangeTimes->{3.9058343546735687`*^9},
 CellLabel->"Out[9]=",
 CellID->742463359,ExpressionUUID->"4051ca67-998c-4b11-8cfe-1f1e2801356c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9298e88c-8d9c-414c-827f-ffeb5dbe8969"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->263875320,ExpressionUUID->"c67beace-061f-414d-817a-dcca6ba128aa"],

Cell["\<\
A more complicated model graph is the one based on the {8,3} tessellation:\
\>", "ExampleText",
 CellChangeTimes->{{3.905830187117916*^9, 3.9058301910345726`*^9}, {
  3.9058308663974886`*^9, 3.9058308953268304`*^9}, {3.9058309283376913`*^9, 
  3.9058309627536783`*^9}},
 CellID->949070802,ExpressionUUID->"52191cad-252c-44c9-9cd4-3dcd433d9d7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.905830876927809*^9, 3.9058308770218754`*^9}, {
  3.905830973511987*^9, 3.905830979770495*^9}},
 CellLabel->"In[1]:=",
 CellID->13337868,ExpressionUUID->"fd0641b8-39be-4ecd-b7aa-91d297a2a883"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 
       9}, {5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 11}}, 
       Null, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {
      VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
       0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
       0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
       0.405616400801516}, {0.4671129929832897, 
       0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
       0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
       0.2868141075672325}, {-0.46711299298329184`, 
       0.46711299298329}, {-4.834719367710373*^-16, 
       0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
       1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
       7.166803835241803*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{1, 2}, {1, 4}, {2, 5}, {2, 6}, {3, 1}, {3, 8}, {4, 9}, {5,
           10}, {5, 12}, {6, 15}, {7, 3}, {7, 15}, {8, 13}, {9, 12}, {10, 
          11}, {10, 16}, {11, 4}, {12, 8}, {13, 6}, {14, 7}, {14, 9}, {15, 
          11}, {16, 13}, {16, 14}}, 0.016854801362040928`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.016854801362040928], DiskBox[2, 0.016854801362040928], 
         DiskBox[3, 0.016854801362040928], DiskBox[4, 0.016854801362040928], 
         DiskBox[5, 0.016854801362040928], DiskBox[6, 0.016854801362040928], 
         DiskBox[7, 0.016854801362040928], DiskBox[8, 0.016854801362040928], 
         DiskBox[9, 0.016854801362040928], DiskBox[10, 0.016854801362040928], 
         DiskBox[11, 0.016854801362040928], DiskBox[12, 0.016854801362040928],
          DiskBox[13, 0.016854801362040928], 
         DiskBox[14, 0.016854801362040928], DiskBox[15, 0.016854801362040928],
          DiskBox[16, 0.016854801362040928]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9058309812848387`*^9, 3.905831899396719*^9},
 CellLabel->"Out[2]=",
 CellID->149520896,ExpressionUUID->"6e7e6dab-d088-4979-bb5a-66e75326149c"]
}, Open  ]],

Cell["Highlight one of the faces in the graph:", "ExampleText",
 CellChangeTimes->{{3.905831007364915*^9, 3.90583101757894*^9}},
 CellID->269292096,ExpressionUUID->"e03345a0-f636-4216-91c2-06bfc93a18e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"modelgraph", "[", "\"\<FaceEdges\>\"", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9058310294666357`*^9, 3.905831033226536*^9}},
 CellLabel->"In[3]:=",
 CellID->42695933,ExpressionUUID->"d47e028f-a23a-4a62-8e59-b8b08eb1da6e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 
       9}, {5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 11}}, 
       Null, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {GraphHighlight -> {
         DirectedEdge[{2, 13}, {2, 6}, {1, {12, 37, 41}}], 
         DirectedEdge[{2, 1}, {2, 4}, {1, {3, 17, 32}}], 
         DirectedEdge[{2, 14}, {2, 9}, {1, {17, 22, 29}}], 
         DirectedEdge[{2, 4}, {2, 9}, {1, {8, 33, 45}}], 
         DirectedEdge[{2, 2}, {2, 6}, {1, {5, 18, 25}}], 
         DirectedEdge[{2, 16}, {2, 14}, {1, {23, 5, 13}}], 
         DirectedEdge[{2, 16}, {2, 13}, {1, {22, 21, 28}}], 
         DirectedEdge[{2, 1}, {2, 2}, {1, {1, 1, 9}}]}, 
       VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
       0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
       0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
       0.405616400801516}, {0.4671129929832897, 
       0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
       0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
       0.2868141075672325}, {-0.46711299298329184`, 
       0.46711299298329}, {-4.834719367710373*^-16, 
       0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
       1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
       7.166803835241803*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
           0.28681410756723275`}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.4056164008015161, 0.}, {0.6605975298376587, 
           5.664226070673724*^-16}}, 0.016854801362040928`]}, 
         ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
          6.99702747969524*^-17, 0.405616400801516}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
           0.4671129929832897, 0.4671129929832898}}, 0.016854801362040928`]}, 
         ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
          0.4056164008015161, 0.}}, 0.016854801362040928`], 
         ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
          0.46711299298329145`, -0.467112992983291}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.6605975298376587, 
           
           5.664226070673724*^-16}, {-0.4671129929832925, \
-0.46711299298329434`}}, 0.016854801362040928`]}, 
         ArrowBox[{{6.99702747969524*^-17, 
          0.405616400801516}, {-0.28681410756723236`, 0.2868141075672325}}, 
          0.016854801362040928`], 
         ArrowBox[{{6.99702747969524*^-17, 
          0.405616400801516}, {-4.834719367710373*^-16, 0.660597529837657}}, 
          0.016854801362040928`], 
         ArrowBox[{{0.4671129929832897, 0.4671129929832898}, {
          1.0222443204062975`*^-15, -0.660597529837658}}, 
          0.016854801362040928`], 
         ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
          0.28681410756722675`, -0.2868141075672285}}, 0.016854801362040928`],
          ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
          1.0222443204062975`*^-15, -0.660597529837658}}, 
          0.016854801362040928`], 
         ArrowBox[{{
          0.46711299298329145`, -0.467112992983291}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}, 0.016854801362040928`], 
         ArrowBox[{{-0.4671129929832925, -0.46711299298329434`}, \
{-4.834719367710373*^-16, 0.660597529837657}}, 0.016854801362040928`], 
         ArrowBox[{{-0.28681410756723236`, 
          0.2868141075672325}, {-0.46711299298329184`, 0.46711299298329}}, 
          0.016854801362040928`], 
         ArrowBox[{{-0.28681410756723236`, 
          0.2868141075672325}, {-0.4056164008015143, 7.166803835241803*^-16}},
           0.016854801362040928`], 
         ArrowBox[{{-0.46711299298329184`, 0.46711299298329}, {
          0.6605975298376587, 5.664226070673724*^-16}}, 
          0.016854801362040928`], 
         ArrowBox[{{-4.834719367710373*^-16, 0.660597529837657}, {
          0.46711299298329145`, -0.467112992983291}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.6605975298376634, -1.6921517786986418`*^-15}, {
           0.4671129929832897, 0.4671129929832898}}, 0.016854801362040928`]}, 
         ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-6.92670381065753*^-16, -0.4056164008015093}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-0.4671129929832925, -0.46711299298329434`}}, 0.016854801362040928`]}, 
         ArrowBox[{{
          1.0222443204062975`*^-15, -0.660597529837658}, \
{-0.46711299298329184`, 0.46711299298329}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.4056164008015143, 
           7.166803835241803*^-16}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.4056164008015143, 
           7.166803835241803*^-16}, {-0.28681410756723114`, \
-0.2868141075672295}}, 0.016854801362040928`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.016854801362040928], DiskBox[2, 0.016854801362040928], 
         DiskBox[3, 0.016854801362040928], DiskBox[4, 0.016854801362040928], 
         DiskBox[5, 0.016854801362040928], DiskBox[6, 0.016854801362040928], 
         DiskBox[7, 0.016854801362040928], DiskBox[8, 0.016854801362040928], 
         DiskBox[9, 0.016854801362040928], DiskBox[10, 0.016854801362040928], 
         DiskBox[11, 0.016854801362040928], DiskBox[12, 0.016854801362040928],
          DiskBox[13, 0.016854801362040928], 
         DiskBox[14, 0.016854801362040928], DiskBox[15, 0.016854801362040928],
          DiskBox[16, 0.016854801362040928]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9058310335348063`*^9, 3.905831901679516*^9},
 CellLabel->"Out[3]=",
 CellID->440869791,ExpressionUUID->"61c611a0-63d0-47be-b998-51b200a7669d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "fcf80846-beac-4c93-b960-3550c064ebe4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->153383421,ExpressionUUID->"471b8c06-d3b0-480c-ade9-b49ed182d5da"],

Cell[TextData[{
 "Use the high-level visualization function ",
 Cell[BoxData[
  ButtonBox["VisualizeModelGraph",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/VisualizeModelGraph"]], 
  "InlineFormula",ExpressionUUID->"687cc562-4c1b-483a-8367-5d9e2d3f63ac"],
 " to visualize the model graph and its properties:"
}], "ExampleText",
 CellChangeTimes->{{3.905833198076666*^9, 3.9058332262534075`*^9}, {
  3.9058334160392356`*^9, 3.905833416440468*^9}},
 CellID->127419070,ExpressionUUID->"f5dd5ec6-c405-4720-a073-4ab30341461b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"VisualizeModelGraph", "[", 
  RowBox[{"modelgraph", ",", 
   RowBox[{"Elements", "\[Rule]", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{"ShowCellGraph", "\[Rule]", " ", 
      RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NumberOfGenerations", "\[Rule]", "3"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.905833236058297*^9, 3.9058332371159897`*^9}, {
  3.9058333230563803`*^9, 3.90583332668683*^9}, {3.905833369085514*^9, 
  3.9058334010136185`*^9}, {3.9058452274581575`*^9, 3.9058452316804113`*^9}},
 CellLabel->"In[12]:=",
 CellID->352165153,ExpressionUUID->"b0d01208-4dd3-40a8-84f7-3803f79d260f"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzsvctSZMsSptfWmmioV9BbaKqhpi3TA7RMLZkmLbNumcn0bnqR3AUFJJVc
ik2RkECRkGz0N6EKrbMusTw8PC6Z/J/ZObYLkpXrFuF/ePjlv/2f/49/97/+
23/zb/7Nf/6v8X//7t//X//9f/pP//7//h//G/zjf/qP//l//9/+43/4X/6H
//h//of/7T/8p//uf/6v8MP/59+6//2X//4ghBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/8o/
//xT+xRIUfjECSGExALb8fPnz7u7u9onQkrw/v5+f39/fn5+dXVV+1wIIYTs
E29vbzAfi8Xi+vq69rmQjOBBr9frHz9+/PXXX4tPbm9va58UIYSQveHh4eHo
6MhZEFiT2qdDjHl/f99sNj9//jw9PV0MwNOvfYKEEEL2AFiTy8vLrgU5OTmp
dSagyle3gO2173a7p6enX79+4eHigQ51QpeXlxfDryaEEHKQYIF5fHw8NCK6
oDhnpO7v7x8fH/HfsESvYzw/P+O3+Gp8+O+//4ZROzs7w2n89ddfb29v5te4
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
TWLgcfn5IYB8mVkmPnO/cBGDsQJyVDbgON3P9DTDaOmw2LcFZ4vD7lFjiGLg
nghdDS8vL4VDPvKtI+QFN0yaZBHyNRkuCQ3J2nJilNmmzI4cwdsHA16JzWYT
lZk4lA273a5rjLqWYtSvFSUY1F6Rr4NkWxAPonxhq3z7lcKojK8cxURIOlmT
snPEO80imQYNq9ceMNvtFqZc6LoZ2oLuVlFXMwxfOaFgOIDGEMXAU5vdr7+7
uyt/YlnjoiXvBsc+ISlkjTDP3aZqlNkg6ipntb9gNbperyVKrCcbuuu+rmbo
HUoiGA6pMUQxwjf27e2tSrxoVs0wGwh9fX2d79sJOXg2m03W+aGWdQ6ngbDs
mw4Y7svLy7Dh7skGr0i9Znh5eel+PmzXDrIxRDHwpAKvepky0UNy12wJ7LRy
V4KQFArkWFVc0U+FxtHJkMhut4MwCMzMXdmwXq/dD71m6JbfCQiGw24MUYyp
mkVPT0+1TglfbftC9gi4GrgrQUgK+dIlPBWrpoxOHUzKNsR1cBh1O3jZ4GuF
Oc3QLR02Khi+SGOIYuDpDA0lbnLFmle5NcPHREQTSz4SkkLWdAlP3RoIw6nj
5uam4vkcJK+vr7irQ4eAlw2urLfTDD7obigYdrvdl2oMUYyhYy1TATchBTTD
MIGCuxKEJFLAybCorRl6wZD474onc9i4wko9keZkw3a7XfzRDG4vrCcYJGES
JIWuma4V+uh5eXkp8EL2XkU2oiIkhXyFH3tUr7UIU+VPpmTziy8LLMLV1ZW3
Sk42YKmLB+H20L1gcOkYX7kxRDEg1XyJJ8izuifz+vpa4D3sloVcLpcFvpGQ
A6ZrSbNSXTN8/AmGZBGnkrg2Fs6rANnw8PCAV+7i4sIJhu12y8YQhXHirWLo
o6eMZgCr1WrBECZCksGYLeYHbkEzPD8/43php2qfyFfEFWyEwbq9vYVgYGOI
WkChYeC3UA6rmGZwW5MsyEBIIpjA/y4FLEWx7yLNgtfg7u6OL0NdGrn/JU8D
31V7uiVkv3Eh08WcdVhT1F7W/Jd+Pbvdjp7wKpyfnz88PDg/A1Z8FxcXBcLm
yRAM+UUbfdmKpcb89ddfZeItCTlUfB7Bjx8/ynxjC5rBhT5WKa3/ZYFCg0Jw
+0EQDJAKWPRBPLi2yycnJ3gc3GUuicsjaCHlsJhm4K4EIYl0q8WWKYlWXTP4
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
AAAAAAAAAAAAAAA35X+GSmfT
         "], {{0, 300.}, {300., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->168.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->300,
       ImageSizeRaw->{300., 300.},
       PlotRange->{{0, 300.}, {0, 300.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, {{
     {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
         0.28681410756723275`}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.4056164008015161, 0.}, {0.6605975298376587, 
         5.664226070673724*^-16}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
         6.99702747969524*^-17, 0.405616400801516}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
         0.4671129929832897, 0.4671129929832898}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
         0.4056164008015161, 0.}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
         0.46711299298329145`, -0.467112992983291}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.6605975298376587, 
         5.664226070673724*^-16}, {-0.4671129929832925, \
-0.46711299298329434`}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{6.99702747969524*^-17, 
         0.405616400801516}, {-0.28681410756723236`, 0.2868141075672325}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{6.99702747969524*^-17, 
         0.405616400801516}, {-4.834719367710373*^-16, 0.660597529837657}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{0.4671129929832897, 0.4671129929832898}, {
         1.0222443204062975`*^-15, -0.660597529837658}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
         0.28681410756722675`, -0.2868141075672285}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
         1.0222443204062975`*^-15, -0.660597529837658}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{
         0.46711299298329145`, -0.467112992983291}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.4671129929832925, -0.46711299298329434`}, \
{-4.834719367710373*^-16, 0.660597529837657}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.28681410756723236`, 
         0.2868141075672325}, {-0.46711299298329184`, 0.46711299298329}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.28681410756723236`, 
         0.2868141075672325}, {-0.4056164008015143, 
         7.166803835241803*^-16}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.46711299298329184`, 0.46711299298329}, {
         0.6605975298376587, 5.664226070673724*^-16}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-4.834719367710373*^-16, 0.660597529837657}, {
         0.46711299298329145`, -0.467112992983291}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.6605975298376634, -1.6921517786986418`*^-15}, {
         0.4671129929832897, 0.4671129929832898}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-6.92670381065753*^-16, -0.4056164008015093}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-0.4671129929832925, -0.46711299298329434`}}]}}, 
      {RGBColor[1, 0, 0], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{
         1.0222443204062975`*^-15, -0.660597529837658}, \
{-0.46711299298329184`, 0.46711299298329}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.4056164008015143, 
         7.166803835241803*^-16}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}]}}, 
      {RGBColor[0, 0, 1], 
       {Arrowheads[{{0.015, 0.8, {
            GraphicsBox[
             
             FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
              3}}}, {{{0., 0.}, {0., 
              0.}, {-0.42233177292624635`, -0.2761782454396067}, {-1., \
-0.3073863871742821}, {-1., -0.3073863871742821}, {-0.8561525608627805, \
-0.14844580692378884`}, {-0.8561525608627805, 0.}, {-0.8561525608627805, 
              0.1484458069237884}, {-1., 0.3073863871742821}, {-1., 
              0.3073863871742821}, {-0.42233177292624635`, 
              0.2761782454396067}, {0., 0.}, {0., 0.}}}]], 
            0.8561525608627805}}}], 
        ArrowBox[{{-0.4056164008015143, 
         7.166803835241803*^-16}, {-0.28681410756723114`, \
-0.2868141075672295}}]}}}, 
     {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0]}], FaceForm[
      Opacity[0]], {DiskBox[{0.4056164008015161, 0.}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], 
        Offset[{2, 2}, {0.4056164008015161, 0.}], ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.2868141075672326, 0.28681410756723275}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], 
        Offset[{2, 2}, {0.2868141075672326, 0.28681410756723275}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.28681410756722675, -0.2868141075672285}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], 
        Offset[{2, 2}, {0.28681410756722675, -0.2868141075672285}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.6605975298376587, 5.664226070673724*^-16}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], 
        Offset[{2, 2}, {0.6605975298376587, 5.664226070673724*^-16}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{6.99702747969524*^-17, 0.405616400801516}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "5"}], "}"}], 
        Offset[{2, 2}, {6.99702747969524*^-17, 0.405616400801516}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.4671129929832897, 0.4671129929832898}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "6"}], "}"}], 
        Offset[{2, 2}, {0.4671129929832897, 0.4671129929832898}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-6.92670381065753*^-16, -0.4056164008015093}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "7"}], "}"}], 
        Offset[{2, 2}, {-6.92670381065753*^-16, -0.4056164008015093}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{0.46711299298329145, -0.467112992983291}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "8"}], "}"}], 
        Offset[{2, 2}, {0.46711299298329145, -0.467112992983291}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.4671129929832925, -0.46711299298329434}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "9"}], "}"}], 
        Offset[{2, 2}, {-0.4671129929832925, -0.46711299298329434}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.28681410756723236, 0.2868141075672325}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "10"}], "}"}], 
        Offset[{2, 2}, {-0.28681410756723236, 0.2868141075672325}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.46711299298329184, 0.46711299298329}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "11"}], "}"}], 
        Offset[{2, 2}, {-0.46711299298329184, 0.46711299298329}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-4.834719367710373*^-16, 0.660597529837657}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "12"}], "}"}], 
        Offset[{2, 2}, {-4.834719367710373*^-16, 0.660597529837657}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.6605975298376634, -1.6921517786986418*^-15}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "13"}], "}"}], 
        Offset[{2, 2}, {-0.6605975298376634, -1.6921517786986418*^-15}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.28681410756723114, -0.2868141075672295}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "14"}], "}"}], 
        Offset[{2, 2}, {-0.28681410756723114, -0.2868141075672295}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{1.0222443204062975*^-15, -0.660597529837658}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "15"}], "}"}], 
        Offset[{2, 2}, {1.0222443204062975*^-15, -0.660597529837658}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}, {
       DiskBox[{-0.4056164008015143, 7.166803835241803*^-16}, 0.], InsetBox[
        RowBox[{"{", 
         RowBox[{"2", ",", "16"}], "}"}], 
        Offset[{2, 2}, {-0.4056164008015143, 7.166803835241803*^-16}], 
        ImageScaled[{0, 0}],
        BaseStyle->"Graphics"]}}}, 
    {GrayLevel[0], AbsolutePointSize[5], PointBox[{0.4056164008015161, 0.}], 
     PointBox[{0.2868141075672326, 0.28681410756723275`}], 
     PointBox[{0.28681410756722675`, -0.2868141075672285}], 
     PointBox[{0.6605975298376587, 5.664226070673724*^-16}], 
     PointBox[{6.99702747969524*^-17, 0.405616400801516}], 
     PointBox[{0.4671129929832897, 0.4671129929832898}], 
     PointBox[{-6.92670381065753*^-16, -0.4056164008015093}], 
     PointBox[{0.46711299298329145`, -0.467112992983291}], 
     PointBox[{-0.4671129929832925, -0.46711299298329434`}], 
     PointBox[{-0.28681410756723236`, 0.2868141075672325}], 
     PointBox[{-0.46711299298329184`, 0.46711299298329}], 
     PointBox[{-4.834719367710373*^-16, 0.660597529837657}], 
     PointBox[{-0.6605975298376634, -1.6921517786986418`*^-15}], 
     PointBox[{-0.28681410756723114`, -0.2868141075672295}], 
     PointBox[{1.0222443204062975`*^-15, -0.660597529837658}], 
     PointBox[{-0.4056164008015143, 7.166803835241803*^-16}]}}},
  ImageSize->300,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 CellChangeTimes->{
  3.905833330040186*^9, {3.905833369694011*^9, 3.9058334031351347`*^9}, 
   3.90584523230589*^9},
 CellLabel->"Out[13]=",
 CellID->271682166,ExpressionUUID->"09c50ae9-79e3-47a6-b800-8d92f818f292"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "83a98bfe-d6bc-479b-a5fc-04a0479a8793"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->580082300,ExpressionUUID->"799a778c-b6de-4a0f-b467-4bf5627d27a6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "159d1ecc-b696-46e7-84ec-a0e1967dfbde"],
  $Line = 0; Null]], "ExampleSection",
 CellID->95233038,ExpressionUUID->"8dc97d29-bf52-43d2-9fe6-2c9a738aa3fb"],

Cell[CellGroupData[{

Cell["UndirectedGraph and FullGraph", "ExampleSubsection",
 CellChangeTimes->{{3.905834290089153*^9, 3.9058342978284683`*^9}},
 CellID->543049420,ExpressionUUID->"2858ad80-4969-489b-9eec-df83d80b8b95"],

Cell["\<\
The orientation of the directed edges in the model graph is inherited from \
the orientation of the cell graph the model is derived from and does not \
encode orientation of faces:\
\>", "ExampleText",
 CellChangeTimes->{{3.9058344823755865`*^9, 3.905834630176594*^9}},
 CellID->294749313,ExpressionUUID->"87be4e9d-6e8b-4291-947b-d51019738a32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph83", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"modelgraph83", "[", "\"\<Graph\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.905834726246307*^9, 3.9058347286224003`*^9}},
 CellLabel->"In[5]:=",
 CellID->501425585,ExpressionUUID->"5f6ba161-c0d1-4ba9-b590-42c3c8c967f7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 
       9}, {5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 11}}, 
       Null, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {
      VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
       0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
       0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
       0.405616400801516}, {0.4671129929832897, 
       0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
       0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
       0.2868141075672325}, {-0.46711299298329184`, 
       0.46711299298329}, {-4.834719367710373*^-16, 
       0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
       1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
       7.166803835241803*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{1, 2}, {1, 4}, {2, 5}, {2, 6}, {3, 1}, {3, 8}, {4, 9}, {5,
           10}, {5, 12}, {6, 15}, {7, 3}, {7, 15}, {8, 13}, {9, 12}, {10, 
          11}, {10, 16}, {11, 4}, {12, 8}, {13, 6}, {14, 7}, {14, 9}, {15, 
          11}, {16, 13}, {16, 14}}, 0.016854801362040928`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.016854801362040928], DiskBox[2, 0.016854801362040928], 
         DiskBox[3, 0.016854801362040928], DiskBox[4, 0.016854801362040928], 
         DiskBox[5, 0.016854801362040928], DiskBox[6, 0.016854801362040928], 
         DiskBox[7, 0.016854801362040928], DiskBox[8, 0.016854801362040928], 
         DiskBox[9, 0.016854801362040928], DiskBox[10, 0.016854801362040928], 
         DiskBox[11, 0.016854801362040928], DiskBox[12, 0.016854801362040928],
          DiskBox[13, 0.016854801362040928], 
         DiskBox[14, 0.016854801362040928], DiskBox[15, 0.016854801362040928],
          DiskBox[16, 0.016854801362040928]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9058346323603354`*^9, 3.9058347295071583`*^9},
 CellLabel->"Out[6]=",
 CellID->30272748,ExpressionUUID->"07af7784-c29f-40e0-9e6f-d214c7f9501a"]
}, Open  ]],

Cell["If an undirected graph is required, use:", "ExampleText",
 CellChangeTimes->{{3.905834637267707*^9, 3.9058346478063445`*^9}},
 CellID->187418973,ExpressionUUID->"f4335d4d-0e40-4d94-8589-aaa7f1725da5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph83", "[", "\"\<UndirectedGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9058346686164103`*^9, 3.9058346706553645`*^9}, 
   3.905834730893262*^9},
 CellLabel->"In[7]:=",
 CellID->438025603,ExpressionUUID->"765478ed-a90b-4341-91ac-7def6c42ab19"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 16}}, {
      Null, {{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 9}, {
       5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 
       11}}, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {
      AlignmentPoint -> Center, AspectRatio -> 0.9983999999999948, Axes -> 
       False, AxesLabel -> None, AxesOrigin -> {0., 0.}, 
       AxesStyle -> {{}, {}}, Background -> None, BaselinePosition -> 
       Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, 
       EdgeLabels -> {None}, EdgeStyle -> {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]]}, Editable -> False, Epilog -> {}, FormatType -> 
       TraditionalForm, Frame -> False, FrameLabel -> None, 
       FrameStyle -> {{{}, {}}, {{}, {}}}, FrameTicks -> None, 
       FrameTicksStyle -> {{{}, {}}, {{}, {}}}, GraphLayout -> Automatic, 
       GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {{}, {}},
        ImageMargins -> 0., ImagePadding -> {{0., 0.}, {0., 0.}}, 
       ImageSize -> {240., 239.6159999999988}, LabelStyle -> {}, 
       PerformanceGoal -> Automatic, PlotLabel -> None, 
       PlotRange -> {{-0.6774523311997043, 
        0.6774523311996996}, {-0.6774523311996989, 0.6774523311996978}}, 
       PlotRangeClipping -> False, 
       PlotRangePadding -> {{0.02822718046665429, 0.02822718046665429}, {
        0.027098093247988064`, 0.027098093247988064`}}, 
       PlotRegion -> {{0., 1.}, {0., 1.}}, PlotTheme -> Automatic, 
       Prolog -> {}, RotateLabel -> True, Ticks -> {None, None}, 
       TicksStyle -> {{}, {}}, 
       VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}, VertexLabels -> {None}, 
       VertexShapeFunction -> {"Circle"}, VertexStyle -> {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        LineBox[{{
          DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
           "VertexID$2", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
           "VertexID$3", Automatic, Center]}, {
          DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
           "VertexID$4", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
           "VertexID$5", Automatic, Center]}, {
          DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
           "VertexID$6", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
           "VertexID$7", Automatic, Center]}, {
          DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
           "VertexID$8", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
           "VertexID$9", Automatic, Center]}, {
          DynamicLocation["VertexID$4", Automatic, Center], DynamicLocation[
           "VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
           "VertexID$10", Automatic, Center]}, {
          DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
           "VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
           "VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$6", Automatic, Center], DynamicLocation[
           "VertexID$15", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], DynamicLocation[
           "VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$7", Automatic, Center], DynamicLocation[
           "VertexID$15", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], DynamicLocation[
           "VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$8", Automatic, Center], DynamicLocation[
           "VertexID$13", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], DynamicLocation[
           "VertexID$12", Automatic, Center]}, {
          DynamicLocation["VertexID$9", Automatic, Center], DynamicLocation[
           "VertexID$14", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], DynamicLocation[
           "VertexID$11", Automatic, Center]}, {
          DynamicLocation["VertexID$10", Automatic, Center], DynamicLocation[
           "VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$11", Automatic, Center], DynamicLocation[
           "VertexID$15", Automatic, Center]}, {
          DynamicLocation["VertexID$13", Automatic, Center], DynamicLocation[
           "VertexID$16", Automatic, Center]}, {
          DynamicLocation["VertexID$14", Automatic, Center], DynamicLocation[
           "VertexID$16", Automatic, Center]}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[DiskBox[{0.4056164008015161, 0.}, 0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[
         DiskBox[{0.2868141075672326, 0.28681410756723275}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[
         DiskBox[{0.28681410756722675, -0.2868141075672285}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[
         DiskBox[{0.6605975298376587, 5.664226070673724*^-16}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$4"], 
        TagBox[
         DiskBox[{6.99702747969524*^-17, 0.405616400801516}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$5"], 
        TagBox[
         DiskBox[{0.4671129929832897, 0.4671129929832898}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$6"], 
        TagBox[
         DiskBox[{-6.92670381065753*^-16, -0.4056164008015093}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$7"], 
        TagBox[
         DiskBox[{0.46711299298329145, -0.467112992983291}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$8"], 
        TagBox[
         DiskBox[{-0.4671129929832925, -0.46711299298329434}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$9"], 
        TagBox[
         DiskBox[{-0.28681410756723236, 0.2868141075672325}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$10"], 
        TagBox[
         DiskBox[{-0.46711299298329184, 0.46711299298329}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$11"], 
        TagBox[
         DiskBox[{-4.834719367710373*^-16, 0.660597529837657}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$12"], 
        TagBox[
         DiskBox[{-0.6605975298376634, -1.6921517786986418*^-15}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$13"], 
        TagBox[
         DiskBox[{-0.28681410756723114, -0.2868141075672295}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$14"], 
        TagBox[
         DiskBox[{1.0222443204062975*^-15, -0.660597529837658}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$15"], 
        TagBox[
         DiskBox[{-0.4056164008015143, 7.166803835241803*^-16}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$16"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->{0., 0.},
  AxesStyle->{{}, {}},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"NetworkGraphics",
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{{{}, {}}, {{}, {}}},
  FrameTicks->None,
  FrameTicksStyle->{{{}, {}}, {{}, {}}},
  GridLines->None,
  GridLinesStyle->{{}, {}},
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{240., 239.6159999999988},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->{{-0.6774523311997043, 0.6774523311996996}, {-0.6774523311996989,
    0.6774523311996978}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0.02822718046665429, 0.02822718046665429}, {
   0.027098093247988064`, 0.027098093247988064`}},
  PlotRegion->{{0., 1.}, {0., 1.}},
  Prolog->{},
  RotateLabel->True,
  Ticks->{None, None},
  TicksStyle->{{}, {}}]], "Output",
 CellChangeTimes->{3.9058346713085732`*^9, 3.9058347316733723`*^9},
 CellLabel->"Out[7]=",
 CellID->162496967,ExpressionUUID->"2f94c3b2-7c81-4363-a06a-8f26569e0dec"]
}, Open  ]],

Cell["This works properly also for degenerate graphs:", "ExampleText",
 CellChangeTimes->{{3.9058346975661583`*^9, 3.9058347043546233`*^9}},
 CellID->9126526,ExpressionUUID->"acb9c219-b378-45ae-99b6-51a4d66c1062"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph88", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph88String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"modelgraph88", "[", "\"\<UndirectedGraph\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.905834711754748*^9, 3.905834761549712*^9}},
 CellLabel->"In[10]:=",
 CellID->29461772,ExpressionUUID->"837813ec-890a-4ece-b2a2-be35066a2414"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 1}}, {
      Null, {{1, 1}, {1, 1}, {1, 1}, {1, 
       1}}, {{1, {1, 1, 5}}, {1, {2, 4, 8}}, {1, {3, 2, 6}}, {
        1, {4, 3, 7}}}}, {
      AlignmentPoint -> Center, AspectRatio -> 1., Axes -> False, AxesLabel -> 
       None, AxesOrigin -> {0., 0.}, AxesStyle -> {{}, {}}, Background -> 
       None, BaselinePosition -> Automatic, BaseStyle -> {}, 
       ContentSelectable -> Automatic, EdgeLabels -> {None}, EdgeStyle -> {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]]}, Editable -> False, Epilog -> {}, FormatType -> 
       TraditionalForm, Frame -> False, FrameLabel -> None, 
       FrameStyle -> {{{}, {}}, {{}, {}}}, FrameTicks -> None, 
       FrameTicksStyle -> {{{}, {}}, {{}, {}}}, GraphLayout -> Automatic, 
       GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {{}, {}},
        ImageMargins -> 0., ImagePadding -> {{0., 0.}, {0., 0.}}, 
       ImageSize -> {240., 240.}, LabelStyle -> {}, PerformanceGoal -> 
       Automatic, PlotLabel -> None, 
       PlotRange -> {{-0.0809172992817743, 
        0.08091729928177427}, {-0.08091729928177427, 0.0809172992817743}}, 
       PlotRangeClipping -> False, 
       PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
       PlotRegion -> {{0., 1.}, {0., 1.}}, PlotTheme -> Automatic, 
       Prolog -> {}, RotateLabel -> True, Ticks -> {None, None}, 
       TicksStyle -> {{}, {}}, VertexCoordinates -> {{0., 0.}}, 
       VertexLabels -> {None}, VertexShapeFunction -> {"Circle"}, VertexStyle -> {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        BezierCurveBox[{
         DynamicLocation["VertexID$1", Automatic, Center], {
          0.0699525050864362, -0.01762081331242772}, {
          0.08070734354523137, -0.0366651622439174}, {
          0.08091729928177427, -0.051366979895934445`}, {
          0.05136697989593445, -0.08091729928177427}, {
          0.036665162243917415`, -0.08070734354523137}, {
          0.017620813312427715`, -0.0699525050864362}, DynamicLocation[
          "VertexID$1", Automatic, Center]},
         SplineDegree->7], 
        BezierCurveBox[{
         DynamicLocation[
          "VertexID$1", Automatic, 
           Center], {-0.017620813312427708`, -0.0699525050864362}, \
{-0.036665162243917394`, -0.08070734354523137}, {-0.05136697989593443, \
-0.08091729928177427}, {-0.08091729928177425, -0.05136697989593446}, \
{-0.08070734354523137, -0.036665162243917415`}, {-0.0699525050864362, \
-0.01762081331242772}, DynamicLocation["VertexID$1", Automatic, Center]},
         SplineDegree->7], 
        BezierCurveBox[{
         DynamicLocation[
          "VertexID$1", Automatic, Center], {-0.06995250508643622, 
          0.017620813312427704`}, {-0.08070734354523137, 
          0.03666516224391738}, {-0.08091729928177428, 
          0.05136697989593444}, {-0.05136697989593447, 
          0.08091729928177425}, {-0.03666516224391744, 
          0.08070734354523137}, {-0.017620813312427736`, 0.0699525050864362}, 
          DynamicLocation["VertexID$1", Automatic, Center]},
         SplineDegree->7], 
        BezierCurveBox[{
         DynamicLocation["VertexID$1", Automatic, Center], {
          0.017620813312427697`, 0.06995250508643622}, {0.036665162243917374`,
           0.08070734354523137}, {0.05136697989593443, 0.08091729928177428}, {
          0.08091729928177424, 0.05136697989593447}, {0.08070734354523137, 
          0.03666516224391745}, {0.06995250508643619, 0.01762081331242774}, 
          DynamicLocation["VertexID$1", Automatic, Center]},
         SplineDegree->7]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[DiskBox[{0., 0.}, 0.004014598540145964],
         "DynamicName",
         BoxID -> "VertexID$1"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->{0., 0.},
  AxesStyle->{{}, {}},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"NetworkGraphics",
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{{{}, {}}, {{}, {}}},
  FrameTicks->None,
  FrameTicksStyle->{{{}, {}}, {{}, {}}},
  GridLines->None,
  GridLinesStyle->{{}, {}},
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{240., 240.},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->{{-0.0809172992817743, 
   0.08091729928177427}, {-0.08091729928177427, 0.0809172992817743}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0.1, 0.1}, {0.1, 0.1}},
  PlotRegion->{{0., 1.}, {0., 1.}},
  Prolog->{},
  RotateLabel->True,
  Ticks->{None, None},
  TicksStyle->{{}, {}}]], "Output",
 CellChangeTimes->{3.9058347620999894`*^9},
 CellLabel->"Out[11]=",
 CellID->265750952,ExpressionUUID->"17c2ef65-e3d8-4986-8ef5-00c011673899"]
}, Open  ]],

Cell[TextData[{
 "This is in contrast to the function ",
 Cell[BoxData[
  ButtonBox["UndirectedGraph",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "284fad99-cf1b-4c60-9734-387d44d977dd"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.905834769466777*^9, 3.9058348066064973`*^9}},
 CellID->112576840,ExpressionUUID->"7bb098ba-2cba-4fae-8b22-b8fc0b1be6af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UndirectedGraph", "@", 
  RowBox[{"modelgraph88", "[", "\"\<Graph\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9058347845308757`*^9, 3.9058347923974185`*^9}},
 CellLabel->"In[12]:=",
 CellID->29327742,ExpressionUUID->"42539712-5967-4986-a905-c52d51263dfa"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 1}}, {Null, {{1, 1}}, {{1, {1, 1, 5}}}}, {
      VertexCoordinates -> {{0., 0.}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQEE4lzt7r/ct+1OUcCO3Z77H1S1zzIPSdrf/joo
Ncm+b7/HVhme+D8N+w/te3P3m9Wc/S7Mj8vuyE3afy/40Ry3zsX7N337ef12
2rz9FR+Z2V4mL9/vopxt9V9n2f70j4UM9nEr97t5m0i9zFm7v3/p2uTV/iv3
2ypkMajrb9ovdVCwMdJy+X6F5F3RfpZb9ztOnqGo6rZ4P8vrwjf107bvf8r4
6XVI3+z9h+oNphqI7dx/8Mg0R6GtPftnzQSBnfuLjgW/5rTN2QOT3weRt4fp
vwfRb68INd8OYr69HdR+cYj99jD39ULcZ+8GdX8qxP32W6H+K4f4zx7m/zsQ
/9v7QMPnICR87A9Awy8XEn72sPDdAQlfewBM07xc
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[BezierCurveBox[{1, 5, 8, 10, 16, 18, 21, 1},
            SplineDegree->7], 0.004014598540145964]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.004014598540145964]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRangePadding->0.1]], "Output",
 CellChangeTimes->{3.9058347927329917`*^9},
 CellLabel->"Out[12]=",
 CellID->514346976,ExpressionUUID->"5eafdfbb-cb38-4f1d-b866-c9ce6c3b436e"]
}, Open  ]],

Cell["\<\
To get a directed graph with each edge in both directions, use:\
\>", "ExampleText",
 CellChangeTimes->{{3.9058348993881707`*^9, 3.905834925884817*^9}},
 CellID->215594224,ExpressionUUID->"a52d52bc-86a2-46fb-a8c8-23c840b3e0a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph83", "[", "\"\<FullGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.905834946556604*^9, 3.9058349507969966`*^9}},
 CellLabel->"In[14]:=",
 CellID->449181375,ExpressionUUID->"0e417333-7ada-4022-a52d-7ffe6f57c862"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {2, 1}, {3, 1}, {1, 3}, {1, 4}, {4, 1}, {2, 5}, {5, 
       2}, {2, 6}, {6, 2}, {7, 3}, {3, 7}, {3, 8}, {8, 3}, {4, 9}, {9, 4}, {5,
        10}, {10, 5}, {11, 4}, {4, 11}, {5, 12}, {12, 5}, {13, 6}, {6, 13}, {
       14, 7}, {7, 14}, {6, 15}, {15, 6}, {7, 15}, {15, 7}, {8, 13}, {13, 
       8}, {14, 9}, {9, 14}, {10, 16}, {16, 10}, {12, 8}, {8, 12}, {9, 12}, {
       12, 9}, {10, 11}, {11, 10}, {16, 13}, {13, 16}, {16, 14}, {14, 16}, {
       15, 11}, {11, 15}}, 
       Null, {{1, {1, 1, 9}}, {1, {1, 1, 9}}, {1, {2, 8, 16}}, {
        1, {2, 8, 16}}, {1, {3, 17, 32}}, {1, {3, 17, 32}}, {1, {4, 2, 10}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {
        1, {6, 7, 15}}, {1, {7, 24, 31}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {9, 3, 11}}, {
        1, {10, 36, 48}}, {1, {10, 36, 48}}, {1, {11, 19, 26}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {12, 37, 41}}, {
        1, {13, 6, 14}}, {1, {13, 6, 14}}, {1, {14, 34, 46}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {15, 23, 30}}, {
        1, {16, 40, 44}}, {1, {16, 40, 44}}, {1, {17, 22, 29}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {18, 4, 12}}, {
        1, {19, 35, 47}}, {1, {19, 35, 47}}, {1, {20, 38, 42}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {21, 20, 27}}, {
        1, {22, 21, 28}}, {1, {22, 21, 28}}, {1, {23, 5, 13}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}, {1, {24, 39, 43}}}}, {
      AlignmentPoint -> Center, AspectRatio -> 0.9983999999999948, Axes -> 
       False, AxesLabel -> None, AxesOrigin -> {0., 0.}, 
       AxesStyle -> {{}, {}}, Background -> None, BaselinePosition -> 
       Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, 
       EdgeLabels -> {None}, EdgeShapeFunction -> {"Arrow"}, EdgeStyle -> {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]]}, Editable -> False, Epilog -> {}, FormatType -> 
       TraditionalForm, Frame -> False, FrameLabel -> None, 
       FrameStyle -> {{{}, {}}, {{}, {}}}, FrameTicks -> None, 
       FrameTicksStyle -> {{{}, {}}, {{}, {}}}, GraphLayout -> Automatic, 
       GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {{}, {}},
        ImageMargins -> 0., ImagePadding -> {{0., 0.}, {0., 0.}}, 
       ImageSize -> {240., 239.6159999999988}, LabelStyle -> {}, 
       PerformanceGoal -> Automatic, PlotLabel -> None, 
       PlotRange -> {{-0.6774523311997043, 
        0.6774523311996996}, {-0.6774523311996989, 0.6774523311996978}}, 
       PlotRangeClipping -> False, 
       PlotRangePadding -> {{0.02822718046665429, 0.02822718046665429}, {
        0.027098093247988064`, 0.027098093247988064`}}, 
       PlotRegion -> {{0., 1.}, {0., 1.}}, PlotTheme -> Automatic, 
       Prolog -> {}, RotateLabel -> True, Ticks -> {None, None}, 
       TicksStyle -> {{}, {}}, 
       VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}, VertexLabels -> {None}, 
       VertexShapeFunction -> {"Circle"}, VertexStyle -> {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.2990513280333618, 0.12387111591710179`}, DynamicLocation[
            "VertexID$2", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.3933791803353844, -0.16294299165013043`}, DynamicLocation[
            "VertexID$3", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.5331069653195868, 0.04192928737629784}, DynamicLocation[
            "VertexID$4", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
            0.39337918033538866`, 0.16294299165013004`}, DynamicLocation[
            "VertexID$1", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
            0.12387111591710624`, 0.29905132803335865`}, DynamicLocation[
            "VertexID$5", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
            0.34731506684115876`, 0.4066120337093574}, DynamicLocation[
            "VertexID$6", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
            0.2990513280333579, -0.12387111591710072`}, DynamicLocation[
            "VertexID$1", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
            0.16294299165012333`, -0.3933791803353829}, DynamicLocation[
            "VertexID$7", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
            0.406612033709356, -0.34731506684115654`}, DynamicLocation[
            "VertexID$8", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
            0.5331069653195879, -0.04192928737629719}, DynamicLocation[
            "VertexID$1", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
            0.1735546780123026, -0.4189980574705852}, DynamicLocation[
            "VertexID$9", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
            0.019929858842068267`, 0.048114935512704016`}, DynamicLocation[
            "VertexID$11", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
            0.16294299165013, 0.3933791803353894}, DynamicLocation[
            "VertexID$2", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$5", Automatic, Center], {-0.12387111591710448`, 
            0.29905132803336}, DynamicLocation[
            "VertexID$10", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$5", Automatic, Center], {-0.041929287376297836`, 
            0.5331069653195862}, DynamicLocation[
            "VertexID$12", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
            0.4066120337093648, 0.34731506684116653`}, DynamicLocation[
            "VertexID$2", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$6", Automatic, Center], {-0.01992985884207105, 
            0.04811493551270489}, DynamicLocation[
            "VertexID$13", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
            0.4189980574705847, -0.17355467801229824`}, DynamicLocation[
            "VertexID$15", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
            0.12387111591710077`, -0.2990513280333549}, DynamicLocation[
            "VertexID$3", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$7", Automatic, 
             Center], {-0.1629429916501278, -0.39337918033538366`}, 
            DynamicLocation["VertexID$14", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
            0.04192928737629893, -0.5331069653195832}, DynamicLocation[
            "VertexID$15", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
            0.34731506684115543`, -0.4066120337093554}, DynamicLocation[
            "VertexID$3", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
            0.04811493551270639, 0.019929858842068295`}, DynamicLocation[
            "VertexID$12", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$8", Automatic, 
             Center], {-0.1735546780122995, -0.4189980574705856}, 
            DynamicLocation["VertexID$13", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
            0.01992985884206851, -0.04811493551270821}, DynamicLocation[
            "VertexID$4", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$9", Automatic, Center], {-0.418998057470586, 
            0.17355467801229707`}, DynamicLocation[
            "VertexID$12", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$9", Automatic, 
             Center], {-0.4066120337093618, -0.34731506684115954`}, 
            DynamicLocation["VertexID$14", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$10", Automatic, Center], {-0.16294299165012985`, 
            0.39337918033538866`}, DynamicLocation[
            "VertexID$5", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$10", Automatic, Center], {-0.4066120337093609, 
            0.34731506684116104`}, DynamicLocation[
            "VertexID$11", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$10", Automatic, Center], {-0.29905132803335926`, 
            0.12387111591710336`}, DynamicLocation[
            "VertexID$16", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$11", Automatic, Center], {
            0.17355467801229693`, 0.418998057470586}, DynamicLocation[
            "VertexID$4", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$11", Automatic, Center], {-0.3473150668411648, 
            0.4066120337093655}, DynamicLocation[
            "VertexID$10", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$11", Automatic, 
             Center], {-0.04811493551270619, -0.019929858842069766`}, 
            DynamicLocation["VertexID$15", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$12", Automatic, Center], {
            0.04192928737629723, 0.5331069653195866}, DynamicLocation[
            "VertexID$5", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$12", Automatic, Center], {
            0.41899805747058405`, 0.17355467801229796`}, DynamicLocation[
            "VertexID$8", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$12", Automatic, Center], {-0.04811493551270731, 
            0.019929858842066966`}, DynamicLocation[
            "VertexID$9", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$13", Automatic, Center], {-0.17355467801230104`, 
            0.41899805747058266`}, DynamicLocation[
            "VertexID$6", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$13", Automatic, 
             Center], {-0.019929858842071553`, -0.04811493551270648}, 
            DynamicLocation["VertexID$8", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$13", Automatic, Center], {-0.5331069653195889, 
            0.041929287376298224`}, DynamicLocation[
            "VertexID$16", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$14", Automatic, 
             Center], {-0.12387111591710138`, -0.2990513280333569}, 
            DynamicLocation["VertexID$7", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$14", Automatic, 
             Center], {-0.3473150668411601, -0.406612033709363}, 
            DynamicLocation["VertexID$9", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$14", Automatic, 
             Center], {-0.3933791803353863, -0.16294299165013068`}, 
            DynamicLocation["VertexID$16", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$15", Automatic, Center], {
            0.04811493551270452, -0.0199298588420716}, DynamicLocation[
            "VertexID$6", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$15", Automatic, 
             Center], {-0.041929287376298474`, -0.5331069653195845}, 
            DynamicLocation["VertexID$7", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$15", Automatic, 
             Center], {-0.41899805747058433`, -0.173554678012299}, 
            DynamicLocation["VertexID$11", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$16", Automatic, Center], {-0.39337918033538766`, 
            0.16294299165012885`}, DynamicLocation[
            "VertexID$10", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$16", Automatic, 
             Center], {-0.5331069653195888, -0.041929287376299}, 
            DynamicLocation["VertexID$13", Automatic, Center]}]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$16", Automatic, 
             Center], {-0.2990513280333586, -0.1238711159171015}, 
            DynamicLocation["VertexID$14", Automatic, Center]}]]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[DiskBox[{0.4056164008015161, 0.}, 0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[
         DiskBox[{0.2868141075672326, 0.28681410756723275}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[
         DiskBox[{0.28681410756722675, -0.2868141075672285}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[
         DiskBox[{0.6605975298376587, 5.664226070673724*^-16}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$4"], 
        TagBox[
         DiskBox[{6.99702747969524*^-17, 0.405616400801516}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$5"], 
        TagBox[
         DiskBox[{0.4671129929832897, 0.4671129929832898}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$6"], 
        TagBox[
         DiskBox[{-6.92670381065753*^-16, -0.4056164008015093}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$7"], 
        TagBox[
         DiskBox[{0.46711299298329145, -0.467112992983291}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$8"], 
        TagBox[
         DiskBox[{-0.4671129929832925, -0.46711299298329434}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$9"], 
        TagBox[
         DiskBox[{-0.28681410756723236, 0.2868141075672325}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$10"], 
        TagBox[
         DiskBox[{-0.46711299298329184, 0.46711299298329}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$11"], 
        TagBox[
         DiskBox[{-4.834719367710373*^-16, 0.660597529837657}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$12"], 
        TagBox[
         DiskBox[{-0.6605975298376634, -1.6921517786986418*^-15}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$13"], 
        TagBox[
         DiskBox[{-0.28681410756723114, -0.2868141075672295}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$14"], 
        TagBox[
         DiskBox[{1.0222443204062975*^-15, -0.660597529837658}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$15"], 
        TagBox[
         DiskBox[{-0.4056164008015143, 7.166803835241803*^-16}, 
          0.016854801362040928],
         "DynamicName",
         BoxID -> "VertexID$16"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->{0., 0.},
  AxesStyle->{{}, {}},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"NetworkGraphics",
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{{{}, {}}, {{}, {}}},
  FrameTicks->None,
  FrameTicksStyle->{{{}, {}}, {{}, {}}},
  GridLines->None,
  GridLinesStyle->{{}, {}},
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{240., 239.6159999999988},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->{{-0.6774523311997043, 0.6774523311996996}, {-0.6774523311996989,
    0.6774523311996978}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0.02822718046665429, 0.02822718046665429}, {
   0.027098093247988064`, 0.027098093247988064`}},
  PlotRegion->{{0., 1.}, {0., 1.}},
  Prolog->{},
  RotateLabel->True,
  Ticks->{None, None},
  TicksStyle->{{}, {}}]], "Output",
 CellChangeTimes->{3.9058349513396015`*^9},
 CellLabel->"Out[14]=",
 CellID->132227595,ExpressionUUID->"df36c623-0b73-49a0-839d-b3886c3920cb"]
}, Open  ]],

Cell["Again, this works properly for degenerate graphs:", "ExampleText",
 CellChangeTimes->{{3.905835021774025*^9, 3.905835027854633*^9}},
 CellID->304453909,ExpressionUUID->"c64bb12c-64ee-458a-a017-b862675d02e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelgraph88", "[", "\"\<FullGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.90583499255649*^9, 3.9058349928345747`*^9}},
 CellLabel->"In[15]:=",
 CellID->190207803,ExpressionUUID->"dcec6703-ea2e-4a5f-8926-50e22765355f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 
      1}}, {{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}}, 
       Null, {{1, {1, 1, 5}}, {1, {1, 1, 5}}, {1, {2, 4, 8}}, {
        1, {2, 4, 8}}, {1, {3, 2, 6}}, {1, {3, 2, 6}}, {1, {4, 3, 7}}, {
        1, {4, 3, 7}}}}, {
      AlignmentPoint -> Center, AspectRatio -> 1., Axes -> False, AxesLabel -> 
       None, AxesOrigin -> {0., 0.}, AxesStyle -> {{}, {}}, Background -> 
       None, BaselinePosition -> Automatic, BaseStyle -> {}, 
       ContentSelectable -> Automatic, EdgeLabels -> {None}, 
       EdgeShapeFunction -> {"Arrow"}, EdgeStyle -> {
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]]}, Editable -> False, Epilog -> {}, FormatType -> 
       TraditionalForm, Frame -> False, FrameLabel -> None, 
       FrameStyle -> {{{}, {}}, {{}, {}}}, FrameTicks -> None, 
       FrameTicksStyle -> {{{}, {}}, {{}, {}}}, GraphLayout -> Automatic, 
       GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {{}, {}},
        ImageMargins -> 0., ImagePadding -> {{0., 0.}, {0., 0.}}, 
       ImageSize -> {240., 240.}, LabelStyle -> {}, PerformanceGoal -> 
       Automatic, PlotLabel -> None, 
       PlotRange -> {{-0.0809172992817743, 
        0.08091729928177427}, {-0.08091729928177427, 0.0809172992817743}}, 
       PlotRangeClipping -> False, 
       PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, 
       PlotRegion -> {{0., 1.}, {0., 1.}}, PlotTheme -> Automatic, 
       Prolog -> {}, RotateLabel -> True, Ticks -> {None, None}, 
       TicksStyle -> {{}, {}}, VertexCoordinates -> {{0., 0.}}, 
       VertexLabels -> {None}, VertexShapeFunction -> {"Circle"}, VertexStyle -> {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.08376333937604527, -0.009653024130273597}, {
            0.09168791107028819, -0.018667603899038245`}, {
            0.09401122723846113, -0.026376057228063556`}, {
            0.08512666521491352, -0.04782528736105713}, {
            0.07803313297614428, -0.05163315436511552}, {
            0.0660553441091056, -0.052403906466157925`}, DynamicLocation[
            "VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.05240390646615793, -0.0660553441091056}, {
            0.05163315436511553, -0.07803313297614428}, {
            0.04782528736105714, -0.08512666521491352}, {
            0.02637605722806357, -0.09401122723846113}, {
            0.01866760389903825, -0.09168791107028819}, {
            0.009653024130273604, -0.08376333937604527}, DynamicLocation[
            "VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$1", Automatic, 
             Center], {-0.009653024130273594, -0.08376333937604527}, \
{-0.018667603899038238`, -0.09168791107028819}, {-0.026376057228063552`, \
-0.09401122723846113}, {-0.04782528736105712, -0.08512666521491352}, \
{-0.051633154365115515`, -0.07803313297614428}, {-0.05240390646615792, \
-0.0660553441091056}, DynamicLocation["VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$1", Automatic, 
             Center], {-0.0660553441091056, -0.05240390646615793}, \
{-0.07803313297614427, -0.051633154365115536`}, {-0.08512666521491352, \
-0.047825287361057144`}, {-0.09401122723846113, -0.026376057228063576`}, \
{-0.09168791107028819, -0.01866760389903826}, {-0.08376333937604527, \
-0.009653024130273608}, DynamicLocation["VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$1", Automatic, Center], {-0.08376333937604527, 
            0.009653024130273587}, {-0.09168791107028819, 
            0.018667603899038238`}, {-0.09401122723846113, 
            0.026376057228063552`}, {-0.08512666521491352, 
            0.04782528736105712}, {-0.07803313297614428, 
            0.05163315436511551}, {-0.0660553441091056, 0.05240390646615792}, 
            DynamicLocation["VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation[
            "VertexID$1", Automatic, Center], {-0.05240390646615797, 
            0.06605534410910557}, {-0.05163315436511556, 
            0.07803313297614425}, {-0.04782528736105719, 
            0.0851266652149135}, {-0.026376057228063632`, 
            0.09401122723846111}, {-0.018667603899038314`, 
            0.09168791107028819}, {-0.009653024130273642, 
            0.08376333937604526}, DynamicLocation[
            "VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.009653024130273621, 0.08376333937604527}, {
            0.018667603899038276`, 0.09168791107028817}, {
            0.026376057228063576`, 0.09401122723846111}, {
            0.047825287361057144`, 0.08512666521491352}, {
            0.051633154365115536`, 0.07803313297614427}, {0.05240390646615794,
             0.06605534410910556}, DynamicLocation[
            "VertexID$1", Automatic, Center]},
           SplineDegree->7]]}, 
        {Arrowheads[{{0.04, 1}}], 
         ArrowBox[
          BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
            0.06605534410910557, 0.05240390646615797}, {0.07803313297614425, 
            0.05163315436511557}, {0.0851266652149135, 0.04782528736105719}, {
            0.09401122723846111, 0.02637605722806364}, {0.09168791107028819, 
            0.018667603899038317`}, {0.08376333937604526, 
            0.009653024130273646}, DynamicLocation[
            "VertexID$1", Automatic, Center]},
           SplineDegree->7]]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[DiskBox[{0., 0.}, 0.004014598540145964],
         "DynamicName",
         BoxID -> "VertexID$1"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->{0., 0.},
  AxesStyle->{{}, {}},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"NetworkGraphics",
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{{{}, {}}, {{}, {}}},
  FrameTicks->None,
  FrameTicksStyle->{{{}, {}}, {{}, {}}},
  GridLines->None,
  GridLinesStyle->{{}, {}},
  ImageMargins->0.,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{240., 240.},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->{{-0.0809172992817743, 
   0.08091729928177427}, {-0.08091729928177427, 0.0809172992817743}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0.1, 0.1}, {0.1, 0.1}},
  PlotRegion->{{0., 1.}, {0., 1.}},
  Prolog->{},
  RotateLabel->True,
  Ticks->{None, None},
  TicksStyle->{{}, {}}]], "Output",
 CellChangeTimes->{3.905834993501213*^9},
 CellLabel->"Out[15]=",
 CellID->25911231,ExpressionUUID->"7910d487-b0d1-4285-9db5-08678086f8d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Faces", "ExampleSubsection",
 CellChangeTimes->{{3.905833651858959*^9, 3.9058336524310617`*^9}},
 CellID->77762580,ExpressionUUID->"8783a26d-30d9-4c77-9819-951039563e5e"],

Cell["\<\
The faces are given as independent graphs such that their edges encode an \
orientation of the face, thus the edges are not all edges of the model graph. \
More precisely, the edges can differ in their orientation and edge tag:\
\>", "ExampleText",
 CellChangeTimes->{{3.905833664900607*^9, 3.905833729488014*^9}, {
  3.905833803361721*^9, 3.9058338165371814`*^9}, {3.90583439155835*^9, 
  3.9058343919708796`*^9}},
 CellID->565783619,ExpressionUUID->"c83ed37a-2c55-4edc-9be4-fec91ff5df6d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EdgeList", "[", 
  RowBox[{
   RowBox[{"modelgraph", "[", "\"\<Faces\>\"", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9058337401514654`*^9, 3.9058337517721453`*^9}, {
  3.905834395529379*^9, 3.905834423556622*^9}},
 CellLabel->"In[7]:=",
 CellID->464781799,ExpressionUUID->"4a769f79-56e7-44a6-b8cf-bd7147de8d96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "9"}]}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", "17", ",", "32"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"8", ",", "33", ",", "45"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "14"}], "}"}], 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "17"}], ",", 
             RowBox[{"-", "22"}], ",", 
             RowBox[{"-", "29"}]}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "14"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "16"}], "}"}], 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "23"}], ",", 
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "13"}]}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "16"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "13"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"22", ",", "21", ",", "28"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "13"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"12", ",", "37", ",", "41"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"-", "5"}], ",", 
             RowBox[{"-", "18"}], ",", 
             RowBox[{"-", "25"}]}], "}"}]}], "}"}]},
    "DirectedEdge"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9058337466944757`*^9, 3.905833752170418*^9}, {
  3.9058344064622927`*^9, 3.9058344240440297`*^9}},
 CellLabel->"Out[8]=",
 CellID->107358078,ExpressionUUID->"5955a9eb-57a1-49e8-be72-10b9cca23502"]
}, Open  ]],

Cell["\<\
If an edge in the face appears in the same orientation as the corresponding \
edge in the model graph,  the two edges are identical. On the other hand, if \
the edges appear with opposite orientation, the edge in the face will have \
its edge tag multiplied by -1.\
\>", "ExampleText",
 CellChangeTimes->{{3.9058337645660677`*^9, 3.9058337705532446`*^9}, {
  3.905833828928706*^9, 3.905833909550002*^9}, {3.90583443013792*^9, 
  3.905834430535182*^9}},
 CellID->214135134,ExpressionUUID->"2c615e83-7877-4e24-bf94-600f1042723d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7ed492bc-22e7-49cc-ada8-af3bb763656b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->17659725,ExpressionUUID->"b3327004-eec4-457f-bcbe-ee591ea101d1"],

Cell[TextData[{
 "If the original edges of the cell graph are required, use the ",
 StyleBox["\"FaceEdges\"", "InlineCode"],
 " key:"
}], "ExampleText",
 CellChangeTimes->{{3.905833927148653*^9, 3.9058339551020107`*^9}},
 CellID->94632968,ExpressionUUID->"e3a7be65-013f-4dcc-809e-f5fca47e32f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EdgeList", "[", 
  RowBox[{
   RowBox[{"modelgraph", "[", "\"\<FaceEdges\>\"", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.905833974930562*^9, 3.905833975710001*^9}, {
  3.905834439999237*^9, 3.905834441900052*^9}},
 CellLabel->"In[1]:=",
 CellID->22802683,ExpressionUUID->"0a2c0dea-8e93-4211-962c-a756f14c2cfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "9"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", "17", ",", "32"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"8", ",", "33", ",", "45"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "14"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"17", ",", "22", ",", "29"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "16"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "14"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"23", ",", "5", ",", "13"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "16"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "13"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"22", ",", "21", ",", "28"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "13"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"12", ",", "37", ",", "41"}], "}"}]}], "}"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{
     RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], 
     RowBox[{"{", 
       RowBox[{"1", ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", "18", ",", "25"}], "}"}]}], "}"}]},
    "DirectedEdge"]}], "}"}]], "Output",
 CellChangeTimes->{3.905833975894044*^9, 3.905834443170681*^9},
 CellLabel->"Out[2]=",
 CellID->298039513,ExpressionUUID->"b7d753fa-c863-4eff-9c80-3d8f159c6c67"]
}, Open  ]],

Cell["\<\
However, this comes at the cost of losing the orientation of the face.\
\>", "ExampleText",
 CellChangeTimes->{{3.9058339568295603`*^9, 3.9058339664314375`*^9}},
 CellID->444774495,ExpressionUUID->"c9ffc5fb-a128-4e5c-9ef8-ef8636e8c2f3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "f55566ac-b1f6-4090-8950-5f5c4dae40a5"],
  $Line = 0; Null]], "ExampleSection",
 CellID->112621000,ExpressionUUID->"2dcbd134-e1cb-4602-a5d5-3a8af6493dff"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "3c875b05-9f52-4b62-82f0-d7aef91518f1"],
  $Line = 0; Null]], "ExampleSection",
 CellID->867392410,ExpressionUUID->"21a1338a-ab46-4bd4-a3a9-c6fa62dfb8d0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "da3bb169-44a5-4dc5-ad15-2944e63d65c6"],
  $Line = 0; Null]], "ExampleSection",
 CellID->141635006,ExpressionUUID->"ab5b04f2-4fe0-493d-9f88-9018babe21d5"],

Cell[CellGroupData[{

Cell["Labeling Vertices and Edges", "ExampleSubsection",
 CellChangeTimes->{{3.90583244433931*^9, 3.9058324734581313`*^9}},
 CellID->445462844,ExpressionUUID->"eef48d91-d59c-4ba1-beb0-d35f4216f8e0"],

Cell["\<\
Label the vertices and edges by their names and tags, respectively:\
\>", "ExampleText",
 CellChangeTimes->{{3.9058291160353613`*^9, 3.905829139215063*^9}},
 CellID->475614113,ExpressionUUID->"009f8485-f021-4952-9445-d544cc00f67f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph88String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", "\"\<EdgeTag\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.905829151398758*^9, 3.9058291689588966`*^9}, {
   3.9058293780523605`*^9, 3.905829384210012*^9}, {3.905829473538092*^9, 
   3.905829480960595*^9}, 3.9058307174648795`*^9, {3.905835073459958*^9, 
   3.905835119813758*^9}, {3.905845217794533*^9, 3.9058452201095147`*^9}},
 CellLabel->"In[13]:=",
 CellID->788814381,ExpressionUUID->"154fff0d-307d-4ca9-bb5f-ef3e0ae4f2fc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 
      1}}, {{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, 
       Null, {{1, {1, 1, 5}}, {1, {2, 4, 8}}, {1, {3, 2, 6}}, {
        1, {4, 3, 7}}}}, {
      EdgeLabels -> {"EdgeTag"}, GraphLayout -> {"Dimension" -> 2}, ImageSize -> 
       300, VertexCoordinates -> {{0., 0.}}, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.0699525050864362, -0.01762081331242772}, {
           0.08070734354523137, -0.0366651622439174}, {
           0.08091729928177427, -0.051366979895934445`}, {
           0.05136697989593445, -0.08091729928177427}, {
           0.036665162243917415`, -0.08070734354523137}, {
           0.017620813312427715`, -0.0699525050864362}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "5"}], "}"}]}], "}"}], {0.07071067811865478, -0.07071067811865472},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 
           0.}, {-0.017620813312427708`, -0.0699525050864362}, \
{-0.036665162243917394`, -0.08070734354523137}, {-0.05136697989593443, \
-0.08091729928177427}, {-0.08091729928177425, -0.05136697989593446}, \
{-0.08070734354523137, -0.036665162243917415`}, {-0.0699525050864362, \
-0.01762081331242772}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "4", ",", "8"}], "}"}]}], "}"}], {-0.07071067811865474, -0.07071067811865477},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {-0.06995250508643622, 
           0.017620813312427704`}, {-0.08070734354523137, 
           0.03666516224391738}, {-0.08091729928177428, 
           0.05136697989593444}, {-0.05136697989593447, 
           0.08091729928177425}, {-0.03666516224391744, 
           0.08070734354523137}, {-0.017620813312427736`, 
           0.0699525050864362}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "6"}], "}"}]}], "}"}], {-0.07071067811865477, 0.07071067811865477},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.017620813312427697`, 
           0.06995250508643622}, {0.036665162243917374`, 
           0.08070734354523137}, {0.05136697989593443, 0.08091729928177428}, {
           0.08091729928177424, 0.05136697989593447}, {0.08070734354523137, 
           0.03666516224391745}, {0.06995250508643619, 0.01762081331242774}, {
           0., 0.}},
           SplineDegree->7], 0.004014598540145964], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "7"}], "}"}]}], "}"}], {0.07071067811865474, 0.07071067811865478},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{0., 0.}, 0.004014598540145964], InsetBox[
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], 
         Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
         ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->300,
  PlotRangePadding->0.1]], "Output",
 CellChangeTimes->{
  3.9058291694899883`*^9, {3.9058293811008215`*^9, 3.9058293845754585`*^9}, 
   3.9058318372687006`*^9, {3.9058350931856227`*^9, 3.90583512014352*^9}, 
   3.9058452204950147`*^9},
 CellLabel->"Out[14]=",
 CellID->35405703,ExpressionUUID->"eaaf0cbe-f099-4af7-a3df-003a54dd5fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6fd26f10-cfac-40c2-9088-bf79d873f625"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->282811621,ExpressionUUID->"9e9cdcf3-8f82-4588-9035-9f1492926b3a"],

Cell[TextData[{
 "Label the vertices by their representatives in the transversal ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox[
    StyleBox["T",
     FontSlant->"Italic"], 
    SuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], "+"]], 
   RowBox[{"(", 
    SubsuperscriptBox[
     StyleBox["G",
      FontSlant->"Italic"], 
     StyleBox["w",
      FontSlant->"Italic"], "+"], ")"}]}]], "InlineFormula",ExpressionUUID->
  "4f8fbf85-3915-4d5b-8dbc-23f87f771b2d"],
 " and the edges by the edge translations in terms of the translation \
generators:"
}], "ExampleText",
 CellChangeTimes->{{3.9058291782660117`*^9, 3.9058292625842505`*^9}},
 CellID->283956275,ExpressionUUID->"69d4245e-c9ac-4417-a01b-f1631605b1ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph88String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058292727477207`*^9, 3.9058293129926443`*^9}, 
   3.9058307208226542`*^9, {3.905835177634968*^9, 3.9058351813019114`*^9}},
 CellLabel->"In[2]:=",
 CellID->437721174,ExpressionUUID->"9bcfceb6-e4a1-41f7-8949-cf2bc6962c5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graph", ",", "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", "graph", "]"}], "\[Rule]", 
      RowBox[{"modelgraph", "[", "\"\<VertexLabels\>\"", "]"}]}], "]"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "graph", "]"}], "\[Rule]", 
      RowBox[{"modelgraph", "[", "\"\<EdgeTranslations\>\"", "]"}]}], "]"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "300"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9058293161361074`*^9, 3.9058293420815496`*^9}, {
  3.905829389820182*^9, 3.905829392557191*^9}, {3.905835183391095*^9, 
  3.905835186309305*^9}, {3.9058452117657704`*^9, 3.905845214655884*^9}},
 CellLabel->"In[5]:=",
 CellID->101553327,ExpressionUUID->"f480f6f7-77f3-4ea1-830a-bb0420bc2853"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 
      1}}, {{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, 
       Null, {{1, {1, 1, 5}}, {1, {2, 4, 8}}, {1, {3, 2, 6}}, {
        1, {4, 3, 7}}}}, {
      EdgeLabels -> {
        DirectedEdge[{3, 1}, {3, 1}, {1, {4, 3, 7}}] -> "g3", 
         DirectedEdge[{3, 1}, {3, 1}, {1, {1, 1, 5}}] -> "g1", 
         DirectedEdge[{3, 1}, {3, 1}, {1, {2, 4, 8}}] -> "g4", 
         DirectedEdge[{3, 1}, {3, 1}, {1, {3, 2, 6}}] -> "g2"}, 
       GraphLayout -> {"Dimension" -> 2}, ImageSize -> 300, 
       VertexCoordinates -> {{0., 0.}}, VertexLabels -> {{3, 1} -> "1"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {
           0.0699525050864362, -0.01762081331242772}, {
           0.08070734354523137, -0.0366651622439174}, {
           0.08091729928177427, -0.051366979895934445`}, {
           0.05136697989593445, -0.08091729928177427}, {
           0.036665162243917415`, -0.08070734354523137}, {
           0.017620813312427715`, -0.0699525050864362}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], 
         InsetBox["\<\"g1\"\>", {0.07071067811865478, -0.07071067811865472}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 
           0.}, {-0.017620813312427708`, -0.0699525050864362}, \
{-0.036665162243917394`, -0.08070734354523137}, {-0.05136697989593443, \
-0.08091729928177427}, {-0.08091729928177425, -0.05136697989593446}, \
{-0.08070734354523137, -0.036665162243917415`}, {-0.0699525050864362, \
-0.01762081331242772}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], 
         InsetBox["\<\"g4\"\>", {-0.07071067811865474, -0.07071067811865477}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {-0.06995250508643622, 
           0.017620813312427704`}, {-0.08070734354523137, 
           0.03666516224391738}, {-0.08091729928177428, 
           0.05136697989593444}, {-0.05136697989593447, 
           0.08091729928177425}, {-0.03666516224391744, 
           0.08070734354523137}, {-0.017620813312427736`, 
           0.0699525050864362}, {0., 0.}},
           SplineDegree->7], 0.004014598540145964], 
         InsetBox["\<\"g2\"\>", {-0.07071067811865477, 0.07071067811865477}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[
          BezierCurveBox[{{0., 0.}, {0.017620813312427697`, 
           0.06995250508643622}, {0.036665162243917374`, 
           0.08070734354523137}, {0.05136697989593443, 0.08091729928177428}, {
           0.08091729928177424, 0.05136697989593447}, {0.08070734354523137, 
           0.03666516224391745}, {0.06995250508643619, 0.01762081331242774}, {
           0., 0.}},
           SplineDegree->7], 0.004014598540145964], 
         InsetBox["\<\"g3\"\>", {0.07071067811865474, 0.07071067811865478}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{0., 0.}, 0.004014598540145964], 
        InsetBox["\<\"1\"\>", 
         Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
         ImageScaled[{0, 0}],
         BaseStyle->"Graphics"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->300,
  PlotRangePadding->0.1]], "Output",
 CellChangeTimes->{
  3.9058293425634923`*^9, 3.9058293928257065`*^9, 3.9058318400467625`*^9, {
   3.905835186868948*^9, 3.905835191316636*^9}, 3.905845214994006*^9},
 CellLabel->"Out[5]=",
 CellID->451367204,ExpressionUUID->"5b52c0a7-27b1-4278-b533-27f0ae319161"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "16673634-8d70-46ce-8e7d-c5c26927b34d"],
  $Line = 0; Null]], "ExampleSection",
 CellID->379262136,ExpressionUUID->"c8b9af1c-b68b-4d87-8081-d6e78ed84dab"],

Cell[CellGroupData[{

Cell["Extracting and Displaying Edge Properties", "ExampleSubsection",
 CellChangeTimes->{{3.9058325022909393`*^9, 3.905832521045726*^9}},
 CellID->167086691,ExpressionUUID->"99d532f9-442b-4181-b189-ad430fb8eb75"],

Cell["Highlight all intra-cell edges:", "ExampleText",
 CellChangeTimes->{{3.905828455534647*^9, 3.905828474022303*^9}},
 CellID->164487619,ExpressionUUID->"44de636d-0168-45dd-a48e-cc670a6dd971"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058284899709587`*^9, 3.9058285016193233`*^9}, 
   3.905830722690381*^9, {3.9058352437106795`*^9, 3.9058352454413605`*^9}},
 CellLabel->"In[1]:=",
 CellID->140106855,ExpressionUUID->"dce37fe1-6797-49d3-9e1f-afe5c65f62bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"graph", ",", 
   RowBox[{
    RowBox[{"EdgeList", "[", "graph", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"modelgraph", "[", "\"\<EdgeTranslations\>\"", "]"}], ",", 
        "\"\<1\>\""}], "]"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9058284752695847`*^9, 3.905828536392344*^9}, 
   3.9058352492093687`*^9},
 CellLabel->"In[3]:=",
 CellID->307115202,ExpressionUUID->"c604b2a4-3227-47d7-b974-a01cb628911d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 
       9}, {5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 11}}, 
       Null, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {GraphHighlight -> {
         DirectedEdge[{2, 14}, {2, 7}, {1, {13, 6, 14}}], 
         DirectedEdge[{2, 10}, {2, 11}, {1, {21, 20, 27}}], 
         DirectedEdge[{2, 1}, {2, 4}, {1, {3, 17, 32}}], 
         DirectedEdge[{2, 14}, {2, 9}, {1, {17, 22, 29}}], 
         DirectedEdge[{2, 5}, {2, 10}, {1, {9, 3, 11}}], 
         DirectedEdge[{2, 7}, {2, 15}, {1, {15, 23, 30}}], 
         DirectedEdge[{2, 5}, {2, 12}, {1, {11, 19, 26}}], 
         DirectedEdge[{2, 2}, {2, 6}, {1, {5, 18, 25}}], 
         DirectedEdge[{2, 3}, {2, 1}, {1, {2, 8, 16}}], 
         DirectedEdge[{2, 7}, {2, 3}, {1, {6, 7, 15}}], 
         DirectedEdge[{2, 16}, {2, 14}, {1, {23, 5, 13}}], 
         DirectedEdge[{2, 16}, {2, 13}, {1, {22, 21, 28}}], 
         DirectedEdge[{2, 10}, {2, 16}, {1, {18, 4, 12}}], 
         DirectedEdge[{2, 3}, {2, 8}, {1, {7, 24, 31}}], 
         DirectedEdge[{2, 2}, {2, 5}, {1, {4, 2, 10}}], 
         DirectedEdge[{2, 1}, {2, 2}, {1, {1, 1, 9}}]}, 
       VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
       0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
       0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
       0.405616400801516}, {0.4671129929832897, 
       0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
       0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
       0.2868141075672325}, {-0.46711299298329184`, 
       0.46711299298329}, {-4.834719367710373*^-16, 
       0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
       1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
       7.166803835241803*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
           0.28681410756723275`}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.4056164008015161, 0.}, {0.6605975298376587, 
           5.664226070673724*^-16}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
           6.99702747969524*^-17, 0.405616400801516}}, 
           0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.2868141075672326, 0.28681410756723275`}, {
           0.4671129929832897, 0.4671129929832898}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
           0.4056164008015161, 0.}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{0.28681410756722675`, -0.2868141075672285}, {
           0.46711299298329145`, -0.467112992983291}}, 
           0.016854801362040928`]}, 
         ArrowBox[{{0.6605975298376587, 
          5.664226070673724*^-16}, {-0.4671129929832925, \
-0.46711299298329434`}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{6.99702747969524*^-17, 
           0.405616400801516}, {-0.28681410756723236`, 0.2868141075672325}}, 
           0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{6.99702747969524*^-17, 
           0.405616400801516}, {-4.834719367710373*^-16, 0.660597529837657}}, 
           0.016854801362040928`]}, 
         ArrowBox[{{0.4671129929832897, 0.4671129929832898}, {
          1.0222443204062975`*^-15, -0.660597529837658}}, 
          0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
           0.28681410756722675`, -0.2868141075672285}}, 
           0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-6.92670381065753*^-16, -0.4056164008015093}, {
           1.0222443204062975`*^-15, -0.660597529837658}}, 
           0.016854801362040928`]}, 
         ArrowBox[{{
          0.46711299298329145`, -0.467112992983291}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}, 0.016854801362040928`], 
         ArrowBox[{{-0.4671129929832925, -0.46711299298329434`}, \
{-4.834719367710373*^-16, 0.660597529837657}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.28681410756723236`, 
           0.2868141075672325}, {-0.46711299298329184`, 0.46711299298329}}, 
           0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.28681410756723236`, 
           0.2868141075672325}, {-0.4056164008015143, 
           7.166803835241803*^-16}}, 0.016854801362040928`]}, 
         ArrowBox[{{-0.46711299298329184`, 0.46711299298329}, {
          0.6605975298376587, 5.664226070673724*^-16}}, 
          0.016854801362040928`], 
         ArrowBox[{{-4.834719367710373*^-16, 0.660597529837657}, {
          0.46711299298329145`, -0.467112992983291}}, 0.016854801362040928`], 
         ArrowBox[{{-0.6605975298376634, -1.6921517786986418`*^-15}, {
          0.4671129929832897, 0.4671129929832898}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-6.92670381065753*^-16, -0.4056164008015093}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.28681410756723114`, -0.2868141075672295}, \
{-0.4671129929832925, -0.46711299298329434`}}, 0.016854801362040928`]}, 
         ArrowBox[{{
          1.0222443204062975`*^-15, -0.660597529837658}, \
{-0.46711299298329184`, 0.46711299298329}}, 0.016854801362040928`], 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.4056164008015143, 
           7.166803835241803*^-16}, {-0.6605975298376634, \
-1.6921517786986418`*^-15}}, 0.016854801362040928`]}, 
         {Hue[1, 1, 0.7], Opacity[1], 
          ArrowBox[{{-0.4056164008015143, 
           7.166803835241803*^-16}, {-0.28681410756723114`, \
-0.2868141075672295}}, 0.016854801362040928`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.016854801362040928], DiskBox[2, 0.016854801362040928], 
         DiskBox[3, 0.016854801362040928], DiskBox[4, 0.016854801362040928], 
         DiskBox[5, 0.016854801362040928], DiskBox[6, 0.016854801362040928], 
         DiskBox[7, 0.016854801362040928], DiskBox[8, 0.016854801362040928], 
         DiskBox[9, 0.016854801362040928], DiskBox[10, 0.016854801362040928], 
         DiskBox[11, 0.016854801362040928], DiskBox[12, 0.016854801362040928],
          DiskBox[13, 0.016854801362040928], 
         DiskBox[14, 0.016854801362040928], DiskBox[15, 0.016854801362040928],
          DiskBox[16, 0.016854801362040928]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9058285407141776`*^9, 3.9058318423214617`*^9, 
  3.905835250450895*^9},
 CellLabel->"Out[3]=",
 CellID->41613907,ExpressionUUID->"9d7271c8-24bc-44c9-9765-e2f9e5c70cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6a5c2299-a969-488d-be2e-90126fb8fbd1"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->113516019,ExpressionUUID->"3abbfa0f-dab6-42bc-a683-12977d89562c"],

Cell["\<\
Color the edges crossing the cell boundary according to the associated \
translation:\
\>", "ExampleText",
 CellChangeTimes->{{3.905828575958935*^9, 3.905828593740858*^9}, {
   3.90582862603226*^9, 3.905828628458458*^9}, 3.9058286958873634`*^9, {
   3.9058353540544724`*^9, 3.9058353655887527`*^9}},
 CellID->927824170,ExpressionUUID->"0472c7c1-3ff0-4a3d-9a7a-c5201b3c99cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"modelgraph", "[", "\"\<Graph\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.905828720783902*^9, {3.9058288027326*^9, 3.9058288054812303`*^9}, 
   3.905830724415197*^9, {3.9058352549510765`*^9, 3.9058352656395245`*^9}},
 CellLabel->"In[1]:=",
 CellID->41592735,ExpressionUUID->"ac227f24-18b5-4738-b53e-a925230486e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"EdgeStyle", "\[Rule]", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "graph", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "==", "\"\<1\>\""}], ",", "Black", ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"Keys", "@", 
                 RowBox[{
                 "modelgraph", "[", "\"\<TranslationGenerators\>\"", "]"}]}], 
                ",", 
                RowBox[{"StringTrim", "[", 
                 RowBox[{"#", ",", "\"\<^-1\>\""}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"modelgraph", "[", "\"\<EdgeTranslations\>\"", "]"}]}], 
       ")"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9058285996007743`*^9, 3.9058286135341206`*^9}, {
   3.905828713386201*^9, 3.9058288280494895`*^9}, {3.905828923371459*^9, 
   3.9058289518035374`*^9}, {3.9058352667282515`*^9, 3.905835334533968*^9}, {
   3.905835391295038*^9, 3.905835458155882*^9}, 3.905835568411167*^9, {
   3.905845204053129*^9, 3.9058452049319315`*^9}},
 CellLabel->"In[12]:=",
 CellID->586296664,ExpressionUUID->"b14f158e-2d55-45ce-b2be-9d282c44ac98"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {
      2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 
      16}}, {{{1, 2}, {3, 1}, {1, 4}, {2, 5}, {2, 6}, {7, 3}, {3, 8}, {4, 
       9}, {5, 10}, {11, 4}, {5, 12}, {13, 6}, {14, 7}, {6, 15}, {7, 15}, {8, 
       13}, {14, 9}, {10, 16}, {12, 8}, {9, 12}, {10, 11}, {16, 13}, {16, 
       14}, {15, 11}}, 
       Null, {{1, {1, 1, 9}}, {1, {2, 8, 16}}, {1, {3, 17, 32}}, {
        1, {4, 2, 10}}, {1, {5, 18, 25}}, {1, {6, 7, 15}}, {1, {7, 24, 31}}, {
        1, {8, 33, 45}}, {1, {9, 3, 11}}, {1, {10, 36, 48}}, {
        1, {11, 19, 26}}, {1, {12, 37, 41}}, {1, {13, 6, 14}}, {
        1, {14, 34, 46}}, {1, {15, 23, 30}}, {1, {16, 40, 44}}, {
        1, {17, 22, 29}}, {1, {18, 4, 12}}, {1, {19, 35, 47}}, {
        1, {20, 38, 42}}, {1, {21, 20, 27}}, {1, {22, 21, 28}}, {
        1, {23, 5, 13}}, {1, {24, 39, 43}}}}, {
      EdgeStyle -> {
        DirectedEdge[{2, 10}, {2, 16}, {1, {18, 4, 12}}] -> GrayLevel[0], 
         DirectedEdge[{2, 1}, {2, 2}, {1, {1, 1, 9}}] -> GrayLevel[0], 
         DirectedEdge[{2, 15}, {2, 11}, {1, {24, 39, 43}}] -> 
         RGBColor[0.560181, 0.691569, 0.194885], 
         DirectedEdge[{2, 16}, {2, 13}, {1, {22, 21, 28}}] -> GrayLevel[0], 
         DirectedEdge[{2, 3}, {2, 8}, {1, {7, 24, 31}}] -> GrayLevel[0], 
         DirectedEdge[{2, 5}, {2, 12}, {1, {11, 19, 26}}] -> GrayLevel[0], 
         DirectedEdge[{2, 4}, {2, 9}, {1, {8, 33, 45}}] -> 
         RGBColor[0.368417, 0.506779, 0.709798], 
         DirectedEdge[{2, 6}, {2, 15}, {1, {14, 34, 46}}] -> 
         RGBColor[0.880722, 0.611041, 0.142051], 
         DirectedEdge[{2, 5}, {2, 10}, {1, {9, 3, 11}}] -> GrayLevel[0], 
         DirectedEdge[{2, 14}, {2, 9}, {1, {17, 22, 29}}] -> GrayLevel[0], 
         DirectedEdge[{2, 1}, {2, 4}, {1, {3, 17, 32}}] -> GrayLevel[0], 
         DirectedEdge[{2, 13}, {2, 6}, {1, {12, 37, 41}}] -> 
         RGBColor[0.368417, 0.506779, 0.709798], 
         DirectedEdge[{2, 10}, {2, 11}, {1, {21, 20, 27}}] -> GrayLevel[0], 
         DirectedEdge[{2, 3}, {2, 1}, {1, {2, 8, 16}}] -> GrayLevel[0], 
         DirectedEdge[{2, 12}, {2, 8}, {1, {19, 35, 47}}] -> 
         RGBColor[0.560181, 0.691569, 0.194885], 
         DirectedEdge[{2, 11}, {2, 4}, {1, {10, 36, 48}}] -> 
         RGBColor[0.922526, 0.385626, 0.209179], 
         DirectedEdge[{2, 2}, {2, 6}, {1, {5, 18, 25}}] -> GrayLevel[0], 
         DirectedEdge[{2, 7}, {2, 15}, {1, {15, 23, 30}}] -> GrayLevel[0], 
         DirectedEdge[{2, 2}, {2, 5}, {1, {4, 2, 10}}] -> GrayLevel[0], 
         DirectedEdge[{2, 14}, {2, 7}, {1, {13, 6, 14}}] -> GrayLevel[0], 
         DirectedEdge[{2, 7}, {2, 3}, {1, {6, 7, 15}}] -> GrayLevel[0], 
         DirectedEdge[{2, 16}, {2, 14}, {1, {23, 5, 13}}] -> GrayLevel[0], 
         DirectedEdge[{2, 9}, {2, 12}, {1, {20, 38, 42}}] -> 
         RGBColor[0.880722, 0.611041, 0.142051], 
         DirectedEdge[{2, 8}, {2, 13}, {1, {16, 40, 44}}] -> 
         RGBColor[0.922526, 0.385626, 0.209179]}, 
       GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{0.4056164008015161, 0.}, {0.2868141075672326, 
        0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
        0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
        0.405616400801516}, {0.4671129929832897, 
        0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
        0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
        0.2868141075672325}, {-0.46711299298329184`, 
        0.46711299298329}, {-4.834719367710373*^-16, 
        0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
        1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
        7.166803835241803*^-16}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.4056164008015161, 0.}, {0.2868141075672326, 
       0.28681410756723275`}, {0.28681410756722675`, -0.2868141075672285}, {
       0.6605975298376587, 5.664226070673724*^-16}, {6.99702747969524*^-17, 
       0.405616400801516}, {0.4671129929832897, 
       0.4671129929832898}, {-6.92670381065753*^-16, -0.4056164008015093}, {
       0.46711299298329145`, -0.467112992983291}, {-0.4671129929832925, \
-0.46711299298329434`}, {-0.28681410756723236`, 
       0.2868141075672325}, {-0.46711299298329184`, 
       0.46711299298329}, {-4.834719367710373*^-16, 
       0.660597529837657}, {-0.6605975298376634, -1.6921517786986418`*^-15}, \
{-0.28681410756723114`, -0.2868141075672295}, {
       1.0222443204062975`*^-15, -0.660597529837658}, {-0.4056164008015143, 
       7.166803835241803*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {GrayLevel[0], ArrowBox[{1, 2}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{1, 4}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{2, 5}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{2, 6}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{3, 1}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{3, 8}, 0.016854801362040928`]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          ArrowBox[{4, 9}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{5, 10}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{5, 12}, 0.016854801362040928`]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          ArrowBox[{6, 15}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{7, 3}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{7, 15}, 0.016854801362040928`]}, 
         {RGBColor[0.922526, 0.385626, 0.209179], 
          ArrowBox[{8, 13}, 0.016854801362040928`]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          ArrowBox[{9, 12}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{10, 11}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{10, 16}, 0.016854801362040928`]}, 
         {RGBColor[0.922526, 0.385626, 0.209179], 
          ArrowBox[{11, 4}, 0.016854801362040928`]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], 
          ArrowBox[{12, 8}, 0.016854801362040928`]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], 
          ArrowBox[{13, 6}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{14, 7}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{14, 9}, 0.016854801362040928`]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], 
          ArrowBox[{15, 11}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{16, 13}, 0.016854801362040928`]}, 
         {GrayLevel[0], ArrowBox[{16, 14}, 0.016854801362040928`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.016854801362040928], DiskBox[2, 0.016854801362040928], 
         DiskBox[3, 0.016854801362040928], DiskBox[4, 0.016854801362040928], 
         DiskBox[5, 0.016854801362040928], DiskBox[6, 0.016854801362040928], 
         DiskBox[7, 0.016854801362040928], DiskBox[8, 0.016854801362040928], 
         DiskBox[9, 0.016854801362040928], DiskBox[10, 0.016854801362040928], 
         DiskBox[11, 0.016854801362040928], DiskBox[12, 0.016854801362040928],
          DiskBox[13, 0.016854801362040928], 
         DiskBox[14, 0.016854801362040928], DiskBox[15, 0.016854801362040928],
          DiskBox[16, 0.016854801362040928]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.9058286137310653`*^9, {3.90582891852524*^9, 3.9058289523131776`*^9}, 
   3.905831844496101*^9, 3.905835269697398*^9, {3.905835540445312*^9, 
   3.9058355687681904`*^9}, 3.90584520782128*^9},
 CellLabel->"Out[12]=",
 CellID->311146558,ExpressionUUID->"f7bff7cc-21c9-4006-b564-6c7947ae7560"]
}, Open  ]],

Cell["\<\
Note that the above simple code only works in the special case when no \
composite translation appear.\
\>", "ExampleText",
 CellChangeTimes->{{3.905835482568054*^9, 3.9058355350981383`*^9}},
 CellID->234087562,ExpressionUUID->"ba0ba225-ded6-423a-95c7-15736159ae19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Faces", "ExampleSubsection",
 CellChangeTimes->{{3.905941739941572*^9, 3.9059417405497417`*^9}},
 CellID->343948762,ExpressionUUID->"5ffba9ba-1609-4b6c-9bf9-dc1d9c6e6bbb"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["GetCellGraphFace",
   BaseStyle->"Link",
   ButtonData->
    "paclet:PatrickMLenggenhager/HyperBloch/ref/GetCellGraphFace"]], 
  "InlineFormula",ExpressionUUID->"c3a4223f-0d7f-4f28-8749-3d13a3c27df4"],
 " to show faces in the Poincar\[EAcute] disk:"
}], "ExampleText",
 CellChangeTimes->{{3.9059404499914303`*^9, 3.905940455853563*^9}, {
  3.9059406170324535`*^9, 3.905940628112991*^9}, {3.905941758029256*^9, 
  3.905941759598029*^9}},
 CellID->516762423,ExpressionUUID->"913b00c0-0fac-441c-a553-d4a60594596d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelgraph", "=", 
   RowBox[{"ImportModelGraphString", "[", "modelgraph83String", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"VisualizeModelGraph", "[", 
    RowBox[{"modelgraph", ",", 
     RowBox[{"Elements", "\[Rule]", 
      RowBox[{"<|", "|>"}]}], ",", 
     RowBox[{"NumberOfGenerations", "\[Rule]", "3"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.65"}], "}"}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Green"}], ",", 
         RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GetCellGraphFace", "[", 
       RowBox[{"modelgraph", ",", 
        RowBox[{
         RowBox[{"modelgraph", "[", "\"\<Faces\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.905940485470827*^9, 3.905940549852429*^9}, {
  3.9059417632275724`*^9, 3.905941788327516*^9}, {3.9059418397871895`*^9, 
  3.90594184498495*^9}},
 CellLabel->"In[1]:=",
 CellID->817051585,ExpressionUUID->"b76eaa2a-04f0-45ce-9dfc-d7b5c2df87cb"],

Cell[BoxData[
 GraphicsBox[{{InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzs3cty68y/3ndXMskwt5C7yDTDTJ3KBdgVx5WJU2WnKpVL1RIl6kRJXHy5
SJ14ECkpj1d7wzBIgo0+g/x+qvau968lkQAIAk83un/9P/3b//tf/5//3b/6
V//qP/0P+n//+t/8v//Lf/yP/+b/+9/+R/2P//0//Kf/69//h3/3f/yv/+H/
+Xf//t/9x//53/73+uHzf2/+7z//9w8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAV9/f37k3AQiAMxkAAJyw9/f3p6en3FsBuPv8
/JxOp8Ph8PX1Nfe2AAAAhPf9/T2ZTC4uLq6vr3NvC9CZiet3d3cX/2K1WuXe
KAAAgMA2m839/X0VeL6+vnJvEXCcGpsfHx9qb97c3FzsYJwMAAA4Me/v74PB
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
N6ns0T39DLJkk/t6t4qNzlv/4OG/1y8vLz3qZjeSrbcVe0r1LpvZ7lE5hHYj
/VCZ2AuBFV6rCgDcKH60D2CO3WWRPrf7PBTOGN2zVJxLVqVTJ2Hh9fT20vHx
WRHMJ7dvNpsyl0A9KtmQ4yzf1jTT+fdyDu0X8Zdd3lWvgRBDsWtDAICzr6+v
4XDYfvWL/QhV8SPq1XuX56D9LGFAn0KWvqNkNZYvervk+na7da6M4Zzbx+Nx
2IOfzGAwCHv8W6Qp4d6gdlyWwoM+of0iR1WZ2Lmd8o8AToxy4N3dnc0FMHb/
WNSrd8PNzY3/BieO7rmSwE/akQa9rtj28fHhkEMccvtisUg53TK4lFMgk43y
akjfyvYM7YZOrZTbHDW3JxuLBQBpfH9/24/OfXh4iLox8a7eu0IN+0kW3X/9
+pXxyXvikRhRF9CMTd8phdJOo8075fZerKZ0VMpAm2XOu5FyVFuQ0H6RfGBJ
1Nwee3UAAEhJN5RO/aixy33Eu3pH3ZE00T1vSQSfwdsOxuNxxp0NQk0Py8dY
F11yex/nn+6K3QOwK+NBSxODQ4X2i7/P9VLOMYn30STeEQCIqmtoN6LWSYhx
6d4reGyIHd3zTq1KP/VAN9zTKAFhOV/VJrf3d/7prtMrWtIudnmZgKHdSDnH
JOyW1zEjFcDJcAvtF4GGhR8S/Lp9SIy7UrzorlZG3l6jLMODExeoj2e73So/
tO/s0dze3/mnu9LPfPzJUQqyIV4SDh7aL9LOMQm+8ZXEA/UBIBLn0G7EmxoZ
8IrdYjAYRIrBMaJ7CcsvxggGNjued6/DWi6XLav/tOR2NZp6Pf90V5YRXzrC
eff68vIyRoyM9938/PwMvrV7Rdp+1kgFcBo8Q/tFzLHHoa7Y7aIWKA4b3a+u
rkpYP/Rod3Ek6UdTRKWv3qFhM3tzuz56+xHyfaHdT3/k5fX1Nfeu/+evc9gJ
11Eb1MkK/kTa/uxLXwGAv6+vr4eHB8/rYbzJPkEu10fFLqUYKrrrOBdSViXB
QuR7qYGZe9fDM8NmGnPxdnP77u+chlyfqdqAuXf9P7u+vg7VEo/9FCzZCmiR
6smU0OMBAD50HWt5Ut9JpIKEQbatXZpyvv7RPdJTdTftC+nGE7t+UUaNYTP1
3P7y8pK4ek9KuT7Qr6+v3Lv+XwQZ+ZZm6FqaBW1j5Pa7u7sEWw4A8Xx+fh5d
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
8LuDPAGgwXNx+WSUtCeTSTWL/6jZbNZ4Bf159a9VD56ZnVpp9M+3bIzumCE/
hnOVsqhRH6N79qHd2XN7H5eHSxPaf+IUYjpPOs3UQjzaF7Tbf65bRvWv1Q+r
AZnVx2TfP6YtMeuuRjljAPRf4VXc7+7udBHr2guxOyC23tn+U7vASqN3xTK6
X/ztnHl6emLuqo/Ec+v6GN0fHh5SHqKGvLm9kKI6nSQL7UbvHpgWRZd6XcMt
V9/Tpb4R2q+urupRv/5PjaJk+rWuDxavr691LjG7CkCDrkUBLn9BKQ8/Pj6+
vLy4jfrbm3Pqne0//+0FtvFPP92LRd/e3tZ7XWAvfS273kX3vKXL8+b2QorY
20sc2n8YKuPKLMZnhqbb2DvcpXHvqHf4KNLvvojb0+3BYKAvgj5o+60FcNra
J86koSve/f29QoJl18de1cpKuy9e/zU1B+r/uvcCuzvM5ihdXXUZp/vdXq6V
v/oV3fMuFZoxt5ezaKyl9KH9h6Ey3T08PHTtZtF3cO8KAo3RLI0PYu86IPqh
zzzr29tb3WVspncBOGEZixLc3NzoZqerqP9VqF7vsaEqzGV8fn42fmFvDUkl
Fred0n3Bp/VxPjIWoO5XdM84CSVjbu/L1BsjS2g3evdUIovBYKDPyGHip+5N
e2+Runk1frOR2/f2CP38vVX5t8RNT5euY4yEB85QyvujrjYmq7+9vQXsmm6U
jmlovNHuoNmqkHuDT+FoXZn7FQ7Ty5s3evTp7F0aLI1cuV1h6VDt6wJlDO2i
a2nuA1C029vbl5cX566hQ3eB3QvI7tPDQ0tv6xsdcFW1y8vL0Wik7dGtjX54
4BzEHiGpq4oZA/Px8RFjGEl7ut7N5LvdvNrCQ5c7z1mBZqw+5Xl3lVCXu0fR
PddDsVy5vfD58nV5Q/tPGV+lApk1rz0ffbYUYt29qu9dIPXQK+tWGKPjohpx
qm8QgzaBUxV81VTTqa5r5nw+j/oUT9elo70Wu9euvRP93t7eDr3L3pGNXemA
HOp7OU+FdBL2JbrnGlOUK7fnraJjL3toNxgqUzccDvW99k+tepFDb6Gbwu7v
731C1H7Z11tEfZSm+47OjdlsphsxXfHAydDX2fPicHl5eXd3p1uYgnqyR3Wb
zeborMa9A2D2Pl/Qxa3lvUI909SBGo/HdIP8lJQ0+hLds1Qyz5Lbd2eglKmQ
0P5TTCs4LwXgx8fHUKW92hf8qi/YV9l7m2jUct+lJnma6flVf5queJGefQNI
pus0meFwOBqNptOp7hdZlnizKY7XKCNT2TueX7/cfh0LONpW76Ur/DnPXS3t
yX4vortDjSN/WXJ79lVibZQT2n/K+0IlpvvXZDIJOByxfcKU/mlvScZDD4mO
Xl50D83SKtdNTfdxHTrt73q9pkMe6JGWoSC6HShkPj096eKjlF7C4zbL6aKH
IsehVNC+BKpSffBeEd1usq9HmUWB3YPlR3edgemzWfrzM1d10E6KCu1GOQ+w
UtKdS5kz7C1psVi0j13ZO0jm5/BqFEe73H+iDXfvRHtteuSqR+dUjAeK9fj4
qO+sWt+6IuniYzrSC/za7l38Yq+WS+Why6MOQvu7bzabGMFJR16XyrOau5r9
DrVX+dE9/TJV6XN7+QsJFRjaf4psC8djBhzGmDyl1zx6kd87SOantXRwoxbx
IXrl0qrx6056c3NThfmPj4/Pz8/sfXcAeqGlQvuultlAhx4utFSVqazX63jX
1eFw2N7nfxqy9BtbKjy6B59CflT63B6wPl4MZYb2n548p/CnDDmbzSKNzVYi
PTpk9NAgmZ9jTU7LbdZtrhcVUA8VTwYAo9MqSArALS/Vsj5sS1WZiq6rUbtE
TPmyE540VHiHauHR3fJ5UyiJc/vu2gpFKTa0G72YF+DGzDldLBbxjt5ms7FZ
OlxfwEOv0H72Hhpds0sX/4yLIVo6zxGeAGzoItZ1zk77lM+Wzt72qjKVNMWl
tddR71O5BKmrGVXJ0d1mRnZAie/O6QcC2Ss8tP/8HZid+yCFd3V1NZ1OYw8j
tCkpbLRfHNr/dr1e22/SfD4v9rmkzGYz76MO4AQppXS9drV3a+j63PK3g8HA
cuResuIe2iRlp5Ppft9ut6UN4Nyr2Oiu89N/kXR7KXO7TvJiz43yQ7uR8tyI
7eHh4e3tLcFQar2F/XoB7S2I9hO4/UHwrs/Pz2KHjX18fHgddACnyG3tlfaI
u16vQ12OLMvaBGFWwevUXVOmlqVMSlNsdJ9MJskOQsrcXuy50ZfQ/tNxPGGZ
Li8vdcBTXuvsn/Lc3Ny0v9TRXqauq++pTaHve4HtWXI7gLrFYuE2x0qXuPZX
PrrupOXEf2M0Gjld89xdXV31eu5qljLFzsqM7pvNJtl9PGVutxldnF6PQvtP
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
y9Tpg/el6MI/tI+cZhykoZihGHAw9eUt0ffR09w+sogc+oPZbJa9HmafILUi
fYnuuv9N0/a2aw+Zin1bG71Fp1f2/+C6UwgyAafh7OzMc8MADIbDWqjbdMHt
1G1AEcv+Gt1p9aW6SCsxbetFzUyQ0D7yq/VNQ4f0YrHYV2Xh3Dsiu/7m9n2F
Sc6VTomFmtNRfnTXbW+yUQjnwaJOI8+dbg2ce0LWvb+/Bz+kszTyAlCgUG2s
upbeWa6IUXG+biZbHUNptuQWJaFCu1H+TcrP773hw8NDY76YzzTJ7Pqb27f7
Tit63d7eFjvAXhf2AU3J0V1ny2S35G4VMqPu4wZdy66CnMZ1ktG9qtsH3KkX
p1wAUenUFyoGODTRUqDq9BbOSzxrw2I8tdzn5uamwHUxwob2Ud+aKOomUWHJ
HAa9Hrbqb24f/TtmTEfHAivYWwQ/ZgqM7rqfjb24bZ1Oy86TjrveRnVdRFv3
BaFm4+rEG+TO1GZxWADDFqSgveKwhmbXK5dPbYNyQqhPauP8/LyotZmCh3aZ
TCa5P1Znpvq9X3ccDb3O7TpmSq5gbxFjjeCiovvFxUXY5bGifvyu050cmsP7
T1CtBCl372n/KwChBClor7id4rreNXgOeSVorluXePCqRYzQPurtJClzBde3
o8Opj9UyfcztCupKHaYgOeBYQUqRMm0h0V1fSuLfgmeTXvtJqdXbObxLwBO4
f7l7148MYEh0Ogq4LrPzI8WuQxCeJaa68qYf6MveLzFSaDf60kKnrvFoXndz
/Wqt1q/crr2tDa4fJ09PT7k3qjOdLeN9odmju85RiQsw9HaeVVJdK711V+Lw
Ljp6A97O6KVub2+dP3JRD3ABJKMTZvDLhK7LDlvStTfXKEQPE//u9A4mk0mu
cd2ooX0UdDwqjX3Dbufn530ZzupLblcw0+Gx8webbEX4UAKWTOyUK7rrjBqj
/ucgh6qVBoczqttwd/B1jty6u0e9cwRQLEVlh2Xp2l1cXLhl6cfHR4e38xxz
8JkJ5UOXjARrDjbEDu2jHi7e137863pafvFM4bndlMS0/04THJlhJXhqlj66
60yY5UmTf5cAtwo9t65iOp6D7yW9YNfLUOw7RwAF2mw2wSOrzznN7TrlP8Cb
eIJq5eTkJGUXrzTRqOsyW3lZPivXUa14X2zxTLG5XWFM+damdOrz87NfU1PT
rECUMrpnXCfO/6GnW4h1HuS/vLwMXkfUdQytL08DAYSyXC5jXCjn87nzJrmN
/PsPfPmXVjpL9lQ62Xhm+asv1XUNDOfn5wUWAhWY2y8uLnRgdzoSfAp900vW
1jVNdJ9Op7l+tkEmGbk95uu6XEidWy1oO9OE2XJvpLlzBFCCsM0e65RqfCoK
3CbGBumF5dZbIJTYz9wTFyH0aLaU29N5/auiBruKyu3j8fjx8dHhU+T9DXai
E13wL7FF7Oied6Z8kELN9Xrt8Nadludu0D+M1FDIskVk4cV7AELRxTHeFDCf
qg/noY9QqxbmHe6LN96VvnLYp6l+SpvNxudjllP6XkJur/d1dNaXdZe6tgr3
Fym655qFWnGb07TN+dLjc9egwzXSSfvj46O9R3HiO0cAuYRapm0nz1bqzvEy
1LR6nSrzVtjGqC/NMt2vL2uPejZPrtzc3OTtfpk3t+tXM5/Pg0yyzjXTpKss
T1uCR/fE82u2KfSGWjHE+QfoWVof70jQzmnZNialAoP39fU1mUx8TlDt/Lva
TqdT53cPVWuavW2yrmIBm8zk6tER6glIVG7dm1tcX1/nSu+5cruCn34yAT+1
skrAVSTi2Ww2oT5yJwFPUDpjZ69nu7+/D/JZdOfovA2eawc4r1Riv3k7a2ay
LwICIKqotTGG/7iNzxaGavShLJc9NoS6nmZsrNeLqamRyqKurq7Sh7r0uV1H
qQ6wGDVC2e+dbWQsjgqyfy4uLrKvj6ZTRKhuZj5FI/737/GqZYydNTN5q5sA
RBW1Nsbwb9ntsOJSXcAWHyWUCuvewTP7Ze+GXWzLxErUGzQFiZTpPeVBq4/W
tVFMJ29vb8k+i5vsj5M8o3vGfo91Ac9RnkUj/rU6MXrL1Jmamfp1PG+BE4BI
YqyptM15laU6zwemy+UyyB77CbECSBA6RTvfjGQP7aPip6aGekDfLlnTyDS5
PXZir0TqdhVK+kmp25yju/ZtCTOpw6525zmhZj6fe26ATtcJio7q660ka0MK
IBndjydYBjTUynGeRQthJ0KWkHtHv/vWIf0WsvGFT02NXTZWp59h7PQeO7cn
S+xGqB4jkRTSAtQhumds0t4Q9oj1/EaCHG9Bxq8OUlw3d7Wx3whAYsnaMoQa
6PbMUWEn1+v0mzLXteu0hwsJ7aMCaglaZKnEiJre4+V2fY8pE7sRsPI5hlyT
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
fZ3P5xyf5HYAAI6EKVY/Pz9/enpSLjo7O3t/f394eFCAz51Heo/c7u/l5eX2
9lbh3Kw7Np1OzUpeO0vijxO5HQCAYfv4+Hiv0aVfIVO5SIld0ejy8vL8H+af
OiO3O1Nc3/yjY1J7UoflYrEwFeznNRyf5HYAAHpHUfz19fXp6en+/l455+7u
7vb29ubmRjnn4uKiPeHoz/7+/at/osQ+n8/rCzNVvr+/TchXplJUUJrSGynq
K02ZN7q6uiJE1ZHb63TYmCNzNpvpmNTRYo7J09PTP//s25P6Sx2cq9VKB5sO
vMaav5XPz08dn29vbzo+zQ/BVNcM+/gktwMAUCYlFsUSZRJlGCWZ6XQ6Ho+d
V5M5OTnRiyjqbDYbJXYlHIUi/UclKOWcnU0gbZgX1EspNekuQC+lG4cjnDZ4
hLldd3ym4EpRWUemcrI5nJz3oV7EjL3rKNLLKqOal9UNo1K620aae8/68amD
/+BqZcUitwMAUIKPjw9dlE1EV7oIOFqoIK2XNeOWyjAKLWZkcjKZ6E2rDKM7
goCrMeqVFcDW63Xwj1Omwed2HTnmmNHhFHZ+qKK+kr957qNjRgdkNVav/6jo
bv5G/9+qx7s/HZ/mjlhh/vr6ui/HJ7kdAID0lKIVhBRrFRuUTCINACqQPD4+
Vm/69vamfKIIpDikXKT/4+NX/d0VyZTqY3xkvalSmUlKV1dXAxuTH1hu15el
8GymP8Tr4qJXru83HZ8nv/TrMMfn1y8T3Q0d0pGyq95IP0kdn7pB0PFZ5pg8
uR0AgAQURV5fXxXUlQqUhWKn1slkYlphV0xo1/90e3ur/69ykf7v5XL58zv2
2Egp8dJ7Y4coHN7d3SmY9T3G9z23V0E9TZnT9gFWHZ/6gfz8Oz7N32jbtFX1
f65fkG5I95W+h2J+sLrNTPCDtURuBwAgkqoA2HRKT3BZNyUH2+UEVSgSU8pu
cpHikPkD/cftZNIYDo3KPIBQTlN07EvRQl0fc7vu1xaLReKx5Z23hNqS9uNT
f9CI7qPfyi7l6tjp3TDLEGurbm5uMg7Fk9sBAAhIWf3x8dF0a0l5QVfq1ps2
loM36plHIc38R5OLpBqW1/+xc1BR/1HpLt0e/KUbDUWyHmX4vuR2peL5fJ5l
7vC+hzifn5/V8alfjfmP1fGpO1/zX3ZGd9ERopfd2RYpHh2fq9VqMpkkzvDk
dgAAPJmxOIXbxFndUHJQyNmXWxpp5/7+3vz3KheZshlDGWnfuyjm5Yqmr6+v
CmZ5xzkPKjm36xjQ5mUs9mgpu2qUr1d/Vh2funerf5B993Htv4KozPF5fX2d
YPdWv18AANCJWcwx/Zhb5WBWaYR2M+PP/E9VLjKz/6p/ok/U8o4J6t5baOM3
m40p7Yi7Z7srMLeblXDz3uzo6Go5YPSF1tfq1R9X/R7rx2f9KVK94mtbxvT+
868ubj6fOzdrPYjcDgCAvSo6Zhlar9jkE/2vjXx7d3dX/a9VLpL1el3/h/p0
7e+uWNKY9JqespxZT7OQCYOF5HZ96crJhdzXmBmmLabTaf3v60Pr9eOzUabV
Ht1HudN7tZExBuF1W53xQwEA0AumEkY5JF5PPEumjv1gJmmUHxjv7+/VH9Rz
kdJF45/f3t4e3BK9/s5y+sRMI5TJZJI3wOfN7doJCrfxhnm70hF18BDVYdz4
V/WepcvlsvrvSumNyaemY2T7NpSQ3n9+q/d1g3lzcxPk+Czk9hAAgAKZuK4Q
mz2uj/4tPWMTlXeGdiWH+t/Uc7tsv+z2K+xUrZiTXd4AnyVQlRbXR7/PYmzW
3lWUbfxD/cTq4VxfZf1/3V4RzKzQdHB7TGVXmp4z7czx6Rngye0AAGxTKri7
uyunmYku929vbzZbroiiP95+hfpg5s9WMczOPGD58c0CrGH2ewhZAnzKQGWW
zSoqro9+7ystq6+fnp62v5p6EdfPVm7ffiT0Yx3dR6HXAvZkRuDdSmjm83nu
zQcAoBTv7+8KtOXE9dFvZ7xOzd8aNcPGdqVBoxJGwWb7pT4+Puyjhd7CZqA1
JQWk1WqVptg7TW5X+Cxzqdl6V6J2+0pcGosONHL79h9UO8R+b4zH4+zzMur0
+1oulzubW/rvZwAAhurr62u9XltWhiSjLN21fcR2zbBh1kWt265g3xlpdq7H
1MKmsDk9Rb75fB612ClqblfA0/dVZhtMxU77aQ66k9r5mKBq217Zzu37hpq3
/7KdbmzrEz1KYJrq2xyfO587AABwJHTFVCIqbQBTCU1Ju2tRbqNkvdLopGds
5/ZGoUKlay7SxpfZrU778+HhYWcRkb9Iuf3v37+l1cNUun7Rja6Pddv3lc/P
z9tvt++WUHup05abyd1Vz8lCmONz3y4yxuNx7s0EACA1XSLX63XeXo47mcmn
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
AAAAAAAAAAAAAAAA2Aq4jwbn
         "], {{0, 250.}, {250., 0}}, {0, 255},
         ColorFunction->RGBColor,
         ImageResolution->288.],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->250,
       ImageSizeRaw->{250., 250.},
       PlotRange->{{0, 250.}, {0, 250.}}],
      TraditionalForm], Scaled[{0.5, 0.5}], Scaled[{0.5, 0.5}], Scaled[1]], 
    CircleBox[{0, 0}]}, 
   {RGBColor[0, 0, 1], Arrowheads[{{0.02, 0.65}}], FaceForm[{RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Opacity[0.5]}], 
    PolygonBox[CompressedData["
1:eJxV2H9Q1McZx/GvikooOii0YdQxpyUJUWoZpQbTax+01JJIMlh/lFrSIQ4a
ajG9mjQyEfVUpmGUideEVGMIOQ2TIRETq4TS5HQvikgUzQkHokV7NdhSS0dM
r5amqLU+73Um/MPI3X1v99nn89pdpyz/xQ9XDHccZ+4wx/n/76YX4jbU/Ouc
OPxkJh2fn9l4+99JZxc88c46KbtQcXLb2nOStWnhxM2N22Tg4XmB1+acE9eq
t//Z0F4lxdPPtywf6pbI8WmNr4del77103b81XSLb+/0855Vu8V95kZXanm3
OIkfvPGHq7WS2TJmxoOPdovX98L3JpfWifPAsHmfjb39/tatkaoR9RJKWNX4
ZOdZKby8ZFPiy+9LdGZz2o7qs1JxtDep9Te/k/xba7J9RWfFv6JxlVNwUJIG
zK5Hv3FWcmYf/mjfgx9If1v3iaPXu6S0bMuNE9FG8f371OpbwS4Jby+fsuho
kyQd9k24sa1LauO+/9W5r3wozsFrKw79qEsyRhcc2V4UkPqvvHkpK6VLEoo3
j33k4cNSHPP1KRXXOsX/amj1GyODEnjs0vuvmE6Z3Ht1y/yBoPhXT5hY9FKn
xOWea3z1jx9L96JI/3+e7JSc2ugvK44fEXfT5H1LZnRKWf3FyZMajoq7vurP
a2+F5d08z/1P7G6WAld4zFNnwvLetWN/n7j9mLStyTo4rjYsuw7M79q8vkWy
YsYs3Lo2LJ+f2PsDb8lxCbV/u+jkgrBsvTB697iCVnEmVj/d6br9+qLTczNy
P5GYW60dddc75MPD51+87D4hKRmp980/1SHtc0o/nTrjpJQ09h3aV9shOzuL
n/3bfW1SsHnY1EhZh8TF/KNt9vhTkrok/aMLSzokO+7krNiRp6V7zeD1t7/Z
IVOfX3pz2eBpGVyzO8sd1yEDO9ZuSuv/VIoSZw+rudwuY70/jv2OJySLx215
s+3jdin0Jm/0XwlJT+zXvK017VL+2vLHZcUZqVzmHvlyWbvMcv47ITlyRqru
Hb79oZ+0y25+T7d/533r+VyE5+Tz3AK+ZzTfW8I4LjEu51kd53jGHWEeGcwr
jXkOjdB5F1GHrdTFQ51aqFsadaynrrHU+S+27qzDBtYlzDpdYd2yWcdK1jXE
Ou9h3Qvpgxr6Ips+ec72DX3kpq9snw2n72wfjqcvbZ/+lr4toY+Hnta+3k+f
T6LvY8hBFblIJifN5KaKHBWTK5uzTHKXTA53kkub01Jya3OcRa5tzj3kfuh+
daAQF6wTA+PVDeuIB1esM0HcKcIhB5f6cSroVbdKccybqK5lWOfu/PgDDTjI
6+bu6+qesZ/HPWOfj3vGfr9Xx2d6GR/jN5mMH/dMBvPDPWPnn6f1MW3UB/eM
rR/umcXUF/dMAvXHPdPH+oR0/Uwl6+fX9TXWQdwz1sF4dc9YB/do/xjrIO6Z
JvorXvvPVNN/uGfC9OcG7V+TSf/Wa38b6+B+7X9jHazWfBjr4HXNj3Hb/Gi+
jHUwqvkzQxM0fwHNp3HIZ1jza1zkt1rzbayD8eqesQ7OVx9MCj6kqB8mjB9R
9cVYB8epP6YQf55Sn4x18EX1y3Tj12z1zVgH31L3jA//+LuZhoN8zqzDQZ5r
luIg32tG4WBUx2UiOMi4TQIOunReZiYO5uu8zSAOFmpdTAUOUjdzBAeHbt6p
q7EODmrdTS8ONuu6mDIczNR1M304GNR1NS/hYJ6uu6nBwQztC1ONg+naN+YZ
HGzVvjLWwUrtOzO0QB2s1740CThYoH1rrIPV2tcmioPRA3f63lgHHc2FqcBB
r+bGBHCwW3NlCnHQ0dyZdBzM1lyaChyMaG6NBwebNNcmHQd7NfemEAdd6oKx
DrrUDRPCwZC6YqyDueqO8eNgWF0ykZ+pg4XqlrEOTlLXjIOD1eqeUQf3B5Ls
6+PUwXw+792oDoZ4fpY+3+Tw/Q4OtjI+BwcnMX4vDiYzv4Ht6mCE+Q8cVwcb
qE+wVx0MU790HMykvjk4GL2q9e/7ljrYxvok4+BzrJ8HBwcP6fq6cbCX9W8e
pQ766A+/9ofJpX9W4mA1/XXxM3WwnP5r0/4zTfRnLA666N9HcNBFfxfhYBb9
vxIH95OPxTiYSn7ew8Em8vVdHOwlf3twsI98FuNgPPktw8E88p2Fg1nk/4Dm
38TiQ9896mAAP5p/pQ5G8KUKB7Px508b1cFMfJqBgwH8WoiDHnxzcLAU/0r4
ncjf83nfSj5Xx3Pm8VwX3xPle9MYx2HGFWScA4y7mnkk43v/Yp3nReadQh2e
oS5p1KmeuvXN0jrupK5B6txF3QOsQwnrUsk69bBuQyN0HX/NupazzrtY9yT6
APdMdK/2iYe+Gfi99hHumQr6LIb9N48+TGZ/LqZPubeYZPqYe43Jp88z2f/r
yEEDuWgiJxFyk0mOfOSqkpzlc/5oIIdBm8ubmtM6cusjx37ON8XkPML5pwoH
IpyP2o7hoN4bTVtIHXHq1ZVSnIm0qjuD03Do5+pSqXVqi7oVg2NOsroWSMS5
Oz/tAbd1MEFdvPu6uid3P4+r9vn+FnU3yveH3lWX7fjScduO36/uiZ2fX90T
O/88dU9sfQaP6L5RSf0S2Ffu1lfdE1v/0DrdlypYHxf7Vjrr13uP7mt2fYvV
PbHr72ZfXEx/zGTfTKB/6tQ9KaK/fOy7OfTfibd0X/bSn1/s1X27j/51sa/3
09+T2fdj6f9RnAvKyMcyzg0D5KevR88V5eQrl3NHA/mL51zSRD5dnFsi5PdS
WM81KeQ7l3NPEvn3qnsSwYel6odU4UcK56omfKlVf8SFP59v1HNZAj4lcW7b
iV/BW1/cOdfl4NtDnPvy8C+Vc+FlfZ8p49w4BweHEvRceS8OxnPubMXBWs6l
q3CwnHOrHwe7dV7Sgu8JnHt9OOjiXPwADvZo3WQ5DuKe5FkHOXf7cNDHuXwa
DsZwbq/BwSrO9Y/hYArn/p/iYDz3guU4GMu9we6ftdwr4nHQw70jzP5byb3k
CvtzFveW53GwgntNkP29R/teouz/Uc2FlOAg5wepx0HOF5KPg4OaO+H8Z9zc
y3w42PPl/78yAXvvxcE+7n1BHEzlXhjCwVTujXk42M290jpYYO+9n6iDvdxL
C3HQw73VKVcH07jXeieogw1f+v+/i4H/AelsmpU=
     "]], {ArrowBox[LineBox[CompressedData["
1:eJwtiglIkwEAhX9NSRaK5ipx4ZXlmUWKRy3eNDNNk8zssAkmk8ZQMoMUmzUP
aGjk8sC8HQyx1KTUYd73lpu6+7CMZUpWhlpmRtla4IPHx8d7rik3L6SaEwTh
Zep/dueQ7tX/0IPYTjBZFBEsNDlZGx379C7Yc1xJcZYetLw4Sr6wGKtBYX1V
IXq4sJq+dyrKwfSZnUj5o4NB5C2skdVgKde78uOgDrwWn9kMFh9U+ZbGs1AH
wr6r7tWKAMET1n4eUTpweDmnnLKbQRwyC/tgY/qLiwzlO1ohs2UJk9RaJC8m
5NmXtmP92JhvZa0W3NEFsvjxC1wxZobzGFo0pgpZBL0D5NXB6qjDWkQGDvS2
eXRhWaqbHN3QIJtdsDW5LgTv51S6cUgDVUmha/xoN8gDPMetYg0EpNN7Qst6
QHSspfZf1iBgJ32khNGH1l0N8zR3DWyZ+TbHgwbAtDjgyl1To7FCll5nOYS+
s/PtZYNqOC2sFESsDqEx3ZHCeKQGKUYvrHgzDF28YflXkhqRgvVbXNEIqN1O
bQl+arBb3znt7xwFtbX8fZZRhWfnMw7G8sdAd1FZX5er8Hxt/AulZBzSTFqH
nUCF6pcRmvzcCdAsrOOKslT4NtlyhpMmgkxxgiGJVqFobiffji4GQam9oXYx
7fHToQExr2FhFCubN5ToGZh9sEidhHuAp3PElBKKkOwZNz8J0oRL/W0CJZ6o
mbc/OUtBzzdzM7CVIFl8lQbunoJnwtHeuQQlwkkSfyvLaegyNzeajijhdufS
38TNaWxm8mlUkhKrlVl5vsszYNgHmtUvKmDDuWp1MkOGi3YFDdJhBZI5Dvcb
P8vw1movR1yvQGFVyjmkyvEwkWpZylbAn/jt6GCQo3yfeYnXNQX42/wH/eFC
Sw==
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwtxQss1AEAx/Hzmts1lkdlmFeZZ2plHnXth3RNZMmUxCY7YzfWRYsJHdoy
WidOyLuZac5U+E85HIe7OJz7/++laZcoScOStEiP9d2++zgnXb+YbEij0Tz+
/NfqA4Z8j6tK1P3Xi/bT1kY/A0Ec06Q8V4m8mqTzSJ6Bnr6fJ2tQIpZnc6dp
WYF4i6JG+ZASprwr9FNcBdKs/AwaFpWYr8oq8F6ZBi2zOYjJIGF569KvuK0p
6DO2NluPkPBlTBynm0zBO+Zo31wMiW2jL3I/y0mwCw1c9LkkSlSpmZ8c5eAS
S/0dLSTGArOnXXwm4O3r7siaJCEcmL23yBwHfVdGtm2S+BA9Fewb8RrGdnUp
KicK+XOmzRbxMlDKk+yJcArL4+1neWlShBqbRZVkUbj/gqUuzBuDIiOoy6KF
wpP10c92/FEkOlFm12YoNFzgukY2jyBUKHiXtUvhpvCtg323BMxeh44YHxWY
LRs3iqXD0EbrV34kqGAYoSMq3wyhKd3Wjv1ABcuF1SLWmhiic/OdFYMqPKpU
pNebiJFmfNC5eF2F7ZRC8xP+A3i2p3E+6JAa9qbxw3y2CMZd68n9l9UQMM7s
C654BZuBMtudUjVG+HedoyW9EHyfTN8Vq5GaW7QzvkFgRa4dl2yqEeA30Nfh
1gObtcHHYYc1qE4mOLT4LsTuZoSWsTXIlixYyx4+x8axEe+qOg2CFmMKrMo7
odjLIRJUGnBlJXqBkRDbrgYh7821SCzLOe2Q3YaAMTMftzAt1ix76l+utoA5
s6N2v6sFt91rlstpxlKeZ9XHQS3EUk+iVlELttfsWNK2FjRO69dupQAr/iGi
mkAdxLwou0KiFNlzxROlWTrwrDThkU9vw9daygogdKD9q0nUncPIb/imw29i
r0W3
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAAAAoDy0egp+nvXZP4AT10tO
qXu/NBTHRji22T8AgVEbgraLv3jdiMuLd9k/IGqm87TSlL/sN0K8mTnZP+DH
Krab0Ju/ZCvaxmL82D+AqyvacGqhv+R9Kpfnv9g/8BK1nbnvpL840f3WKITY
P4CQekMeeKi/NMYNLidJ2D+QyIrglAOsv/wlAULjDtg/UOVVgROSr7/MEGq2
XdXXP4jD5BTIkbG/9DLELJec1z+gZbZqAFyzv1T/ckSQZNc/SDa+u60ntb8Q
8L+aSS3XP3h8g/3K9La/6MzYysP21j/Qj4QhU8O4v4z3zW3/wNY/oApFFUGT
ur8UvpAa/YvWPzQHXMKPZLy/ALPxZb1X1j8MaIIOOje+v6wLn+JAJNY/opXQ
bZ0FwL9oBCMhiPHVPx7k74NG8MC/uErir5O/1T8MTNm2ldvBv5xtGhtkjtU/
SKT0cYjHwr/UU+Ds+V3VP36s3h4ctMO/OLgerVUu1T+sUHAlTqHEvzyslOF3
/9Q/sPHF6xuPxb9cINQNYdHUP5yyRtaCfca/zHJAsxGk1D/2yqtHgGzHvzwE
DVGKd9Q/jN0HoRFcyL/Q0jtky0vUP/RTzkE0TMm//BqcZ9Ug1D+8vtqH5TzK
vwD/yNOo9tM/1Dl4zyIuy78gNCgfRs3TP5zVaHPpH8y/bLbova2k0z8MBO3M
NhLNv1yCASLgfNM/RgrLMwgFzr8kVTC73VXTPyR2Vv5a+M6/1HL49qYv0z/0
l3eBLOzPv/hyoUA8CtM/EYBZCD1w0L9gEzYBnuXSP2GAGH+g6tC/VBGDn8zB
0j+HmWJNP2XRv9gIFoDIntI/NgD7Ghjg0b+MWjwFknzSP6MXAo8pW9K/kBcC
jylb0j+PaVnt
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAlBcCjylb0r+WFwKPKVvSP4xaPAWS
fNK/KgD7Ghjg0T/YCBaAyJ7Sv3uZYk0/ZdE/VBGDn8zB0r9WgBh/oOrQP2AT
NgGe5dK/BoBZCD1w0D/0cqFAPArTv+CXd4Es7M8/1HL49qYv078Qdlb+WvjO
PyBVMLvdVdO/MgrLMwgFzj9YggEi4HzTv/gD7cw2Es0/YLbova2k07+I1Whz
6R/MPyA0KB9GzdO/wjl4zyIuyz/8/sjTqPbTv6y+2oflPMo/+BqcZ9Ug1L/k
U85BNEzJP8TSO2TLS9S/fN0HoRFcyD84BA1RinfUv+jKq0eAbMc/wHJAsxGk
1L+OskbWgn3GP1Ag1A1h0dS/nvHF6xuPxT80rJThd//Uv5xQcCVOocQ/MLge
rVUu1b9urN4eHLTDP8hT4Oz5XdW/PKT0cYjHwj+MbRobZI7Vv/xL2baV28E/
rErir5O/1b8Q5O+DRvDAP1wEIyGI8dW/lpXQbZ0FwD+cC5/iQCTWv/Rngg46
N74/9LLxZb1X1r8cB1zCj2S8PwC+kBr9i9a/iApFFUGTuj+A981t/8DWv7yP
hCFTw7g/2MzYysP21r9gfIP9yvS2PwDwv5pJLde/MDa+u60ntT9E/3JEkGTX
v4hltmoAXLM/4DLELJec179ww+QUyJGxP7gQarZd1de/MOVVgROSrz/kJQFC
4w7Yv2DIiuCUA6w/IMYNLidJ2L9gkHpDHnioPyDR/dYohNi/0BK1nbnvpD/Q
fSqX57/Yv3CrK9pwaqE/TCvaxmL82L+gxyq2m9CbP9Q3QryZOdm/4Gmm87TS
lD9g3YjLi3fZv8CAURuCtos/HBTHRji22b8AE9dLTql7P5x6Cn6e9dm/AAAA
AAAAsLyuDlwJ
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwtknssFAAAh8+rLqV1qAzjKPPsspJXVx3pIjKSHuKP7Dwy1qUaEzmPLWPr
xJnJ89rNNKQ8bsrjd553cTj3RKOLs67SsCSt0NX6bd++ff//7GJvX4rTJxAI
zjr+mpNh/LDm+zQI/yaimpsL6d58XZNUwaHPH+DabMFoUdo0WNnhVrn8Iki8
/LsrfKZBu1X/rV3KQaDrzHDs7ykQhC78SkklRFku5R+h60bXGWYSF9aTm0qn
/CmwTDuqXy/zYDFsQnEMmsIKO+OsTXoD1A56/gt7dS0sVHMMmtC+L4kfo1BB
oInMMStpgfzYoFt5lQruAxpz0ZNX8N5ODShmqBAYx08iRLdhbRlPg46ooD3R
29Xs2AGxeGpkYF0Ji8y8zZE1Pu79GEvZFijBZOfbRQx0YqOn2HKzSAmq8bn9
fqVvoGldjeu5qsTgjuh+NqMbxbtr52mHlahLyN3r69WLEMNDdgWrCsSXSVKq
jQSoujDfUgoF5haW8+grAuSnWFoxHisgDp7ml73rQ2eEeulnjAJE3tqdAmE/
yJ02zZEUBXyb5mys2wdAbuJ8SNuWgxHGdAjlDoJGlpvcnJQjfnXoixV7CC9T
aW0knhyXW+nK3KxhOBmahBemyfFipPE8K1mITulJxmiwHKdnd3JJ0SJoLKsS
FGQ5nkWM+3mEvIV2SyRrWJchsXfm0SJ1BHs8nGzpYzJk+qRP2FNGEcbX9jTz
ZKApEu9+shWDlqtnr86UodXgq9jTdAzESPeu2UgZtLtGjxONxtGdurFef1SG
wftXtqI2xqFO5dKoxjJwytNy3JYmEGDmqVezKMX77OvEU0wJvEl5teI+KSgs
i+y6zxJ0Ew+wRDVShFfEXjwTNwlmFNWoJFOq+9svSwv1JNIP6rOdb0iR/N9/
AM4WbSI=
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwtigss1AEAxk8Y0xid6kbzinkktTSPuhYqTWQkJbGV3ZWJurR2N3mf1Q3L
5THhPG4zu4ZZHv+U4zvv6xzOvSl2iaXSsC5peXS1vu3bb799n3PSvUv0XSQS
ydPQv8zev6vE87octP8kk37bUXRTiIunmpZmynGrKuniafoUBOb7csV1coTk
UnIavsjgZMOul/bLoc+5Zn6KIYM32c+oblGOvkpmnvfyJETp/CCqhQKrD69s
x29MgJe+sd50RAGKxZivuekEli8f7ZmNVWDO+JvUb884XPONXHSZCtxVJT/4
7CiFN7HU29qoQEsga9LFZwxLvh6OoeMKPO+bebJIlUC0LVYI1hVQx0wEH494
C6Ed77bKSYnUWTO+TYIYxfKTtLFwJd5Lms/npo5i09gyupCpxOP2UHV+1ggK
0oM6bBqVqF4b/mpfMgxbJ6XlzSkleFEMt0j+EPTN5R+YO0owWuYcDnQOYvWV
Q2usjwrURv19zugAODG65V+JKphETBMV7/oRlWZnT3uqAmVhhR26KkLyhfm2
MqjQUCFLqzUVgWJy0JmzpoJ1cr7VCf8+xO2unw9yVSPALGGghCaEoH2N3ntV
jU6Lc3uDy96gu5drt1Wkhq6kwDlmsBsBP8fTdkRqcDPZWxI9gWKpVjK4rkac
X19Pq3sXOldQHXZYAxGdSCEldEC/nX6WS9NAMLhgK372EtxjQ96VPA0aFmPz
yKVtSLZOIRJVGujEhbpy4xaUuxmFfLTSQsfNOOPAEkA6bOnjHqbFDXJX7euV
RkhlW2qPAi1ILYdmGCl8sLK8Kj/B8Bd7ETWyGmx4zYwkbRr2O03fO+XlYPmH
CKsCpxHEjrbPJ4pgMssZK2JOg0TRhEe+eAQheTQ0gDD4v8iF1AyL7Lof0/gD
nw9wxg==
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAAAAAAAAAyLw8egp+nvXZvwAQ10tO
qXs/vBPHRji22b8Af1EbgraLPwTdiMuLd9m/AGmm87TSlD94N0K8mTnZv6DG
Krab0Js/9CraxmL82L/QqivacGqhP3h9Kpfnv9i/MBK1nbnvpD/M0P3WKITY
v6CPekMeeKg/zMUNLidJ2L+gx4rglAOsP5QlAULjDti/UORVgROSrz9oEGq2
XdXXv/jC5BTIkbE/jDLELJec178QZbZqAFyzP/T+ckSQZNe/qDW+u60ntT+0
77+aSS3Xv9B7g/3K9LY/iMzYysP21r8gj4QhU8O4PzD3zW3/wNa/5AlFFUGT
uj+4vZAa/YvWv2gGXMKPZLw/qLLxZb1X1r88Z4IOOje+P1QLn+JAJNa/MpXQ
bZ0FwD8QBCMhiPHVv6jj74NG8MA/ZErir5O/1b+QS9m2ldvBP0htGhtkjtW/
yqP0cYjHwj+AU+Ds+V3Vv/qr3h4ctMM/6LcerVUu1b8gUHAlTqHEP+yrlOF3
/9S/HvHF6xuPxT8IINQNYdHUvwayRtaCfcY/fHJAsxGk1L9ayqtHgGzHP/AD
DVGKd9S/6NwHoRFcyD+E0jtky0vUv0xTzkE0TMk/tBqcZ9Ug1L8MvtqH5TzK
P7j+yNOo9tO/IDl4zyIuyz/gMygfRs3Tv+LUaHPpH8w/JLbova2k079MA+3M
NhLNPxSCASLgfNO/gAnLMwgFzj/gVDC73VXTv1Z1Vv5a+M4/lHL49qYv078k
l3eBLOzPP7hyoUA8CtO/pH9ZCD1w0D8gEzYBnuXSv/J/GH+g6tA/EBGDn8zB
0r8UmWJNP2XRP5gIFoDIntK/wP/6Ghjg0T9IWjwFknzSvykXAo8pW9I/UBcC
jylb0r/epln8
       "]]], ArrowBox[LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAMBcCjylb0j9QFwKPKVvSvyhaPAWS
fNI/5f/6Ghjg0b98CBaAyJ7SPzmZYk0/ZdG//BCDn8zB0j8XgBh/oOrQvwwT
NgGe5dI/yH9ZCD1w0L+kcqFAPArTP2qXd4Es7M+/hHL49qYv0z+gdVb+WvjO
v9hUMLvdVdM/xgnLMwgFzr8QggEi4HzTP5AD7cw2Es2/ILbova2k0z8m1Whz
6R/Mv9wzKB9GzdM/Yjl4zyIuy7/A/sjTqPbTP1C+2oflPMq/wBqcZ9Ug1D+Q
U85BNEzJv5DSO2TLS9Q/Kt0HoRFcyL8EBA1RinfUP57Kq0eAbMe/lHJAsxGk
1D9KskbWgn3GvyQg1A1h0dQ/XvHF6xuPxb8MrJThd//UP2JQcCVOocS/CLge
rVUu1T86rN4eHLTDv6RT4Oz5XdU/DKT0cYjHwr9wbRobZI7VP9RL2baV28G/
jErir5O/1T/q4++DRvDAv0AEIyGI8dU/dpXQbZ0FwL+IC5/iQCTWP8Bngg46
N76/3LLxZb1X1j/0BlzCj2S8v/S9kBr9i9Y/bApFFUGTur90981t/8DWP6yP
hCFTw7i/zMzYysP21j9YfIP9yvS2v/jvv5pJLdc/MDa+u60ntb88/3JEkGTX
P5BltmoAXLO/3DLELJec1z+Iw+QUyJGxv7wQarZd1dc/cOVVgROSr7/oJQFC
4w7YP8DIiuCUA6y/KMYNLidJ2D/QkHpDHniovyjR/dYohNg/UBO1nbnvpL/Y
fSqX57/YPwCsK9pwaqG/XCvaxmL82D8AySq2m9Cbv+Q3QryZOdk/YGum87TS
lL9w3YjLi3fZPwCEURuCtou/LBTHRji22T+AGtdLTql7v7R6Cn6e9dk/AAAA
AAAA3rwf+Vn6
       "]]]}}},
  ImageSize->250,
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}}]], "Output",
 CellChangeTimes->{{3.9059405333479443`*^9, 3.9059405510640197`*^9}, 
   3.905941791076277*^9, 3.9059418476888533`*^9},
 CellLabel->"Out[2]=",
 CellID->12592899,ExpressionUUID->"9cc88dee-ffef-48a1-b96c-9ce20b7a48fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "6df84729-b9be-4b36-ad1f-923165561485"],
  $Line = 0; Null]], "ExampleSection",
 CellID->108875503,ExpressionUUID->"9a5ab386-47bf-4011-8ff6-9c7a54357014"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "d9b5c743-dc3e-41ec-9959-7622bcf45b5f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->75626642,ExpressionUUID->"13d098dc-0335-45c4-bc92-e073b567cbc8"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "ccab2bcf-efbd-495e-9197-a528dcb6e0be"],
  $Line = 0; Null]], "ExampleSection",
 CellID->538049765,ExpressionUUID->"7873e5a2-c799-4177-8bcb-9584e4ec3dfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->635348524,ExpressionUUID->"6ce70d08-09f9-4204-bb5d-3407c202527f"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"dbdb254c-f2a9-495d-b69f-1345dbbbabad"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"dc060d27-ccd3-4fb4-b464-a6f324a72504"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"6109979b-909c-4337-8931-f7b82cfc7996"]
}], "History",
 CellID->418083108,ExpressionUUID->"283b0496-cb0e-4e00-82d3-f9490643b011"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "04ef8f8f-6675-4b17-9269-6e8e9145a27e"]
}], "CategorizationSection",
 CellID->264458094,ExpressionUUID->"e07c0241-f184-45f9-b3f1-ae9f8830dfcd"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->251389828,ExpressionUUID->"03fd3ea1-a7d8-4398-be37-df409e1b0cf4"],

Cell["PatrickMLenggenhager/HyperBloch", "Categorization",
 CellLabel->"Paclet Name",
 CellID->148059144,ExpressionUUID->"8cc43cbd-7d09-490f-8086-a886f97bda90"],

Cell["PatrickMLenggenhager`HyperBloch`", "Categorization",
 CellLabel->"Context",
 CellID->48333672,ExpressionUUID->"0bfcb3d3-d74f-45c7-9e60-7bd16e3c5bb2"],

Cell["PatrickMLenggenhager/HyperBloch/ref/ImportModelGraphString", \
"Categorization",
 CellLabel->"URI",
 CellID->497429221,ExpressionUUID->"c489e917-01a4-483d-aa1e-f0573ca855ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->178236525,ExpressionUUID->"34e18437-1897-48da-ab81-31f00a66ef7c"],

Cell["XXXX", "Keywords",
 CellID->825298513,ExpressionUUID->"7a3e6c0b-ba29-4a83-afbc-7d034bd43e9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->12174475,ExpressionUUID->"9278dc6b-4ca9-43cb-95d5-7e4d157927d2"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->263783096,ExpressionUUID->"829e97c0-d82f-4975-8c3f-35c137744ecb"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->557038958,ExpressionUUID->"a4ce1930-1267-494e-9fca-70261735f676"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->289054446,ExpressionUUID->"df3e331c-1aba-4946-b510-c5c5872fc963"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->36343278,ExpressionUUID->"b48241f7-8d26-4cc5-848c-89000d8cdabd"]
}, Closed]]
}, Open  ]]
},
WindowSize->{821.1428571428571, 852.},
WindowMargins->{{-827.142857142857, Automatic}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PatrickMLenggenhager/HyperBloch"|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"ac5aa272-1283-4616-9cfc-777a989b1881"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[128840, 2559, 487, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"799a778c-b6de-4a0f-b467-4bf5627d27a6",
   CellTags->"ExtendedExamples",
   CellID->580082300]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 325307, 6528}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 177, 2, 74, "ObjectName",ExpressionUUID->"f0b6b5c0-4563-4130-a82e-963bef7fd6e3",
 CellID->818851541],
Cell[760, 26, 1200, 27, 79, "Usage",ExpressionUUID->"b0dc4d22-72ac-4015-b780-96e84d74be9f",
 CellID->6025608],
Cell[1963, 55, 673, 16, 28, "Notes",ExpressionUUID->"06e62db1-ccf8-4f68-be25-d3473a99337e",
 CellID->350026957],
Cell[2639, 73, 8478, 165, 558, "2ColumnTableMod",ExpressionUUID->"ff6d7b33-e4b1-4b37-8b7c-a81b384ce443",
 CellID->192372380],
Cell[11120, 240, 1026, 36, 66, "Notes",ExpressionUUID->"d34fb611-da8e-4d30-9faf-96c06e582517",
 CellID->23569687],
Cell[12149, 278, 1487, 43, 108, "Notes",ExpressionUUID->"68d2143c-882a-45b3-b5fc-31d7ccf89df4",
 CellID->39466738],
Cell[13639, 323, 676, 17, 28, "Notes",ExpressionUUID->"32383ee7-34f2-43f9-bc48-673259d9ea3d",
 CellID->154853298]
}, Open  ]],
Cell[CellGroupData[{
Cell[14352, 345, 434, 12, 40, "TechNotesSection",ExpressionUUID->"de5f6cf7-27f3-4cfc-b54d-dbbe13ff3189",
 CellID->13359459],
Cell[14789, 359, 99, 1, 19, "Tutorials",ExpressionUUID->"5f51a899-1a0d-4531-bb24-01677b84a5f3",
 CellID->62546640]
}, Open  ]],
Cell[CellGroupData[{
Cell[14925, 365, 472, 13, 39, "RelatedLinksSection",ExpressionUUID->"2bfb7cde-d1a5-4ff8-a062-20314ca879cd",
 CellID->328612988],
Cell[15400, 380, 103, 1, 19, "RelatedLinks",ExpressionUUID->"cebcdfd8-99ab-4fcc-a00e-7e788ba17bfc",
 CellID->289518276]
}, Open  ]],
Cell[CellGroupData[{
Cell[15540, 386, 458, 13, 39, "SeeAlsoSection",ExpressionUUID->"bcf40df6-75e5-4ea9-ab2c-61f28104f448",
 CellID->611502557],
Cell[16001, 401, 3647, 88, 42, "SeeAlso",ExpressionUUID->"901cb94b-8072-451f-907b-5d1d78baa0de",
 CellID->98480288]
}, Open  ]],
Cell[CellGroupData[{
Cell[19685, 494, 182, 2, 39, "MoreAboutSection",ExpressionUUID->"cd5f78c2-9e9d-445a-9ddd-885e20cada6a",
 CellID->77843704],
Cell[19870, 498, 99, 1, 19, "MoreAbout",ExpressionUUID->"c1cbb4fa-a228-4766-bbfd-5fa2d1a79223",
 CellID->75808018]
}, Open  ]],
Cell[CellGroupData[{
Cell[20006, 504, 529, 14, 69, "ExamplesInitializationSection",ExpressionUUID->"f814ef76-6307-45cd-8731-dc2725cfd669",
 CellID->70024969],
Cell[20538, 520, 5182, 77, 1451, "ExampleInitialization",ExpressionUUID->"bfbdeb00-2e0a-4c67-a87a-eb092ea3df92",
 CellID->137008383]
}, Open  ]],
Cell[CellGroupData[{
Cell[25757, 602, 440, 12, 71, "PrimaryExamplesSection",ExpressionUUID->"bfc6a0a0-cf46-4432-a2ed-eb193905b5e7",
 CellID->7945103],
Cell[26200, 616, 925, 20, 45, "ExampleText",ExpressionUUID->"4bbe0204-077d-4d0a-a654-e62324de733c",
 CellID->612628752],
Cell[27128, 638, 311, 7, 25, "Input",ExpressionUUID->"967455bc-b562-4392-aebf-9ec0af5715c1",
 CellID->45541709],
Cell[27442, 647, 309, 6, 24, "ExampleText",ExpressionUUID->"d1bacb34-cbe5-447d-a9da-92a733469b5a",
 CellID->598674459],
Cell[CellGroupData[{
Cell[27776, 657, 465, 9, 61, "Input",ExpressionUUID->"b6615f13-f1d9-4391-a7a8-9317ae08f822",
 CellID->457102273],
Cell[28244, 668, 271, 6, 24, "Output",ExpressionUUID->"58d763f4-9f39-4d16-a495-2edd9d927356",
 CellID->3502801],
Cell[28518, 676, 217, 4, 24, "Output",ExpressionUUID->"84d3b5c4-1e68-415f-b7e1-6e34002fe2a0",
 CellID->352726731],
Cell[28738, 682, 218, 4, 24, "Output",ExpressionUUID->"de126527-c364-488b-bf14-0b4308505be9",
 CellID->102864002]
}, Open  ]],
Cell[28971, 689, 347, 9, 26, "ExampleText",ExpressionUUID->"9a2bc54a-4095-4994-9414-3bb858acf3e6",
 CellID->10928972],
Cell[CellGroupData[{
Cell[29343, 702, 239, 4, 25, "Input",ExpressionUUID->"4e4024b9-206d-4607-afb5-859e68f8ae28",
 CellID->546878286],
Cell[29585, 708, 2266, 44, 370, "Output",ExpressionUUID->"bdd7b01d-ffb3-4977-a59a-a8a569682375",
 CellID->556856846]
}, Open  ]],
Cell[31866, 755, 249, 4, 24, "ExampleText",ExpressionUUID->"abad45f2-85f3-441a-8c64-6d9039c0bac4",
 CellID->290017938],
Cell[CellGroupData[{
Cell[32140, 763, 299, 5, 25, "Input",ExpressionUUID->"abdf26fe-74cd-455c-b752-9a85dcc89dab",
 CellID->676423889],
Cell[32442, 770, 249, 5, 24, "Output",ExpressionUUID->"0b55c7eb-87ca-48ab-90d7-f641baa3c3bc",
 CellID->983492630]
}, Open  ]],
Cell[32706, 778, 323, 6, 24, "ExampleText",ExpressionUUID->"91375961-3528-4ee1-ba5a-806963c695d8",
 CellID->416043477],
Cell[CellGroupData[{
Cell[33054, 788, 310, 5, 25, "Input",ExpressionUUID->"92961305-19d7-432d-9209-7e3936954fc6",
 CellID->212050636],
Cell[33367, 795, 428, 8, 42, "Output",ExpressionUUID->"72ebeab0-13a2-48a5-bcf5-123f5d0691cc",
 CellID->306936346]
}, Open  ]],
Cell[33810, 806, 262, 3, 24, "ExampleText",ExpressionUUID->"8d7cd2a4-a36a-46c4-9a2f-a89f35bde882",
 CellID->549014001],
Cell[CellGroupData[{
Cell[34097, 813, 516, 12, 43, "Input",ExpressionUUID->"62762aaf-a3d4-4445-b282-0d46e4fc6a22",
 CellID->337642245],
Cell[34616, 827, 1888, 59, 102, "Output",ExpressionUUID->"663be49a-0b5c-4482-b4d5-a936f83f86ac",
 CellID->130275292]
}, Open  ]],
Cell[36519, 889, 270, 5, 24, "ExampleText",ExpressionUUID->"366d2eb3-e8c8-49aa-a4e3-29d7ca7b7914",
 CellID->203547541],
Cell[CellGroupData[{
Cell[36814, 898, 350, 7, 25, "Input",ExpressionUUID->"983499a1-3882-459a-bdd8-42b789d145c9",
 CellID->249529850],
Cell[37167, 907, 206, 3, 24, "Output",ExpressionUUID->"4051ca67-998c-4b11-8cfe-1f1e2801356c",
 CellID->742463359]
}, Open  ]],
Cell[CellGroupData[{
Cell[37410, 915, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"c67beace-061f-414d-817a-dcca6ba128aa",
 CellID->263875320],
Cell[37655, 922, 354, 6, 24, "ExampleText",ExpressionUUID->"52191cad-252c-44c9-9cd4-3dcd433d9d7d",
 CellID->949070802],
Cell[CellGroupData[{
Cell[38034, 932, 438, 9, 43, "Input",ExpressionUUID->"fd0641b8-39be-4ecd-b7aa-91d297a2a883",
 CellID->13337868],
Cell[38475, 943, 4149, 68, 369, "Output",ExpressionUUID->"6e7e6dab-d088-4979-bb5a-66e75326149c",
 CellID->149520896]
}, Open  ]],
Cell[42639, 1014, 203, 2, 24, "ExampleText",ExpressionUUID->"e03345a0-f636-4216-91c2-06bfc93a18e3",
 CellID->269292096],
Cell[CellGroupData[{
Cell[42867, 1020, 414, 9, 25, "Input",ExpressionUUID->"d47e028f-a23a-4a62-8e59-b8b08eb1da6e",
 CellID->42695933],
Cell[43284, 1031, 8228, 141, 369, "Output",ExpressionUUID->"61c611a0-63d0-47be-b998-51b200a7669d",
 CellID->440869791]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51561, 1178, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"471b8c06-d3b0-480c-ade9-b49ed182d5da",
 CellID->153383421],
Cell[51806, 1185, 564, 12, 43, "ExampleText",ExpressionUUID->"f5dd5ec6-c405-4720-a073-4ab30341461b",
 CellID->127419070],
Cell[CellGroupData[{
Cell[52395, 1201, 913, 19, 113, "Input",ExpressionUUID->"b0d01208-4dd3-40a8-84f7-3803f79d260f",
 CellID->352165153],
Cell[53311, 1222, 75468, 1330, 310, "Output",ExpressionUUID->"09c50ae9-79e3-47a6-b800-8d92f818f292",
 CellID->271682166]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128840, 2559, 487, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"799a778c-b6de-4a0f-b467-4bf5627d27a6",
 CellTags->"ExtendedExamples",
 CellID->580082300],
Cell[CellGroupData[{
Cell[129352, 2576, 240, 5, 35, "ExampleSection",ExpressionUUID->"8dc97d29-bf52-43d2-9fe6-2c9a738aa3fb",
 CellID->95233038],
Cell[CellGroupData[{
Cell[129617, 2585, 201, 2, 24, "ExampleSubsection",ExpressionUUID->"2858ad80-4969-489b-9eec-df83d80b8b95",
 CellID->543049420],
Cell[129821, 2589, 354, 6, 41, "ExampleText",ExpressionUUID->"87be4e9d-6e8b-4291-947b-d51019738a32",
 CellID->294749313],
Cell[CellGroupData[{
Cell[130200, 2599, 394, 8, 43, "Input",ExpressionUUID->"5f6ba161-c0d1-4ba9-b590-42c3c8c967f7",
 CellID->501425585],
Cell[130597, 2609, 4150, 68, 369, "Output",ExpressionUUID->"07af7784-c29f-40e0-9e6f-d214c7f9501a",
 CellID->30272748]
}, Open  ]],
Cell[134762, 2680, 206, 2, 24, "ExampleText",ExpressionUUID->"f4335d4d-0e40-4d94-8589-aaa7f1725da5",
 CellID->187418973],
Cell[CellGroupData[{
Cell[134993, 2686, 281, 5, 25, "Input",ExpressionUUID->"765478ed-a90b-4341-91ac-7def6c42ab19",
 CellID->438025603],
Cell[135277, 2693, 10578, 229, 249, "Output",ExpressionUUID->"2f94c3b2-7c81-4363-a06a-8f26569e0dec",
 CellID->162496967]
}, Open  ]],
Cell[145870, 2925, 213, 2, 24, "ExampleText",ExpressionUUID->"acb9c219-b378-45ae-99b6-51a4d66c1062",
 CellID->9126526],
Cell[CellGroupData[{
Cell[146108, 2931, 402, 8, 43, "Input",ExpressionUUID->"837813ec-890a-4ece-b2a2-be35066a2414",
 CellID->29461772],
Cell[146513, 2941, 5165, 116, 250, "Output",ExpressionUUID->"17c2ef65-e3d8-4986-8ef5-00c011673899",
 CellID->265750952]
}, Open  ]],
Cell[151693, 3060, 369, 9, 26, "ExampleText",ExpressionUUID->"7bb098ba-2cba-4fae-8b22-b8fc0b1be6af",
 CellID->112576840],
Cell[CellGroupData[{
Cell[152087, 3073, 282, 5, 25, "Input",ExpressionUUID->"42539712-5967-4986-a905-c52d51263dfa",
 CellID->29327742],
Cell[152372, 3080, 1353, 28, 384, "Output",ExpressionUUID->"5eafdfbb-cb38-4f1d-b866-c9ce6c3b436e",
 CellID->514346976]
}, Open  ]],
Cell[153740, 3111, 237, 4, 24, "ExampleText",ExpressionUUID->"a52d52bc-86a2-46fb-a8c8-23c840b3e0a0",
 CellID->215594224],
Cell[CellGroupData[{
Cell[154002, 3119, 248, 4, 25, "Input",ExpressionUUID->"0e417333-7ada-4022-a52d-7ffe6f57c862",
 CellID->449181375],
Cell[154253, 3125, 21514, 502, 249, "Output",ExpressionUUID->"df36c623-0b73-49a0-839d-b3886c3920cb",
 CellID->132227595]
}, Open  ]],
Cell[175782, 3630, 213, 2, 24, "ExampleText",ExpressionUUID->"c64bb12c-64ee-458a-a017-b862675d02e4",
 CellID->304453909],
Cell[CellGroupData[{
Cell[176020, 3636, 247, 4, 25, "Input",ExpressionUUID->"dcec6703-ea2e-4a5f-8926-50e22765355f",
 CellID->190207803],
Cell[176270, 3642, 7934, 175, 250, "Output",ExpressionUUID->"7910d487-b0d1-4285-9db5-08678086f8d6",
 CellID->25911231]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184253, 3823, 176, 2, 24, "ExampleSubsection",ExpressionUUID->"8783a26d-30d9-4c77-9819-951039563e5e",
 CellID->77762580],
Cell[184432, 3827, 500, 8, 58, "ExampleText",ExpressionUUID->"c83ed37a-2c55-4edc-9be4-fec91ff5df6d",
 CellID->565783619],
Cell[CellGroupData[{
Cell[184957, 3839, 529, 12, 43, "Input",ExpressionUUID->"4a769f79-56e7-44a6-b8cf-bd7147de8d96",
 CellID->464781799],
Cell[185489, 3853, 3087, 102, 109, "Output",ExpressionUUID->"5955a9eb-57a1-49e8-be72-10b9cca23502",
 CellID->107358078]
}, Open  ]],
Cell[188591, 3958, 537, 9, 58, "ExampleText",ExpressionUUID->"2c615e83-7877-4e24-bf94-600f1042723d",
 CellID->214135134],
Cell[CellGroupData[{
Cell[189153, 3971, 241, 5, 20, "ExampleDelimiter",ExpressionUUID->"b3327004-eec4-457f-bcbe-ee591ea101d1",
 CellID->17659725],
Cell[189397, 3978, 294, 6, 24, "ExampleText",ExpressionUUID->"e3a7be65-013f-4dcc-809e-f5fca47e32f0",
 CellID->94632968],
Cell[CellGroupData[{
Cell[189716, 3988, 528, 12, 43, "Input",ExpressionUUID->"0a2c0dea-8e93-4211-962c-a756f14c2cfb",
 CellID->22802683],
Cell[190247, 4002, 2582, 85, 86, "Output",ExpressionUUID->"b7d753fa-c863-4eff-9c80-3d8f159c6c67",
 CellID->298039513]
}, Open  ]],
Cell[192844, 4090, 246, 4, 24, "ExampleText",ExpressionUUID->"c9ffc5fb-a128-4e5c-9ef8-ef8636e8c2f3",
 CellID->444774495]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[193129, 4099, 264, 5, 35, "ExampleSection",ExpressionUUID->"2dcbd134-e1cb-4602-a5d5-3a8af6493dff",
 CellID->112621000],
Cell[193396, 4106, 243, 5, 23, "ExampleSection",ExpressionUUID->"21a1338a-ab46-4bd4-a3a9-c6fa62dfb8d0",
 CellID->867392410],
Cell[CellGroupData[{
Cell[193664, 4115, 248, 5, 23, "ExampleSection",ExpressionUUID->"ab5b04f2-4fe0-493d-9f88-9018babe21d5",
 CellID->141635006],
Cell[CellGroupData[{
Cell[193937, 4124, 198, 2, 24, "ExampleSubsection",ExpressionUUID->"eef48d91-d59c-4ba1-beb0-d35f4216f8e0",
 CellID->445462844],
Cell[194138, 4128, 241, 4, 24, "ExampleText",ExpressionUUID->"009f8485-f021-4952-9445-d544cc00f67f",
 CellID->475614113],
Cell[CellGroupData[{
Cell[194404, 4136, 836, 16, 61, "Input",ExpressionUUID->"154fff0d-307d-4ca9-bb5f-ef3e0ae4f2fc",
 CellID->788814381],
Cell[195243, 4154, 4266, 90, 310, "Output",ExpressionUUID->"eaaf0cbe-f099-4af7-a3df-003a54dd5fd5",
 CellID->35405703]
}, Open  ]],
Cell[CellGroupData[{
Cell[199546, 4249, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"9e9cdcf3-8f82-4588-9035-9f1492926b3a",
 CellID->282811621],
Cell[199791, 4256, 723, 21, 41, "ExampleText",ExpressionUUID->"69d4245e-c9ac-4417-a01b-f1631605b1ba",
 CellID->283956275],
Cell[200517, 4279, 514, 11, 43, "Input",ExpressionUUID->"9bcfceb6-e4a1-41f7-8949-cf2bc6962c5e",
 CellID->437721174],
Cell[CellGroupData[{
Cell[201056, 4294, 988, 21, 96, "Input",ExpressionUUID->"f480f6f7-77f3-4ea1-830a-bb0420bc2853",
 CellID->101553327],
Cell[202047, 4317, 3964, 81, 310, "Output",ExpressionUUID->"5b52c0a7-27b1-4278-b533-27f0ae319161",
 CellID->451367204]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206084, 4406, 258, 5, 35, "ExampleSection",ExpressionUUID->"c8b9af1c-b68b-4d87-8081-d6e78ed84dab",
 CellID->379262136],
Cell[CellGroupData[{
Cell[206367, 4415, 213, 2, 24, "ExampleSubsection",ExpressionUUID->"99d532f9-442b-4181-b189-ad430fb8eb75",
 CellID->167086691],
Cell[206583, 4419, 195, 2, 24, "ExampleText",ExpressionUUID->"44de636d-0168-45dd-a48e-cc670a6dd971",
 CellID->164487619],
Cell[206781, 4423, 514, 11, 43, "Input",ExpressionUUID->"dce37fe1-6797-49d3-9e1f-afe5c65f62bc",
 CellID->140106855],
Cell[CellGroupData[{
Cell[207320, 4438, 565, 14, 43, "Input",ExpressionUUID->"c604b2a4-3227-47d7-b974-a01cb628911d",
 CellID->307115202],
Cell[207888, 4454, 9087, 160, 369, "Output",ExpressionUUID->"9d7271c8-24bc-44c9-9765-e2f9e5c70cda",
 CellID->41613907]
}, Open  ]],
Cell[CellGroupData[{
Cell[217012, 4619, 242, 5, 20, "ExampleDelimiter",ExpressionUUID->"3abbfa0f-dab6-42bc-a683-12977d89562c",
 CellID->113516019],
Cell[217257, 4626, 384, 7, 24, "ExampleText",ExpressionUUID->"0472c7c1-3ff0-4a3d-9a7a-c5201b3c99cf",
 CellID->927824170],
Cell[217644, 4635, 534, 12, 43, "Input",ExpressionUUID->"ac227f24-18b5-4738-b53e-a925230486e5",
 CellID->41592735],
Cell[CellGroupData[{
Cell[218203, 4651, 1578, 37, 131, "Input",ExpressionUUID->"b14f158e-2d55-45ce-b2be-9d282c44ac98",
 CellID->586296664],
Cell[219784, 4690, 8089, 133, 369, "Output",ExpressionUUID->"f7bff7cc-21c9-4006-b564-6c7947ae7560",
 CellID->311146558]
}, Open  ]],
Cell[227888, 4826, 276, 5, 24, "ExampleText",ExpressionUUID->"ba0ba225-ded6-423a-95c7-15736159ae19",
 CellID->234087562]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228213, 4837, 177, 2, 24, "ExampleSubsection",ExpressionUUID->"5ffba9ba-1609-4b6c-9bf9-dc1d9c6e6bbb",
 CellID->343948762],
Cell[228393, 4841, 564, 13, 26, "ExampleText",ExpressionUUID->"913b00c0-0fac-441c-a553-d4a60594596d",
 CellID->516762423],
Cell[CellGroupData[{
Cell[228982, 4858, 1508, 37, 166, "Input",ExpressionUUID->"b76eaa2a-04f0-45ce-9dfc-d7b5c2df87cb",
 CellID->817051585],
Cell[230493, 4897, 90710, 1506, 260, "Output",ExpressionUUID->"9cc88dee-ffef-48a1-b96c-9ce20b7a48fe",
 CellID->12592899]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[321242, 6408, 251, 5, 35, "ExampleSection",ExpressionUUID->"9a5ab386-47bf-4011-8ff6-9c7a54357014",
 CellID->108875503],
Cell[321496, 6415, 255, 5, 23, "ExampleSection",ExpressionUUID->"13d098dc-0335-45c4-bc92-e073b567cbc8",
 CellID->75626642],
Cell[321754, 6422, 249, 5, 23, "ExampleSection",ExpressionUUID->"7873e5a2-c799-4177-8bcb-9584e4ec3dfe",
 CellID->538049765]
}, Open  ]],
Cell[CellGroupData[{
Cell[322040, 6432, 110, 1, 72, "MetadataSection",ExpressionUUID->"6ce70d08-09f9-4204-bb5d-3407c202527f",
 CellID->635348524],
Cell[322153, 6435, 473, 11, 26, "History",ExpressionUUID->"283b0496-cb0e-4e00-82d3-f9490643b011",
 CellID->418083108],
Cell[CellGroupData[{
Cell[322651, 6450, 484, 13, 21, "CategorizationSection",ExpressionUUID->"e07c0241-f184-45f9-b3f1-ae9f8830dfcd",
 CellID->264458094],
Cell[323138, 6465, 134, 2, 70, "Categorization",ExpressionUUID->"03fd3ea1-a7d8-4398-be37-df409e1b0cf4",
 CellID->251389828],
Cell[323275, 6469, 159, 2, 70, "Categorization",ExpressionUUID->"8cc43cbd-7d09-490f-8086-a886f97bda90",
 CellID->148059144],
Cell[323437, 6473, 155, 2, 70, "Categorization",ExpressionUUID->"0bfcb3d3-d74f-45c7-9e60-7bd16e3c5bb2",
 CellID->48333672],
Cell[323595, 6477, 180, 3, 70, "Categorization",ExpressionUUID->"c489e917-01a4-483d-aa1e-f0573ca855ea",
 CellID->497429221]
}, Closed]],
Cell[CellGroupData[{
Cell[323812, 6485, 110, 1, 21, "KeywordsSection",ExpressionUUID->"34e18437-1897-48da-ab81-31f00a66ef7c",
 CellID->178236525],
Cell[323925, 6488, 99, 1, 70, "Keywords",ExpressionUUID->"7a3e6c0b-ba29-4a83-afbc-7d034bd43e9b",
 CellID->825298513]
}, Closed]],
Cell[CellGroupData[{
Cell[324061, 6494, 118, 1, 21, "TemplatesSection",ExpressionUUID->"9278dc6b-4ca9-43cb-95d5-7e4d157927d2",
 CellID->12174475],
Cell[324182, 6497, 148, 2, 70, "Template",ExpressionUUID->"829e97c0-d82f-4975-8c3f-35c137744ecb",
 CellID->263783096],
Cell[324333, 6501, 137, 2, 70, "Template",ExpressionUUID->"a4ce1930-1267-494e-9fca-70261735f676",
 CellID->557038958],
Cell[324473, 6505, 135, 2, 70, "Template",ExpressionUUID->"df3e331c-1aba-4946-b510-c5c5872fc963",
 CellID->289054446],
Cell[324611, 6509, 136, 2, 70, "Template",ExpressionUUID->"b48241f7-8d26-4cc5-848c-89000d8cdabd",
 CellID->36343278]
}, Closed]]
}, Open  ]]
}
]
*)

